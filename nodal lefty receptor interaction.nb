(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    576053,      11141]
NotebookOptionsPosition[    571242,      10978]
NotebookOutlinePosition[    571586,      10993]
CellTagsIndexPosition[    571543,      10990]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["supported calculation", "Section",
 CellChangeTimes->{{3.692710048442594*^9, 3.6927100584955626`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"calculating", " ", 
   SubscriptBox["k", "on"]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.692887151137433*^9, 3.6928871575655737`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["k", "off"], "=", "10000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["k", "d"], " ", "=", " ", 
   RowBox[{"6", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\n", 
 RowBox[{
  SubscriptBox["k", "on"], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "off"], "/", 
    SubscriptBox["k", "d"]}], " ", "*", " ", "1.7", " ", 
   RowBox[{"10", "^", 
    RowBox[{"-", "9"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.692710073921119*^9, 3.692710107332156*^9}, {
   3.692711023705613*^9, 3.6927110243549013`*^9}, 3.692881473367372*^9, {
   3.694875731157749*^9, 3.6948757312784505`*^9}, {3.694875980893984*^9, 
   3.6948759811129274`*^9}, {3.6948781044668026`*^9, 
   3.6948781283883286`*^9}, {3.694878231969035*^9, 3.6948782340986137`*^9}, {
   3.6948783249394684`*^9, 3.6948783333082476`*^9}, {3.6948788701249046`*^9, 
   3.694878882271979*^9}, {3.694885961533452*^9, 3.6948859642847013`*^9}, {
   3.694886538462638*^9, 3.694886568396744*^9}}],

Cell[BoxData["2.8333333333333335`"], "Output",
 CellChangeTimes->{
  3.6929942254693804`*^9, {3.6929942686869574`*^9, 3.6929942982195425`*^9}, 
   3.6929947141214085`*^9, 3.6929952455870504`*^9, 3.6929953412215004`*^9, 
   3.692995473488533*^9, 3.692995992348239*^9, {3.692996164343705*^9, 
   3.692996193321867*^9}, 3.69299631169238*^9, 3.692996437270002*^9, 
   3.6929964819995456`*^9, 3.692997167164383*^9, 3.6929972007790704`*^9, {
   3.6929973059349055`*^9, 3.6929973273588147`*^9}, 3.692997893898347*^9, 
   3.6929979253059936`*^9, 3.6929985212583165`*^9, 3.6930000500913897`*^9, 
   3.693000277242405*^9, 3.6930060763330493`*^9, {3.6930103159392467`*^9, 
   3.693010341449346*^9}, 3.6930118882790456`*^9, 3.693012818999174*^9, 
   3.693013270191829*^9, 3.693013425059982*^9, 3.6930333546657963`*^9, 
   3.693034310500084*^9, 3.6930932196127434`*^9, 3.693099090533434*^9, 
   3.6930991860983315`*^9, 3.69313221822503*^9, 3.693134105550932*^9, 
   3.693142030809531*^9, 3.6932509377969794`*^9, 3.69340540094311*^9, 
   3.693501421035223*^9, 3.6935028234238544`*^9, 3.693648879797309*^9, 
   3.693649541906487*^9, 3.693650340518631*^9, 3.693653000850402*^9, {
   3.694367770618132*^9, 3.694367805331377*^9}, 3.6943678876780457`*^9, {
   3.6943681763191614`*^9, 3.6943681818561225`*^9}, 3.69436936574749*^9, 
   3.694369502645015*^9, 3.694369975406074*^9, {3.694370325320769*^9, 
   3.6943703323894067`*^9}, 3.694370519178075*^9, {3.694370715940236*^9, 
   3.6943707452955837`*^9}, {3.694370828158185*^9, 3.694370859966648*^9}, {
   3.694371652147362*^9, 3.6943716618085756`*^9}, {3.694371801270335*^9, 
   3.694371851548834*^9}, 3.694371948282657*^9, 3.694371996960949*^9, 
   3.6943720535211377`*^9, 3.6943720961561637`*^9, 3.694372224886566*^9, 
   3.694372264438302*^9, 3.6943722977180586`*^9, 3.694373554862007*^9, 
   3.694373619047101*^9, 3.69437368669514*^9, 3.6943737456228266`*^9, 
   3.694373793526683*^9, 3.694373825450734*^9, {3.6943738749945498`*^9, 
   3.694373905373704*^9}, 3.694374004761176*^9, 3.6943752581847873`*^9, {
   3.6943821278550377`*^9, 3.694382151136492*^9}, 3.6943821939248686`*^9, 
   3.6943822986803436`*^9, 3.694382511802*^9, 3.6947895846789007`*^9, 
   3.6948617840456676`*^9, 3.6948621570201855`*^9, 3.6948757364764357`*^9, 
   3.6948757984745693`*^9, {3.6948759598458033`*^9, 3.6948759818317423`*^9}, {
   3.694878105571041*^9, 3.6948781287720313`*^9}, {3.694878223263674*^9, 
   3.694878240801365*^9}, {3.6948783254314165`*^9, 3.6948783338561573`*^9}, {
   3.6948788711870785`*^9, 3.6948788827720165`*^9}, 3.694880298265092*^9, 
   3.6948859819226503`*^9, {3.694886539760246*^9, 3.694886568897235*^9}, 
   3.694889176225047*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Bold", ",", 
          RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], "]"}], "&"}], 
     "@", "\"\<\!\(\*SubscriptBox[\(K\), \(on\)]\):\>\""}], ",", 
    SubscriptBox["k", "on"], ",", 
    "\"\< ... this is used to compute binding radius\>\""}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.692881771489852*^9, 3.6928817717190914`*^9}, {
  3.692882041584479*^9, 3.692882069698986*^9}, {3.6928821041691637`*^9, 
  3.6928821280101085`*^9}, {3.6928871641331434`*^9, 3.6928871655326643`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(on\\)]\\):\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->16,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "2.8333333333333335`",
    "\[InvisibleSpace]", "\<\" ... this is used to compute binding \
radius\"\>"}],
  SequenceForm[
   Style["\!\(\*SubscriptBox[\(K\), \(on\)]\):", {
     RGBColor[0, 0, 1], Bold, FontSize -> 16}], 2.8333333333333335`, 
   " ... this is used to compute binding radius"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.692882053240155*^9, 3.6928820701341763`*^9}, {
   3.6928821155352573`*^9, 3.6928821233271313`*^9}, 3.692887165795101*^9, 
   3.6929942254708853`*^9, {3.692994268702587*^9, 3.6929942982195425`*^9}, 
   3.692994714137034*^9, 3.6929952455870504`*^9, 3.6929953412371197`*^9, 
   3.692995473488533*^9, 3.692995992363869*^9, {3.69299616435933*^9, 
   3.692996193337508*^9}, 3.6929963117080145`*^9, 3.692996437270002*^9, 
   3.6929964820216784`*^9, 3.6929971671800084`*^9, 3.6929972007790704`*^9, {
   3.692997305950531*^9, 3.6929973273588147`*^9}, 3.6929978939139614`*^9, 
   3.6929979253059936`*^9, 3.692998521280468*^9, 3.6930000500993953`*^9, 
   3.6930002772504063`*^9, 3.6930060763330493`*^9, {3.693010315954856*^9, 
   3.6930103414649715`*^9}, 3.6930118883006964`*^9, 3.6930128190148015`*^9, 
   3.693013270191829*^9, 3.6930134250912333`*^9, 3.693033354680334*^9, 
   3.6930343105131073`*^9, 3.6930932196352606`*^9, 3.6930990905524797`*^9, 
   3.69309918610935*^9, 3.6931322182520485`*^9, 3.6931341055599413`*^9, 
   3.693142030831031*^9, 3.6932509378126044`*^9, 3.693405400979154*^9, 
   3.6935014210508485`*^9, 3.693502823432372*^9, 3.693648879812923*^9, 
   3.693649541906487*^9, 3.693650340518631*^9, 3.693653000850402*^9, {
   3.6943677706337595`*^9, 3.694367805331377*^9}, 3.6943678876780457`*^9, {
   3.6943681763347816`*^9, 3.6943681818717513`*^9}, 3.694369365763115*^9, 
   3.694369502645015*^9, 3.694369975406074*^9, {3.694370325320769*^9, 
   3.6943703323894067`*^9}, 3.694370519178075*^9, {3.694370715940236*^9, 
   3.6943707453112087`*^9}, {3.694370828161691*^9, 3.694370859982274*^9}, {
   3.694371652147362*^9, 3.6943716618241873`*^9}, {3.694371801285982*^9, 
   3.694371851548834*^9}, 3.69437194830281*^9, 3.6943719969765863`*^9, 
   3.694372053536742*^9, 3.6943720961762886`*^9, 3.694372224886566*^9, 
   3.694372264453909*^9, 3.6943722977336903`*^9, 3.694373554862007*^9, 
   3.694373619062725*^9, 3.6943736867107754`*^9, 3.6943737456384497`*^9, 
   3.6943737935423098`*^9, 3.694373825450734*^9, {3.6943738750101748`*^9, 
   3.694373905373704*^9}, 3.6943740047833176`*^9, 3.6943752582004256`*^9, {
   3.694382127870674*^9, 3.694382151136492*^9}, 3.69438219394051*^9, 
   3.694382298688871*^9, 3.6943825118201437`*^9, 3.6947895846945267`*^9, 
   3.6948617840612593`*^9, 3.69486215702769*^9, 3.6948757365004525`*^9, 
   3.694875798482562*^9, 3.694875959851807*^9, 3.694878240809372*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "below", " ", "is", " ", "probability", " ", "generated", " ", "for", " ", 
   "a", " ", "1", "st", " ", "order", " ", "reaction"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.692881793139111*^9, 3.6928818036665516`*^9}, {
  3.6928819190874567`*^9, 3.69288191924772*^9}, {3.6928822128565345`*^9, 
  3.6928822259619985`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]t", " ", "=", " ", 
    RowBox[{"1", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", " ", "us", " ", "time"}], "-", "step"}], " ", "*)"}]}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], "]"}], "&"}], "@", 
    "\"\<\!\(\*SubscriptBox[\(P\), \(dissociation\)]\):\>\""}], ",", 
   RowBox[{"1.", " ", "-", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["k", "off"], " ", "\[Delta]t"}], ")"}]}], "]"}]}], ",", 
   "\"\< ... if random number is less than this ligand/receptor complex \
dissociates\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.69288186072154*^9, 3.692882019867095*^9}, {
  3.6928820737404437`*^9, 3.692882074829219*^9}, {3.692882151368919*^9, 
  3.6928821949295187`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(dissociation\\)]\\):\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->16,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", 
   "0.009950166250831893`", 
   "\[InvisibleSpace]", "\<\" ... if random number is less than this \
ligand/receptor complex dissociates\"\>"}],
  SequenceForm[
   Style["\!\(\*SubscriptBox[\(P\), \(dissociation\)]\):", {
     RGBColor[0, 0, 1], Bold, FontSize -> 16}], 0.009950166250831893, 
   " ... if random number is less than this ligand/receptor complex \
dissociates"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.692881976453435*^9, 3.692882020111357*^9}, 
   3.6928820750010605`*^9, 3.6928821641550355`*^9, 3.692882195635066*^9, 
   3.692994225486988*^9, {3.692994268702587*^9, 3.692994298241678*^9}, 
   3.6929947141591673`*^9, 3.6929952456026545`*^9, 3.6929953412527456`*^9, 
   3.692995473504159*^9, 3.692995992379489*^9, {3.6929961643749557`*^9, 
   3.6929961933531337`*^9}, 3.6929963117080145`*^9, 3.6929964372856216`*^9, 
   3.692996482037306*^9, 3.692997167195634*^9, 3.692997200794713*^9, {
   3.692997305966152*^9, 3.692997327374434*^9}, 3.6929978939361296`*^9, 
   3.692997925321638*^9, 3.692998521280468*^9, 3.693000050111904*^9, 
   3.693000277263421*^9, 3.6930060763551784`*^9, {3.6930103159704924`*^9, 
   3.693010341480596*^9}, 3.6930118883006964`*^9, 3.6930128190148015`*^9, 
   3.6930132702074585`*^9, 3.6930134251068583`*^9, 3.69303335470569*^9, 
   3.693034310535513*^9, 3.693093219652272*^9, 3.693099090571545*^9, 
   3.6930991861233797`*^9, 3.693132218274567*^9, 3.6931341055759478`*^9, 
   3.693142030846863*^9, 3.6932509378347406`*^9, 3.6934054010041723`*^9, 
   3.6935014210664735`*^9, 3.6935028234453707`*^9, 3.69364887982856*^9, 
   3.6936495419221125`*^9, 3.693650340534256*^9, 3.693653000866028*^9, {
   3.6943677706493845`*^9, 3.6943678053469877`*^9}, 3.694367887693836*^9, {
   3.6943681763347816`*^9, 3.6943681818717513`*^9}, 3.694369365763115*^9, 
   3.694369502660653*^9, 3.6943699754277105`*^9, {3.694370325336378*^9, 
   3.694370332405031*^9}, 3.6943705191937*^9, {3.69437071595586*^9, 
   3.6943707453112087`*^9}, {3.6943708281773186`*^9, 
   3.6943708599984026`*^9}, {3.6943716521629877`*^9, 
   3.6943716618241873`*^9}, {3.694371801285982*^9, 3.694371851564473*^9}, 
   3.694371948304813*^9, 3.6943719969765863`*^9, 3.694372053536742*^9, 
   3.694372096177789*^9, 3.694372224902383*^9, 3.694372264453909*^9, 
   3.6943722977336903`*^9, 3.694373554877632*^9, 3.694373619078857*^9, 
   3.6943736867107754`*^9, 3.6943737456384497`*^9, 3.6943737935423098`*^9, 
   3.694373825466361*^9, {3.6943738750101748`*^9, 3.6943739053893175`*^9}, 
   3.6943740047833176`*^9, 3.694375258216037*^9, {3.694382127886283*^9, 
   3.6943821511521015`*^9}, 3.69438219395613*^9, 3.694382298700571*^9, 
   3.6943825118241434`*^9, 3.6947895847151823`*^9, 3.694861784076886*^9, 
   3.6948621570396986`*^9, 3.694875736513462*^9, 3.694875798494584*^9, 
   3.6948759598638287`*^9, 3.694878240826383*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "receptor", " ", "concentration", " ", "and", " ", "ligand", " ", 
   "concentration"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.692887044326101*^9, 3.692887052187101*^9}, {
  3.6928871303763194`*^9, 3.6928871325222473`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ligandconc", " ", "=", " ", 
   RowBox[{"100", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "9"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"d", " ", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.", "/", 
       RowBox[{"(", 
        RowBox[{"ligandconc", " ", "*", " ", "6", " ", 
         RowBox[{"10", "^", "23"}]}], ")"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "3"}], ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", "dm", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Bold", ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], "]"}], "&"}], 
     "@", "\"\<spacing between ligands: \>\""}], ",", 
    RowBox[{"d", "*", " ", "1", " ", 
     RowBox[{"10", "^", "8"}]}], ",", "\"\< nm\>\""}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"dm", " ", "\[Rule]", " ", "nm"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6928874842838807`*^9, 3.692887514661765*^9}, {
   3.69288760790053*^9, 3.692887792524851*^9}, {3.6928878398361306`*^9, 
   3.6928878782141647`*^9}, {3.6928879132093325`*^9, 3.6928879229781103`*^9}, 
   3.6928880610682373`*^9, {3.692888769056919*^9, 3.692888769290241*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"spacing between ligands: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->14,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "255.4364774645179`", 
   "\[InvisibleSpace]", "\<\" nm\"\>"}],
  SequenceForm[
   Style["spacing between ligands: ", {
     RGBColor[0, 0, 1], Bold, FontSize -> 14}], 255.4364774645179, " nm"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6928878728452797`*^9, 3.692887878667214*^9}, {
   3.692887920593629*^9, 3.6928879231937747`*^9}, 3.692888066146342*^9, 
   3.6928887694536867`*^9, 3.692994225502619*^9, {3.692994268718193*^9, 
   3.692994298241678*^9}, 3.692994714174797*^9, 3.6929952456182947`*^9, 
   3.6929953412683697`*^9, 3.692995473519783*^9, 3.692995992395152*^9, {
   3.692996164390581*^9, 3.6929961933687587`*^9}, 3.6929963117236423`*^9, 
   3.692996437301248*^9, 3.692996482037306*^9, 3.692997167211259*^9, 
   3.692997200810337*^9, {3.692997305981778*^9, 3.6929973273900585`*^9}, 
   3.692997893951756*^9, 3.6929979253372574`*^9, 3.6929985212961035`*^9, 
   3.6930000501244125`*^9, 3.693000277276924*^9, 3.6930060763551784`*^9, {
   3.6930103159861193`*^9, 3.693010341480596*^9}, 3.6930118883167734`*^9, 
   3.693012819030427*^9, 3.6930132702230887`*^9, 3.6930134251225023`*^9, 
   3.6930333547277184`*^9, 3.693034310558285*^9, 3.6930932196732855`*^9, 
   3.6930990905895824`*^9, 3.6930991861368876`*^9, 3.693132218292082*^9, 
   3.693134105587971*^9, 3.6931420308781*^9, 3.6932509378503666`*^9, 
   3.6934054010381985`*^9, 3.693501421082099*^9, 3.6935028234603744`*^9, 
   3.69364887982856*^9, 3.69364954193775*^9, 3.693650340534256*^9, 
   3.693653000881653*^9, {3.6943677706493845`*^9, 3.6943678053469877`*^9}, 
   3.694367887693836*^9, {3.6943681763504057`*^9, 3.694368181893894*^9}, 
   3.694369365778728*^9, 3.694369502676276*^9, 3.694369975428224*^9, {
   3.694370325352006*^9, 3.6943703324206567`*^9}, 3.6943705192093244`*^9, {
   3.694370715971485*^9, 3.6943707453268337`*^9}, {3.6943708281773186`*^9, 
   3.6943708600049067`*^9}, {3.694371652178613*^9, 3.694371661846319*^9}, {
   3.69437180130159*^9, 3.694371851580098*^9}, 3.6943719483204517`*^9, 
   3.6943719969922104`*^9, 3.6943720535523663`*^9, 3.694372096193489*^9, 
   3.694372224902383*^9, 3.694372264469535*^9, 3.694372297749295*^9, 
   3.694373554877632*^9, 3.6943736867324*^9, 3.6943737456540823`*^9, 
   3.6943737935579348`*^9, 3.694373825481984*^9, {3.6943738750257998`*^9, 
   3.6943739054049373`*^9}, 3.6943740047989445`*^9, 3.694375258216037*^9, {
   3.6943821279019194`*^9, 3.694382151174238*^9}, 3.694382193971755*^9, 
   3.694382298700571*^9, 3.6943825118397846`*^9, 3.6947895847161756`*^9, 
   3.6948617840925107`*^9, 3.6948621570497055`*^9, 3.6948757365270033`*^9, 
   3.6948757985086007`*^9, 3.6948759598758245`*^9, 3.6948782408383913`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"receptorconc", " ", "=", " ", 
   RowBox[{"40", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"d", " ", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"receptorconc", " ", "*", " ", "6", " ", 
         RowBox[{"10", "^", "23"}]}], ")"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "3."}], ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", "dm", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Bold", ",", 
           RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], "]"}], "&"}], 
      "@", "\"\<spacing between receptors: \>\""}], ",", 
     RowBox[{"d", "*", " ", "1", " ", 
      RowBox[{"10", "^", "8"}]}], ",", "\"\< nm\>\""}], "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"dm", " ", "\[Rule]", " ", "nm"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.692887932360951*^9, 3.6928879718326497`*^9}, 
   3.6928880625303345`*^9, {3.692888132285529*^9, 3.692888186729121*^9}, {
   3.6928887654378185`*^9, 3.692888765623358*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"spacing between receptors: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->14,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "34.668063717531766`",
    "\[InvisibleSpace]", "\<\" nm\"\>"}],
  SequenceForm[
   Style["spacing between receptors: ", {
     RGBColor[0, 0, 1], Bold, FontSize -> 14}], 34.668063717531766`, " nm"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.692887939059952*^9, 3.6928879728696394`*^9}, 
   3.6928880629676304`*^9, {3.692888133289652*^9, 3.692888159475318*^9}, 
   3.692888192816043*^9, 3.6928884290556526`*^9, 3.692888765850331*^9, 
   3.692994225502619*^9, {3.692994268736338*^9, 3.692994298257306*^9}, 
   3.692994714174797*^9, 3.6929952456339235`*^9, 3.6929953412840014`*^9, 
   3.692995473541416*^9, 3.692995992401679*^9, {3.692996164390581*^9, 
   3.6929961933687587`*^9}, 3.6929963117392673`*^9, 3.6929964373219037`*^9, 
   3.6929964820529313`*^9, 3.692997167211259*^9, 3.692997200825968*^9, {
   3.6929973059973984`*^9, 3.692997327410709*^9}, 3.692997893951756*^9, 
   3.6929979253528824`*^9, 3.692998521311721*^9, 3.6930000501314173`*^9, 
   3.693000277283929*^9, 3.693006076370807*^9, {3.6930103159861193`*^9, 
   3.6930103415012407`*^9}, 3.6930118883324156`*^9, 3.6930128190460515`*^9, 
   3.6930132702230887`*^9, 3.6930134251431303`*^9, 3.6930333547417283`*^9, 
   3.693034310566305*^9, 3.693093219682294*^9, 3.6930990905985756`*^9, 
   3.6930991861438913`*^9, 3.6931322183010874`*^9, 3.693134105596966*^9, 
   3.6931420308937435`*^9, 3.6932509378659916`*^9, 3.693405401054209*^9, 
   3.693501421082099*^9, 3.6935028234683943`*^9, 3.6936488798441725`*^9, 
   3.69364954193775*^9, 3.6936503405498943`*^9, 3.693653000881653*^9, {
   3.6943677706650095`*^9, 3.694367805362611*^9}, 3.6943678877094474`*^9, {
   3.6943681763504057`*^9, 3.694368181893894*^9}, 3.694369365778728*^9, 
   3.694369502676276*^9, 3.694369975443886*^9, {3.694370325352006*^9, 
   3.6943703324206567`*^9}, 3.6943705192093244`*^9, {3.694370715971485*^9, 
   3.6943707453424587`*^9}, {3.694370828192944*^9, 3.6943708600049067`*^9}, {
   3.694371652178613*^9, 3.694371661846319*^9}, {3.69437180130159*^9, 
   3.694371851580098*^9}, 3.6943719483204517`*^9, 3.6943719969922104`*^9, 
   3.6943720535523663`*^9, 3.6943720962091117`*^9, 3.694372224918007*^9, 
   3.694372264469535*^9, 3.694372297749295*^9, 3.6943735548932557`*^9, 
   3.6943736867324*^9, 3.6943737456540823`*^9, 3.6943737935579348`*^9, 
   3.694373825481984*^9, {3.6943738750257998`*^9, 3.6943739054049373`*^9}, 
   3.6943740047989445`*^9, 3.694375258235671*^9, {3.69438212792407*^9, 
   3.694382151174238*^9}, 3.694382193971755*^9, 3.6943822987162123`*^9, 
   3.6943825118397846`*^9, 3.694789584732001*^9, 3.6948617840925107`*^9, 
   3.6948621570562105`*^9, 3.6948757365334945`*^9, 3.6948757985154676`*^9, 
   3.694875959882842*^9, 3.694878240845397*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "how", " ", "many", " ", "ligands", " ", "and", " ", "receptors", " ", "in",
    " ", "the", " ", "simulation", " ", "box"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.692888534449921*^9, 3.6928885480687065`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], "]"}], "&"}], "@", 
    "\"\<simulation box (0.6932 um vs 0.6932 um), ligand num: \>\""}], ",", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.6932", " ", 
       RowBox[{"10", "^", "3"}], " ", "0.6932", " ", 
       RowBox[{"10", "^", "3"}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", "255.436", ")"}], "^", "2"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6928885517374077`*^9, 3.6928886424091234`*^9}, {
  3.6928887808391314`*^9, 3.692888796854644*^9}, {3.692992220263863*^9, 
  3.692992234210222*^9}, {3.692992266431571*^9, 3.692992272536028*^9}, {
  3.694875782318742*^9, 3.6948757862127028`*^9}, {3.6948778284595127`*^9, 
  3.694877844223774*^9}, {3.6948782882304*^9, 3.6948782962667108`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"simulation box (0.6932 um vs 0.6932 um), ligand num: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->14,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "7"}],
  SequenceForm[
   Style["simulation box (0.6932 um vs 0.6932 um), ligand num: ", {
     RGBColor[0, 0, 1], Bold, FontSize -> 14}], 7],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6928886292639313`*^9, 3.692888642651345*^9}, {
   3.692888781220336*^9, 3.692888797231727*^9}, 3.6929922367092*^9, 
   3.6929923465171385`*^9, 3.692994225518238*^9, {3.692994268740342*^9, 
   3.692994298272932*^9}, 3.692994714190422*^9, 3.6929952456545753`*^9, 
   3.6929953412840014`*^9, 3.692995473541416*^9, 3.692995992417323*^9, {
   3.692996164412716*^9, 3.6929961933843784`*^9}, 3.6929963117548933`*^9, 
   3.692996437322897*^9, 3.6929964820685687`*^9, 3.692997167226884*^9, 
   3.6929972008415847`*^9, {3.692997306016286*^9, 3.6929973274116907`*^9}, 
   3.6929978939673953`*^9, 3.6929979253685074`*^9, 3.6929985213273463`*^9, 
   3.693000050143918*^9, 3.693000277296932*^9, 3.6930060763864307`*^9, {
   3.6930103160082655`*^9, 3.693010341502242*^9}, 3.693011888348036*^9, 
   3.6930128190460515`*^9, 3.693013270238722*^9, 3.6930134251441307`*^9, 
   3.693033354765746*^9, 3.693034310589308*^9, 3.6930932196958036`*^9, 
   3.6930990906145864`*^9, 3.693099186156887*^9, 3.6931322183221035`*^9, 
   3.693134105610507*^9, 3.6931420309093695`*^9, 3.6932509378816166`*^9, 
   3.6934054010817485`*^9, 3.693501421097724*^9, 3.693502823483388*^9, 
   3.6936488798597975`*^9, 3.693649541953376*^9, 3.6936503405498943`*^9, 
   3.693653000897278*^9, {3.6943677706650095`*^9, 3.694367805362611*^9}, 
   3.6943678877094474`*^9, {3.6943681763660355`*^9, 3.6943681819095335`*^9}, 
   3.694369365794353*^9, 3.6943695026919017`*^9, 3.6943699754595127`*^9, {
   3.6943703253741446`*^9, 3.694370332436282*^9}, 3.6943705192249527`*^9, {
   3.6943707159931345`*^9, 3.6943707453424587`*^9}, {3.6943708282085695`*^9, 
   3.6943708600205355`*^9}, {3.6943716521942377`*^9, 
   3.6943716618619475`*^9}, {3.6943718013172274`*^9, 3.6943718515957093`*^9}, 
   3.6943719483360767`*^9, 3.6943719970143404`*^9, 3.6943720535744996`*^9, 
   3.6943720962247467`*^9, 3.694372224918007*^9, 3.69437226448516*^9, 
   3.69437229776492*^9, 3.6943735548932557`*^9, 3.694373686748245*^9, 
   3.6943737456762304`*^9, 3.6943737935735607`*^9, 3.6943738254991136`*^9, {
   3.6943738750414248`*^9, 3.6943739054205694`*^9}, 3.69437400481457*^9, 
   3.6943752582381763`*^9, {3.6943821279397097`*^9, 3.694382151189865*^9}, 
   3.694382193993907*^9, 3.694382298731839*^9, 3.6943825118554125`*^9, 
   3.694789584747629*^9, 3.6948617841081524`*^9, 3.694862157065217*^9, 
   3.694875736544781*^9, 3.6948757985274878`*^9, 3.694875959894368*^9, 
   3.694877859601823*^9, 3.6948782408564043`*^9, 3.694878297058049*^9, 
   3.6948803038994355`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], "]"}], "&"}], "@", 
    "\"\<simulation box (0.6932 um by 0.6932 um), receptor num: \>\""}], ",", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.6932", " ", 
       RowBox[{"10", "^", "3"}], " ", "0.6932", " ", 
       RowBox[{"10", "^", "3"}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", "34.66", ")"}], "^", "2"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.692888660469859*^9, 3.692888760685046*^9}, {
  3.6928888056847916`*^9, 3.6928888093570414`*^9}, {3.6929922559856358`*^9, 
  3.6929923055902576`*^9}, {3.6948757913533707`*^9, 3.694875794518462*^9}, {
  3.694878302265829*^9, 3.6948783092092857`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"simulation box (0.6932 um by 0.6932 um), receptor num: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->14,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "400"}],
  SequenceForm[
   Style["simulation box (0.6932 um by 0.6932 um), receptor num: ", {
     RGBColor[0, 0, 1], Bold, FontSize -> 14}], 400],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6928886881402392`*^9, 3.6928887211697645`*^9}, {
   3.6928887515837946`*^9, 3.6928887615244627`*^9}, 3.692888809647401*^9, {
   3.6929922816824265`*^9, 3.692992307473865*^9}, 3.692992348979698*^9, 
   3.692994225518238*^9, {3.692994268755982*^9, 3.692994298272932*^9}, 
   3.692994714190422*^9, 3.6929952456560583`*^9, 3.692995341306145*^9, 
   3.6929954735571775`*^9, 3.692995992417323*^9, {3.692996164412716*^9, 
   3.6929961934045286`*^9}, 3.6929963117548933`*^9, 3.6929964373389707`*^9, 
   3.6929964820685687`*^9, 3.6929971672485323`*^9, 3.6929972008415847`*^9, {
   3.6929973060197906`*^9, 3.6929973274273973`*^9}, 3.692997893983019*^9, 
   3.6929979253685074`*^9, 3.6929985213429756`*^9, 3.693000050151431*^9, 
   3.69300027730593*^9, 3.6930060763864307`*^9, {3.6930103160082655`*^9, 
   3.693010341518042*^9}, 3.693011888348036*^9, 3.693012819061677*^9, 
   3.693013270259345*^9, 3.6930134251601963`*^9, 3.6930333547772417`*^9, 
   3.6930343105983267`*^9, 3.693093219703809*^9, 3.693099090622582*^9, 
   3.6930991861639056`*^9, 3.693132218331109*^9, 3.6931341056175213`*^9, 
   3.693142030930025*^9, 3.693250937897242*^9, 3.693405401094286*^9, 
   3.6935014211173553`*^9, 3.69350282349041*^9, 3.6936488798597975`*^9, 
   3.693649541953376*^9, 3.6936503405655065`*^9, 3.693653000897278*^9, {
   3.694367770680635*^9, 3.6943678053782363`*^9}, 3.6943678877250724`*^9, {
   3.6943681763660355`*^9, 3.6943681819095335`*^9}, 3.694369365794353*^9, 
   3.6943695026919017`*^9, 3.6943699754595127`*^9, {3.6943703253741446`*^9, 
   3.6943703324519067`*^9}, 3.6943705192249527`*^9, {3.6943707159931345`*^9, 
   3.694370745364107*^9}, {3.6943708282085695`*^9, 3.6943708600361605`*^9}, {
   3.6943716521942377`*^9, 3.6943716618619475`*^9}, {3.6943718013328533`*^9, 
   3.6943718515957093`*^9}, 3.6943719483360767`*^9, 3.6943719970143404`*^9, 
   3.6943720535744996`*^9, 3.6943720962247467`*^9, 3.694372224933632*^9, 
   3.69437226448516*^9, 3.69437229776492*^9, 3.6943735549128895`*^9, 
   3.694373686748245*^9, 3.6943737456762304`*^9, 3.6943737935735607`*^9, 
   3.6943738255041313`*^9, {3.6943738750414248`*^9, 3.6943739054205694`*^9}, 
   3.69437400481457*^9, 3.6943752582381763`*^9, {3.6943821279397097`*^9, 
   3.694382151189865*^9}, 3.694382193993907*^9, 3.694382298731839*^9, 
   3.6943825118554125`*^9, 3.694789584747629*^9, 3.6948617841253066`*^9, 
   3.694862157065217*^9, 3.694875736550786*^9, 3.6948757985334864`*^9, 
   3.694875959900868*^9, 3.694878240863409*^9, 3.694878309481771*^9, 
   3.694880302267435*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["helper functions", "Section",
 CellChangeTimes->{{3.6925384727983055`*^9, 3.6925384789843216`*^9}}],

Cell[CellGroupData[{

Cell["diffuse ligands", "Subsection",
 CellChangeTimes->{{3.6925385256399207`*^9, 3.6925385374507666`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", 
   RowBox[{"2", "*", "60.", "*", "1", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"step", " ", "for", " ", "diffusion"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6926891202747097`*^9, 3.692689137773493*^9}, {
  3.6928262175923233`*^9, 3.6928262262053976`*^9}, {3.693097209978942*^9, 
  3.6930972501607327`*^9}, {3.6930985129839287`*^9, 3.6930985181378746`*^9}, {
  3.693098576744543*^9, 3.6930985806003942`*^9}, {3.6930986136766615`*^9, 
  3.6930986877883873`*^9}, {3.6930988488578997`*^9, 3.693098880921124*^9}, {
  3.693099003781722*^9, 3.6930990069068365`*^9}, {3.693099052184869*^9, 
  3.693099057070119*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["0.010954451150103323`"], "Output",
 CellChangeTimes->{{3.692689135021332*^9, 3.6926891379416776`*^9}, 
   3.692689176933276*^9, 3.6926911945575447`*^9, 3.6927043167484703`*^9, 
   3.692716098581106*^9, {3.692780586169547*^9, 3.692780609394343*^9}, 
   3.6928176626301823`*^9, 3.6929942255494785`*^9, {3.692994268771624*^9, 
   3.6929942983041816`*^9}, 3.6929947142594304`*^9, 3.6929952456717157`*^9, 
   3.692995341321784*^9, 3.6929954735728045`*^9, 3.692995992432943*^9, {
   3.692996164428342*^9, 3.69299619342218*^9}, 3.692996311788662*^9, 
   3.6929964373702326`*^9, 3.6929964820998073`*^9, 3.6929971672643337`*^9, 
   3.69299720085721*^9, {3.6929973060666857`*^9, 3.6929973274430275`*^9}, 
   3.6929975252048683`*^9, 3.6929978940142703`*^9, 3.6929979254062595`*^9, 
   3.6929985213772316`*^9, 3.693000050187608*^9, 3.6930002773399534`*^9, 
   3.6930060764020643`*^9, {3.693010316055163*^9, 3.6930103415493097`*^9}, 
   3.693011888400936*^9, 3.693012819146316*^9, 3.6930132703233733`*^9, 
   3.693013425207072*^9, 3.6930333548564425`*^9, 3.6930343106608605`*^9, 
   3.6930932197816267`*^9, {3.693097210647783*^9, 3.6930972508299603`*^9}, {
   3.693098515303009*^9, 3.6930985186228056`*^9}, {3.6930986139831257`*^9, 
   3.6930986880716558`*^9}, {3.6930988493256044`*^9, 3.693098881660264*^9}, {
   3.6930990072497883`*^9, 3.693099020014923*^9}, {3.6930990542569733`*^9, 
   3.6930990574915376`*^9}, 3.6930990910255413`*^9, 3.693099186218474*^9, 
   3.693132218418662*^9, 3.6931341056485434`*^9, 3.6931420310093575`*^9, 
   3.6932509379975214`*^9, 3.69340540116232*^9, 3.6935014211979866`*^9, 
   3.6935028235563555`*^9, 3.6936488799285836`*^9, 3.693649542006767*^9, 
   3.6936503406186523`*^9, 3.693653000966288*^9, {3.694367770680635*^9, 
   3.6943678053782363`*^9}, 3.6943678877250724`*^9, {3.6943681763660355`*^9, 
   3.6943681819095335`*^9}, 3.6943693658099775`*^9, 3.6943695026919017`*^9, 
   3.6943699754751244`*^9, {3.6943703253897734`*^9, 3.6943703324519067`*^9}, 
   3.6943705192405753`*^9, {3.6943707160090065`*^9, 3.694370745364107*^9}, {
   3.694370828224194*^9, 3.6943708600361605`*^9}, {3.6943716521942377`*^9, 
   3.6943716618619475`*^9}, {3.6943718013328533`*^9, 3.6943718515957093`*^9}, 
   3.6943719483360767`*^9, 3.6943719970143404`*^9, 3.694372053590126*^9, 
   3.6943720962403975`*^9, 3.694372224949258*^9, 3.694372264500785*^9, 
   3.6943722977805567`*^9, 3.694373554915393*^9, 3.6943736867638683`*^9, 
   3.6943737456918697`*^9, 3.6943737935891857`*^9, 3.6943738255041313`*^9, {
   3.6943738750570583`*^9, 3.694373905441208*^9}, 3.694374004830195*^9, 
   3.6943752582538023`*^9, {3.6943821279553223`*^9, 3.694382151205491*^9}, 
   3.6943821940095453`*^9, 3.694382298747449*^9, 3.6943825118710384`*^9, 
   3.6947895847632513`*^9, 3.69486178413031*^9, 3.694862157080845*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"brownianWalk", "[", 
   RowBox[{"index_", ",", "elem_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"oldpos", " ", "=", " ", 
       RowBox[{"elem", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "step", ",", 
      RowBox[{"tag", " ", "=", " ", 
       RowBox[{"elem", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"step", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.0109545"}], "]"}], "]"}], ",", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.0109545"}], "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"index", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"tag", ",", 
        RowBox[{"oldpos", "+", "step"}]}], "}"}]}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.6925535912645836`*^9, 3.6925537135851803`*^9}, {
  3.692553802344427*^9, 3.6925539040190115`*^9}, {3.6925539376754303`*^9, 
  3.6925539423056192`*^9}, {3.692635082301462*^9, 3.6926351269514294`*^9}, {
  3.692684176481155*^9, 3.6926841793403587`*^9}, {3.692688891784646*^9, 
  3.692688908729864*^9}, {3.6929968616603093`*^9, 3.6929968639757366`*^9}, {
  3.6929973559407635`*^9, 3.692997380503375*^9}, {3.6929974195802054`*^9, 
  3.6929974245646276`*^9}, {3.692998237125409*^9, 3.6929982405568557`*^9}, {
  3.6930990387525105`*^9, 3.693099082724209*^9}, {3.6943719444195113`*^9, 
  3.6943719472513685`*^9}, {3.694372260137698*^9, 3.6943722632691813`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BrownianFunc", "[", "assoc_", "]"}], ":=", " ", 
  RowBox[{"Association", "@", 
   RowBox[{"KeyValueMap", "[", 
    RowBox[{"brownianWalk", ",", "assoc"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.692538327636627*^9, 3.6925383342022343`*^9}, {
  3.69255351356741*^9, 3.6925535448084774`*^9}, {3.6925535757429743`*^9, 
  3.692553585926533*^9}, {3.6925539535192537`*^9, 3.69255395875072*^9}, {
  3.692613523171011*^9, 3.692613527917699*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["boundary-condition checks for ligands", "Subsection",
 CellChangeTimes->{{3.6925385256399207`*^9, 3.6925385374507666`*^9}, {
  3.692555091443239*^9, 3.6925551053215413`*^9}, {3.6925551436264367`*^9, 
  3.692555169284423*^9}, {3.6925556585847063`*^9, 3.6925556639533167`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"periodicityBoundaries", "[", 
   RowBox[{"finalpt_", ",", "clistupdate_"}], "]"}], ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"minX", "=", "0"}], ",", 
      RowBox[{"minY", " ", "=", "0"}], ",", " ", 
      RowBox[{"maxY", "=", "0.6932"}], ",", " ", 
      RowBox[{"maxX", " ", "=", " ", "0.6932"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", 
        RowBox[{"clist", "=", "clistupdate"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], " ", "=", " ", "finalpt"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"x", "<", "minX"}], ",", 
         RowBox[{
          RowBox[{"x", "=", 
           RowBox[{"maxX", " ", "+", " ", "x"}]}], ";", 
          RowBox[{
           RowBox[{"clist", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-=", "1"}], ";"}], ",", 
         RowBox[{"x", ">", "maxX"}], ",", 
         RowBox[{
          RowBox[{"x", " ", "=", " ", 
           RowBox[{"x", "-", "maxX"}]}], ";", 
          RowBox[{
           RowBox[{"clist", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+=", "1"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"y", "<", "minY"}], ",", 
         RowBox[{
          RowBox[{"y", " ", "=", " ", 
           RowBox[{"maxY", "+", "y"}]}], ";", 
          RowBox[{
           RowBox[{"clist", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-=", "1"}], ";"}], ",", 
         RowBox[{"y", ">", "maxY"}], ",", 
         RowBox[{
          RowBox[{"y", " ", "=", 
           RowBox[{"y", "-", "maxY"}]}], ";", 
          RowBox[{
           RowBox[{"clist", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+=", "1"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", "clist"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.692559715503319*^9, 3.692559801559676*^9}, {
   3.6925600607535524`*^9, 3.692560067806293*^9}, {3.6925617192242947`*^9, 
   3.6925617197399273`*^9}, {3.6925621390400934`*^9, 
   3.6925621632807684`*^9}, {3.692562212760458*^9, 3.6925622154974003`*^9}, {
   3.6925629531251345`*^9, 3.6925629881528664`*^9}, {3.6925630206838245`*^9, 
   3.692563053802191*^9}, {3.6925631376595583`*^9, 3.69256314164357*^9}, {
   3.6925662525837765`*^9, 3.692566275405856*^9}, {3.692566306641595*^9, 
   3.692566445792365*^9}, {3.692566493868903*^9, 3.6925664950996675`*^9}, {
   3.692566566561988*^9, 3.6925666148443995`*^9}, {3.692605130997038*^9, 
   3.692605144227003*^9}, {3.692983774644862*^9, 3.692983810508964*^9}, {
   3.6929839260335135`*^9, 3.6929839363473635`*^9}, {3.6929921531398993`*^9, 
   3.692992155609676*^9}, {3.692993587467128*^9, 3.6929937539520893`*^9}, {
   3.6929955848319173`*^9, 3.6929955934990983`*^9}, 3.6929971232223864`*^9, 
   3.6929971535824213`*^9, {3.692997262515676*^9, 3.692997264046517*^9}, {
   3.6930000376578226`*^9, 3.6930000376593237`*^9}, {3.693000224299709*^9, 
   3.69300022430121*^9}, {3.6930002694405146`*^9, 3.693000269442011*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BCchecks", "[", 
   RowBox[{"ligandstruct_", ",", "clist_"}], "]"}], ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"minY", " ", "=", " ", "0"}], ",", " ", 
      RowBox[{"maxY", " ", "=", " ", "0.6932"}], ",", 
      RowBox[{"minX", " ", "=", " ", "0"}], ",", 
      RowBox[{"maxX", " ", "=", " ", "0.6932"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ligandind", ",", " ", "ligandpos", ",", "threadList", ",", 
        RowBox[{"countlist", "=", "clist"}], ",", "res1", ",", "res2"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ligandind", "=", " ", 
        RowBox[{"Keys", "@", "ligandstruct"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ligandpos", " ", "=", " ", 
        RowBox[{"Values", "@", 
         RowBox[{"ligandstruct", " ", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"threadList", "=", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"ligandind", ",", "ligandpos"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"threadList", " ", "=", " ", 
        RowBox[{"threadList", "/.", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x_", "?", "IntegerQ"}], ",", "pos_List"}], " ", "}"}], "/;", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{"minY", "\[LessEqual]", 
                RowBox[{"pos", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "maxY"}], 
               ")"}]}], " ", "||", " ", 
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{"minX", "\[LessEqual]", 
                RowBox[{"pos", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "maxX"}], 
               ")"}]}]}], ")"}]}], "\[RuleDelayed]", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"res1", ",", "res2"}], "}"}], "=", 
               RowBox[{"periodicityBoundaries", "[", 
                RowBox[{"pos", ",", 
                 RowBox[{"countlist", "[", 
                  RowBox[{"[", "x", "]"}], "]"}]}], "]"}]}], ";", 
              RowBox[{
               RowBox[{"countlist", "[", 
                RowBox[{"[", "x", "]"}], "]"}], "=", "res2"}], ";", "res1"}], 
             ")"}]}], "}"}]}]}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "can", " ", "be", " ", "simplified", " ", "by", " ", "using", " ", 
         "region"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"threadList", ",", "countlist"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6925552145240045`*^9, 3.692555230350913*^9}, {
   3.6925556185449915`*^9, 3.6925556198064823`*^9}, {3.692555840539007*^9, 
   3.6925558651990557`*^9}, {3.692557387782487*^9, 3.6925574832142763`*^9}, {
   3.6925575529895477`*^9, 3.692557625610075*^9}, {3.6925577105070524`*^9, 
   3.6925577424528575`*^9}, {3.6925578554704447`*^9, 
   3.6925578600159273`*^9}, {3.6925579654328814`*^9, 3.692557995703847*^9}, {
   3.6925581332626877`*^9, 3.692558212848675*^9}, {3.6925582438412876`*^9, 
   3.692558246908615*^9}, {3.692558747319565*^9, 3.6925587798293176`*^9}, {
   3.692558889761104*^9, 3.6925589506480293`*^9}, {3.6925590610104446`*^9, 
   3.6925590707920485`*^9}, {3.692559135228594*^9, 3.692559135659732*^9}, {
   3.6925593304396753`*^9, 3.692559391901238*^9}, {3.692559453890506*^9, 
   3.6925596318044343`*^9}, {3.6925597562142863`*^9, 
   3.6925597593820205`*^9}, {3.692559805836622*^9, 3.692559806636063*^9}, {
   3.692559843068571*^9, 3.692559849468566*^9}, {3.692559995069833*^9, 
   3.69256002197871*^9}, {3.692605067064335*^9, 3.6926050729627523`*^9}, {
   3.692629995149437*^9, 3.6926299997866497`*^9}, {3.692983505289794*^9, 
   3.692983507709694*^9}, {3.692983556712329*^9, 3.6929836181512055`*^9}, {
   3.6929837654859753`*^9, 3.6929837658640466`*^9}, {3.6929849084956565`*^9, 
   3.6929849252411575`*^9}, {3.6929921625779767`*^9, 3.692992165739616*^9}, {
   3.692993160396469*^9, 3.6929931655110655`*^9}, {3.692993197667737*^9, 
   3.69299320061926*^9}, {3.6929932941511607`*^9, 3.692993309560335*^9}, 
   3.692993573786703*^9, {3.692993763349148*^9, 3.692993793593285*^9}, {
   3.6929938324063225`*^9, 3.692993876419886*^9}, {3.692993943206122*^9, 
   3.692993944353161*^9}, {3.692993983907751*^9, 3.692994034062113*^9}, {
   3.692994068251762*^9, 3.6929940776172113`*^9}, {3.692995237073044*^9, 
   3.6929952401347957`*^9}, {3.6929953297213984`*^9, 3.692995338205862*^9}, {
   3.6929953985868745`*^9, 3.6929954295334225`*^9}, {3.6929954681741705`*^9, 
   3.6929954707734*^9}, 3.692995603294592*^9, 3.6929956728876953`*^9, {
   3.692995905876236*^9, 3.6929959893020334`*^9}, {3.6929971147767467`*^9, 
   3.6929971179758797`*^9}, {3.692997267284112*^9, 3.692997268983782*^9}, {
   3.692998495738387*^9, 3.692998506385577*^9}, {3.6930000376638308`*^9, 
   3.6930000376658163`*^9}, {3.6930002243062267`*^9, 
   3.6930002243077145`*^9}, {3.693000269443513*^9, 3.693000269445013*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["interaction between receptors and ligands", "Subsection",
 CellChangeTimes->{{3.6925385256399207`*^9, 3.6925385374507666`*^9}, {
  3.692555091443239*^9, 3.6925551053215413`*^9}, {3.6925551436264367`*^9, 
  3.692555169284423*^9}, {3.6925556585847063`*^9, 3.6925556639533167`*^9}, {
  3.6926060227623353`*^9, 3.6926060242303653`*^9}, {3.692606083982557*^9, 
  3.692606088800552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nearestFunction", "[", 
   RowBox[{
   "ligandList_", ",", "bindingrad_", ",", "membraneIndex_", ",", 
    "membranepts_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "freeReceptors", ",", "receptormap", ",", "interactions", ",", 
       "ligandlist"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ligandlist", " ", "=", " ", "ligandList"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"free", " ", "ligands"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"freeReceptors", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"membraneIndex", ",", 
         RowBox[{
          RowBox[{"PatternSequence", "[", 
           RowBox[{"x_", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"y_List", ",", "0", ",", "None", ",", "None"}], "}"}]}], 
           "]"}], "\[RuleDelayed]", " ", 
          RowBox[{"y", "\[Rule]", " ", "x"}]}]}], "]"}]}], " ", ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "determine", " ", "free", " ", "receptors", " ", "and", " ", "invert", 
        " ", "the", " ", "index", " ", "and", " ", "positions", " ", "for", 
        " ", "making", " ", "nearest", " ", "function"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"receptormap", " ", "=", " ", 
       RowBox[{"Nearest", "[", "freeReceptors", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "creates", " ", "a", " ", "nearest", " ", "function", " ", "from", " ",
         "the", " ", "freereceptors"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"interactions", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Reap", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", "particle", "}"}], ",", 
               RowBox[{"Sow", "[", 
                RowBox[{
                 RowBox[{"particle", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"receptormap", "[", 
                  RowBox[{
                   RowBox[{"particle", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "bindingrad"}], "}"}]}], "]"}]}], 
                "]"}]}], "]"}], ",", "ligandlist"}], "]"}], ",", "_", ",", 
           "List"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"DeleteDuplicatesBy", "[", 
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x_Integer", ",", 
                RowBox[{"{", 
                 RowBox[{"y_Integer", ",", "z___Integer"}], "}"}]}], "}"}], 
              "\[RuleDelayed]", " ", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], ",", "2"}], "]"}], ",", 
           "Last"}], "]"}], "&"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "this", " ", "finds", " ", "the", " ", "nearest", " ", "receptor", 
         " ", "to", " ", "a", " ", "ligand", " ", "within", " ", "a", " ", 
         "defined", " ", 
         RowBox[{"radius", ".", " ", "since"}], " ", "many", " ", "ligands", 
         " ", "maybe", " ", "close", " ", "to", " ", "a", " ", "receptor", 
         " ", "we", " ", "can", " ", "use", " ", "replace", " ", "to", " ", 
         "limit", " ", "the", " ", "interaction", " ", "to", " ", "a", " ", 
         "single", " ", "receptor"}], "-", 
        RowBox[{
        "ligand", " ", "pair", " ", "for", " ", "all", " ", "interacting", 
         " ", "receptors"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Reverse", "[", 
       RowBox[{"interactions", ",", "2"}], "]"}]}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"reversing", " ", "the", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"receptor", ",", " ", "ligand"}], "}"}], ".."}], "}"}], " ", 
      "pairs", " ", "and", " ", "exporting", " ", "from", " ", "module"}], 
     " ", "*)"}], " ", "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"membraneIndex", ",", "0", ",", "3"}], "]"}], ">", "0"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Length", "@", "ligandList"}], ">", "0", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "run", " ", "module", " ", "only", " ", "if", " ", "free", " ", 
       "receptors", " ", "are", " ", "present", " ", "as", " ", "well", " ", 
       "as", " ", "free", " ", "ligands"}], " ", "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6926061977974477`*^9, 3.692606199734607*^9}, {
   3.6926065714290447`*^9, 3.692606587160248*^9}, 3.692607113997755*^9, {
   3.69260729372857*^9, 3.69260733268079*^9}, {3.69260736278508*^9, 
   3.6926074097302012`*^9}, {3.6926074755971413`*^9, 
   3.6926075057135625`*^9}, {3.692610702226867*^9, 3.6926107053728037`*^9}, {
   3.692611015364071*^9, 3.692611019797287*^9}, 3.692633710798485*^9, {
   3.692689161412505*^9, 3.6926891657799425`*^9}, {3.6929585741029525`*^9, 
   3.6929585924679947`*^9}, {3.6929790622970977`*^9, 3.692979069747692*^9}, {
   3.6930333500714436`*^9, 3.6930333503850517`*^9}, 3.693099181711131*^9, {
   3.693105225562814*^9, 3.6931052324446697`*^9}, {3.6935027341098766`*^9, 
   3.6935027350880823`*^9}, {3.6936485118857765`*^9, 3.693648515157407*^9}, {
   3.6936495040072117`*^9, 3.6936495069707327`*^9}, {3.6936495395531673`*^9, 
   3.6936495405907793`*^9}, {3.693650332117427*^9, 3.693650337818137*^9}, {
   3.693652989866319*^9, 3.6936529957968636`*^9}, {3.6943750588396044`*^9, 
   3.694375063135931*^9}, {3.69437522385675*^9, 3.694375246535097*^9}, {
   3.6943824907064238`*^9, 3.6943824987435317`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"biasSharedReceptors", "[", 
   RowBox[{"nod_", ",", "left_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nodal", "=", "nod"}], ",", 
       RowBox[{"lefty", "=", "left"}], ",", "union", ",", "probability"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"union", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"nodal", ",", "lefty"}], "]"}], ",", "Last"}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", "x_"}], "}"}], ".."}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "part", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"probability", " ", "=", " ", 
            RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"probability", ">", "0.5"}], ",", "\[IndentingNewLine]", 
             RowBox[{"lefty", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Delete", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Position", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{"part", ",", "#"}], "]"}]}]}], "]"}]}]}], "]"}], 
                "&"}], "@", "lefty"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"nodal", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Delete", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Position", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{"part", ",", "#"}], "]"}]}]}], "]"}]}]}], "]"}], 
                "&"}], "@", "nodal"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], ",", "union"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "@", 
       RowBox[{"{", 
        RowBox[{"nodal", ",", "lefty"}], "}"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"nod", "=!=", 
      RowBox[{"{", "}"}]}], " ", "&&", " ", 
     RowBox[{"left", " ", "=!=", 
      RowBox[{"{", "}"}]}]}], ")"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "If", " ", "a", " ", "receptor", " ", "is", " ", "interacting", " ", 
      "with", " ", "ligands", " ", "of", " ", "different", " ", "types", " ", 
      "at", " ", "the", " ", "same", " ", "time"}], ",", " ", 
     RowBox[{
     "bias", " ", "the", " ", "system", " ", "to", " ", "choose", " ", 
      "one"}]}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6926107581052628`*^9, 3.692610770267556*^9}, {
  3.6926108812095747`*^9, 3.6926109074846373`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindingEvent", "[", 
   RowBox[{"membraneIndex_", ",", 
    RowBox[{"{", 
     RowBox[{"ligandpos_", ",", "receptorpos_"}], "}"}], ",", "ligandnom_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "coord", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coord", " ", "=", " ", 
      RowBox[{
       RowBox[{"membraneIndex", "[", 
        RowBox[{"[", "receptorpos", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"membraneIndex", ",", 
       RowBox[{"receptorpos", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{"receptorpos", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"coord", ",", "1", ",", "ligandpos", ",", "ligandnom"}], 
           "}"}]}], ")"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "for", " ", "successful", " ", "interactions", " ", "make", " ", "the", 
      " ", "receptor", " ", "unavailable", " ", "for", " ", "further", " ", 
      "binding"}], ";", " ", 
     RowBox[{
     "associate", " ", "the", " ", "unavailability", " ", "index", " ", "of", 
      " ", "1"}]}], ",", " ", 
    RowBox[{"ligand", "-", 
     RowBox[{"type", " ", "and", " ", "ligand", " ", "index"}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.69261100406603*^9, {3.69263318079735*^9, 3.6926331813651733`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"interAct", "[", 
   RowBox[{"specie_", ",", "membraneind_", ",", 
    RowBox[{"interactingspecies", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_", ",", "_"}], "}"}], ".."}], "}"}]}], ",", "ligandname_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"membraneIndUpdate", ",", "successligand", ",", 
       RowBox[{"specielist", " ", "=", " ", "specie"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"membraneIndUpdate", " ", "=", " ", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"bindingEvent", "[", 
           RowBox[{"#1", ",", "#2", ",", "ligandname"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"membraneind", ",", 
           RowBox[{
            RowBox[{"##", "&"}], "@@", "interactingspecies"}]}], "}"}]}], 
        "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "run", " ", "bindingEvent", " ", "module", " ", "for", " ", 
        "successful", " ", "interactions"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"successligand", " ", "=", " ", 
       RowBox[{
        RowBox[{"#", "&"}], "@@@", "interactingspecies"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "all", " ", "the", " ", "ligands", " ", "that", " ", "have", " ", 
        "successfully", " ", "interacted"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"specielist", " ", "=", " ", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"list", ",", "index"}], "}"}], ",", 
           RowBox[{"list", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"y_", ",", 
                RowBox[{"{", 
                 RowBox[{"_", ",", "_"}], "}"}]}], "}"}], "/;", 
              RowBox[{"y", "\[Equal]", "index"}]}], "\[RuleDelayed]", " ", 
             RowBox[{"Sequence", "[", "]"}]}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"specielist", ",", 
           RowBox[{
            RowBox[{"##", "&"}], "@@", "successligand"}]}], "}"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "deleting", " ", "successful", " ", "ligands", " ", "from", " ", "the",
         " ", "ligandlist"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"specielist", ",", "membraneIndUpdate"}], "}"}]}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "sending", " ", "the", " ", "list", " ", "of", " ", "updated", " ", 
       "ligandlist"}], ",", " ", 
      RowBox[{
      "ligandindex", " ", "and", " ", "membraneindex", " ", "out", " ", "of", 
       " ", "module"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"membraneind", ",", "0", ",", "3"}], "]"}], ">", "0"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Length", "@", "specie"}], ">", "0", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "execute", " ", "the", " ", "module", " ", "only", " ", "if", " ", "a", 
       " ", "free", " ", "receptor", " ", "is", " ", "present"}], " ", 
      "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{
  3.692610868151718*^9, {3.69261099371515*^9, 3.6926110090655384`*^9}, {
   3.692611436393853*^9, 3.6926114523398943`*^9}, {3.692611485143824*^9, 
   3.6926115261144056`*^9}, {3.6926116006693816`*^9, 
   3.6926116030893426`*^9}, {3.6926117009398565`*^9, 
   3.6926117033864546`*^9}, {3.6926334401884527`*^9, 3.6926334405514097`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["dissociation of complex", "Subsection",
 CellChangeTimes->{{3.6925385256399207`*^9, 3.6925385374507666`*^9}, {
  3.692555091443239*^9, 3.6925551053215413`*^9}, {3.6925551436264367`*^9, 
  3.692555169284423*^9}, {3.6925556585847063`*^9, 3.6925556639533167`*^9}, {
  3.6926060227623353`*^9, 3.6926060242303653`*^9}, {3.692606083982557*^9, 
  3.692606088800552*^9}, {3.692995553848465*^9, 3.6929955615319157`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dissociateCoord", "[", 
   RowBox[{"pt_List", ",", "unbindrad_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "newpt", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"newpt", " ", "=", 
     RowBox[{"RandomPoint", "[", 
      RowBox[{"Circle", "[", 
       RowBox[{"pt", ",", "unbindrad"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6929790903505344`*^9, 3.692979112412551*^9}, {
   3.6929820102900305`*^9, 3.692982015889056*^9}, {3.692982578131987*^9, 
   3.692982616198657*^9}, {3.692982646634972*^9, 3.692982650150549*^9}, {
   3.692983047801795*^9, 3.6929830804397016`*^9}, {3.6929831207164183`*^9, 
   3.6929831217323785`*^9}, {3.6929831742206016`*^9, 
   3.6929832242522154`*^9}, {3.692983274775627*^9, 3.6929833305147305`*^9}, {
   3.6929840548273783`*^9, 3.692984080014231*^9}, {3.6929841906952333`*^9, 
   3.692984258817082*^9}, 3.6929854893371677`*^9, {3.6929859927435455`*^9, 
   3.6929859928122377`*^9}, {3.6929863275274363`*^9, 
   3.6929863291591625`*^9}, {3.6929963039077063`*^9, 3.692996307439376*^9}, {
   3.693502699478309*^9, 3.693502699707592*^9}, {3.6936486492235003`*^9, 
   3.6936486504763803`*^9}, {3.693648779621256*^9, 3.6936487921683483`*^9}, {
   3.6936488520159407`*^9, 3.6936488690121317`*^9}, {3.694374280465412*^9, 
   3.6943742928787327`*^9}, {3.6943751665544605`*^9, 3.694375175298436*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.", "-", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", "10000"}], "*", "1", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.693132256502735*^9, 3.693132271941482*^9}, 
   3.693133579551417*^9}],

Cell[BoxData["0.009950166250831893`"], "Output",
 CellChangeTimes->{
  3.6931335800043507`*^9, 3.6931341057217236`*^9, 3.6931420311092553`*^9, 
   3.6931506886724806`*^9, 3.69325093808216*^9, 3.693405401255432*^9, 
   3.6935014212670116`*^9, 3.6935028236164*^9, 3.693648879992607*^9, 
   3.6936495420536375`*^9, 3.693650340665533*^9, 3.6936530010131645`*^9, {
   3.694367770734023*^9, 3.6943678054472513`*^9}, 3.694367887777958*^9, {
   3.694368176435051*^9, 3.69436818197202*^9}, 3.6943693658632803`*^9, 
   3.6943695027453012`*^9, 3.694369975544669*^9, {3.694370325452273*^9, 
   3.6943703325361614`*^9}, 3.6943705193092585`*^9, {3.6943707160715094`*^9, 
   3.694370745442695*^9}, {3.6943708282932067`*^9, 3.694370860104669*^9}, {
   3.6943716522476263`*^9, 3.694371661924448*^9}, {3.6943718013861756`*^9, 
   3.6943718516647234`*^9}, 3.6943719484025745`*^9, 3.694371997076841*^9, 
   3.6943720536370144`*^9, 3.694372096293788*^9, 3.694372225002923*^9, 
   3.6943722645541267`*^9, 3.694372297849336*^9, 3.694373554977898*^9, 
   3.6943736868288765`*^9, 3.6943737457543707`*^9, 3.694373793658199*^9, 
   3.6943738255666513`*^9, {3.694373875126072*^9, 3.694373905489205*^9}, 
   3.694374004899207*^9, 3.6943752583329334`*^9, {3.69438212802437*^9, 
   3.6943821512745*^9}, 3.6943821940720453`*^9, 3.6943822988008633`*^9, 
   3.694382511924431*^9, 3.694789584816142*^9, 3.694861784192825*^9, 
   3.6948621571277204`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"unbindingMechanics", "[", 
   RowBox[{"membraneind_", ",", "ligandlist_", ",", 
    RowBox[{"ligandname_", "?", "StringQ"}], ",", "unbindingrad_"}], "]"}], ":=",
   " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"membraneInd", "=", "membraneind"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ligandList", "=", "ligandlist"}], ",", "boundSpecies", ",", 
       " ", "probability", ",", "position", ",", "dissocligand"}], "}"}], ",",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"boundSpecies", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"membraneInd", ",", 
         RowBox[{
          RowBox[{"PatternSequence", "[", 
           RowBox[{"_Integer", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p1_", ",", "p2_"}], "}"}], ",", "1", ",", "y_", ",", 
              "ligandname"}], "}"}]}], "]"}], "\[RuleDelayed]", " ", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"{", 
             RowBox[{"p1", ",", "p2"}], "}"}]}], "}"}]}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "finding", " ", "all", " ", "the", " ", "bound", " ", "ligands", " ", 
        "from", " ", "membraneindex", " ", "and", " ", "placing", " ", 
        "their", " ", "index", " ", "together", " ", "with", " ", "receptor", 
        " ", "position"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"probability", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], ",", 
         RowBox[{"Length", "@", "boundSpecies"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "lets", " ", "generate", " ", "probabilities", " ", "equal", " ", "to",
         " ", "the", " ", "number", " ", "of", " ", "bound", " ", "species"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"position", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"probability", ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[LessEqual]", "0.00995017"}], "&"}], ")"}]}]}], 
        "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"find", " ", "positions", " ", "of", " ", "successful", " ", 
         RowBox[{"dissociations", ".", " ", "Prob"}]}], " ", "=", " ", 
        RowBox[{"1", " ", "-", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"koff", " ", "*", " ", "\[Delta]t"}], ")"}]}], "]"}]}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dissocligand", " ", "=", " ", 
       RowBox[{
        RowBox[{"boundSpecies", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "@", "position"}], "]"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "find", " ", "all", " ", "the", " ", "ligands", " ", "that", " ", 
        "have", " ", "been", " ", "dissociated"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"membraneInd", " ", "=", " ", 
       RowBox[{"Replace", "[", 
        RowBox[{"membraneInd", ",", 
         RowBox[{
          RowBox[{"PatternSequence", "[", 
           RowBox[{"x_Integer", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p1_", ",", "p2_"}], "}"}], ",", "1", ",", 
              RowBox[{"Alternatives", "@@", "dissocligand"}], ",", 
              "ligandname"}], "}"}]}], "]"}], "\[RuleDelayed]", " ", 
          RowBox[{"(", 
           RowBox[{"x", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p1", ",", "p2"}], "}"}], ",", "0", ",", "None", ",", 
              "None"}], "}"}]}], ")"}]}], ",", "1"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "freeing", " ", "up", " ", "the", " ", "membrane", " ", "receptors", 
        " ", "available", " ", "for", " ", "successful", " ", 
        "dissociations"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ligandList", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Fold", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Insert", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"dissociateCoord", "[", 
                 RowBox[{
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", "unbindingrad"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"-", "1"}]}], "]"}], "&"}], ",", "ligandList", ",", 
           RowBox[{"boundSpecies", "[", 
            RowBox[{"[", 
             RowBox[{"Flatten", "@", "position"}], "]"}], "]"}]}], "]"}], " ",
          ",", "First"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "adding", " ", "the", " ", "ligand", " ", "back", " ", "to", " ", 
        "the", " ", "ligand", " ", "list", " ", "together", " ", "with", " ", 
        "its", " ", "position"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"membraneInd", ",", "ligandList"}], "}"}]}]}], "  ", 
    RowBox[{"(*", " ", 
     RowBox[{"sending", " ", "the", " ", "updated", " ", 
      RowBox[{"{", 
       RowBox[{"membraneindex", ",", " ", "ligandlist", ",", "ligandindex"}], 
       "}"}], " ", "out", " ", "of", " ", "module"}], " ", "*)"}], 
    "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"membraneind", ",", "ligandname", ",", "3"}], "]"}], ">", "0", 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "run", " ", "only", " ", "if", " ", "the", " ", "particular", " ", 
      "ligand", " ", "bound"}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6890830883834543`*^9, 3.6890831001258383`*^9}, {
   3.6890831706657286`*^9, 3.6890831833609395`*^9}, {3.689083221744999*^9, 
   3.6890832295241947`*^9}, {3.6890832598370175`*^9, 
   3.6890832698017197`*^9}, {3.6890833012590075`*^9, 3.689083323788252*^9}, {
   3.689084263735565*^9, 3.689084280145955*^9}, {3.6890843135472455`*^9, 
   3.689084353675317*^9}, {3.689085041735279*^9, 3.689085296869334*^9}, {
   3.689085334046743*^9, 3.689085529068557*^9}, {3.689085590444647*^9, 
   3.6890856589065037`*^9}, {3.689085712558285*^9, 3.6890857489007025`*^9}, {
   3.6890859593516293`*^9, 3.689086007900046*^9}, {3.689086071289113*^9, 
   3.6890860732043705`*^9}, {3.68910647229241*^9, 3.6891064804452186`*^9}, {
   3.6891065219700513`*^9, 3.689106526406112*^9}, {3.689106675885251*^9, 
   3.6891067924882827`*^9}, {3.6891068398619323`*^9, 3.6891068439583006`*^9}, 
   3.6891069003403883`*^9, {3.6891070205771694`*^9, 3.6891070332311926`*^9}, {
   3.6891072671550283`*^9, 3.689107274423048*^9}, {3.689108155773509*^9, 
   3.689108155873389*^9}, {3.689110871763006*^9, 3.6891108739318347`*^9}, 
   3.689110904075761*^9, {3.6891110388358746`*^9, 3.689111039534438*^9}, {
   3.6891115704124002`*^9, 3.6891115944524803`*^9}, {3.689111711411474*^9, 
   3.6891117344221096`*^9}, 3.6891122596695023`*^9, {3.6891659584656277`*^9, 
   3.6891659677991996`*^9}, {3.6891667643983765`*^9, 3.6891668179212065`*^9}, 
   3.689166889727294*^9, {3.6891692473443937`*^9, 3.6891692556676292`*^9}, 
   3.689169946528355*^9, {3.689264957756592*^9, 3.6892649579035716`*^9}, {
   3.6892654906759377`*^9, 3.6892654919444504`*^9}, 3.689374713783906*^9, {
   3.689375028495329*^9, 3.6893750295874863`*^9}, {3.6893751348974*^9, 
   3.6893751353185616`*^9}, {3.6893753307354407`*^9, 3.689375340704048*^9}, {
   3.689375414271017*^9, 3.689375414370969*^9}, {3.6893756328965096`*^9, 
   3.6893756419398003`*^9}, 3.6895113878635263`*^9, {3.6895131154063387`*^9, 
   3.6895131216715446`*^9}, {3.689513684043231*^9, 3.68951370567029*^9}, {
   3.689513769021243*^9, 3.6895137714501243`*^9}, 3.6895139873434205`*^9, 
   3.689515841975286*^9, {3.6895158789517193`*^9, 3.6895158888342886`*^9}, {
   3.6895168544718795`*^9, 3.6895169003781624`*^9}, {3.689519518615824*^9, 
   3.689519519599579*^9}, {3.689520942898498*^9, 3.6895209440136604`*^9}, {
   3.6895316409722867`*^9, 3.689531643155753*^9}, {3.6895414833629184`*^9, 
   3.6895414842630234`*^9}, {3.6895417346518493`*^9, 
   3.6895417396976795`*^9}, {3.689542012119665*^9, 3.689542016118353*^9}, {
   3.6895421267650194`*^9, 3.689542129427148*^9}, {3.6895539138379655`*^9, 
   3.689553915853386*^9}, {3.689554465053569*^9, 3.689554484012016*^9}, {
   3.68955722677054*^9, 3.689557227023576*^9}, {3.6895580605307856`*^9, 
   3.6895580897273393`*^9}, {3.6895581500083947`*^9, 3.689558151776163*^9}, {
   3.6896101689151077`*^9, 3.6896101795946455`*^9}, {3.6896102138194375`*^9, 
   3.68961021587121*^9}, {3.6896107980335283`*^9, 3.6896108599111614`*^9}, {
   3.68970874520971*^9, 3.6897087465063457`*^9}, {3.689709840924893*^9, 
   3.689709864426357*^9}, {3.689710387375425*^9, 3.689710390307808*^9}, {
   3.6897127388475204`*^9, 3.6897127509861155`*^9}, {3.6897128661032777`*^9, 
   3.689712878542594*^9}, {3.689713376513117*^9, 3.689713383543293*^9}, {
   3.6897134225593367`*^9, 3.6897134255278053`*^9}, {3.6897135653166428`*^9, 
   3.6897135993431635`*^9}, 3.689713727109234*^9, {3.689719094914816*^9, 
   3.6897191012813954`*^9}, 3.689719337817085*^9, 3.6897212130802336`*^9, {
   3.689721451440507*^9, 3.6897214550562124`*^9}, {3.6897215431300197`*^9, 
   3.689721556042739*^9}, {3.689753610511204*^9, 3.689753615225629*^9}, {
   3.6897562965171022`*^9, 3.689756314512783*^9}, {3.689761711566434*^9, 
   3.68976182176138*^9}, {3.689762219403458*^9, 3.6897624617484474`*^9}, {
   3.689762588967354*^9, 3.689762608846407*^9}, 3.690109635614379*^9, {
   3.6901960777619605`*^9, 3.690196091289353*^9}, {3.6902142554747276`*^9, 
   3.6902142565752144`*^9}, 3.690376630314475*^9, 3.6903796513228884`*^9, 
   3.690379819459612*^9, 3.690452424282899*^9, {3.6921816588911304`*^9, 
   3.692181660075794*^9}, {3.6921818304944153`*^9, 3.6921818419435697`*^9}, {
   3.6921818771156797`*^9, 3.692181942727373*^9}, {3.6921820605471954`*^9, 
   3.6921820873922434`*^9}, {3.6921824064141984`*^9, 3.692182407882794*^9}, {
   3.692611968421336*^9, 3.692611982865757*^9}, {3.692612013712931*^9, 
   3.692612048863812*^9}, {3.6926209973697343`*^9, 3.692621000884308*^9}, {
   3.692633312246311*^9, 3.6926333133769774`*^9}, {3.692634145938246*^9, 
   3.6926341463880544`*^9}, {3.692634301850299*^9, 3.692634331312028*^9}, {
   3.692692884755207*^9, 3.692692889206979*^9}, {3.692704291223631*^9, 
   3.6927043019754477`*^9}, {3.692978969561159*^9, 3.6929790539664955`*^9}, {
   3.6929826004013367`*^9, 3.69298263466637*^9}, {3.692996435101632*^9, 
   3.6929964358701057`*^9}, 3.6929991160744457`*^9, 3.6930118852325597`*^9, 
   3.6930128152142344`*^9, 3.693097281466355*^9, {3.693105326622604*^9, 
   3.693105360214017*^9}, {3.693132303031089*^9, 3.693132319920803*^9}, 
   3.693133595164405*^9, 3.6931503659091144`*^9, 3.693502680981826*^9, {
   3.6943743258489757`*^9, 3.6943743613303285`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["core ", "Section",
 CellChangeTimes->{{3.692538489329556*^9, 3.6925384939428205`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BrownianSimulation", "[", 
   RowBox[{
   "receptors_", ",", "receptorpts_", ",", "ligandsnod_", ",", "ligandsleft_",
     ",", "countlistnod_", ",", "countlistlefty_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"receptorstruct", "=", " ", "receptors"}], ",", "interactions", 
      ",", " ", 
      RowBox[{"nodal", " ", "=", " ", "ligandsnod"}], ",", 
      RowBox[{"lefty", " ", "=", " ", "ligandsleft"}], ",", "nodalthread", 
      ",", "leftythread", ",", "interactingNodalReceptor", ",", 
      "interactingLeftyReceptor", ",", 
      RowBox[{"countnod", "=", "countlistnod"}], ",", 
      RowBox[{"countleft", "=", " ", "countlistlefty"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"diffuse", " ", "the", " ", "particles"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nodal", ",", "lefty"}], "}"}], " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "#"}], "\[NotEqual]", " ", "0"}], ",", 
           RowBox[{"BrownianFunc", "[", "#", "]"}], ",", "#"}], "]"}], "&"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"nodal", ",", "lefty"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nodalthread", ",", "countnod"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"leftythread", ",", "countleft"}], "}"}]}], "}"}], " ", "=", 
      " ", 
      RowBox[{
       RowBox[{
        RowBox[{"BCchecks", "[", 
         RowBox[{"Sequence", "@@", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nodal", ",", "countnod"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"lefty", ",", "countleft"}], "}"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interactingNodalReceptor", ",", "interactingLeftyReceptor"}], 
       "}"}], "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nearestFunction", "[", 
            RowBox[{
            "#1", ",", "#2", ",", "receptorstruct", ",", "receptorpts"}], 
            "]"}], "/.", 
           RowBox[{
            RowBox[{"nearestFunction", "[", 
             RowBox[{"x_", ",", "__"}], "]"}], "\[RuleDelayed]", " ", 
            RowBox[{"{", "x", "}"}]}]}], ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nodalthread", ",", "leftythread"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.00892", ",", "0.00390717"}], "}"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "biasing", " ", "a", " ", "common", " ", "receptor", " ", "interacting",
        " ", "with", " ", "nodal", " ", "and", " ", "lefty"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interactingNodalReceptor", ",", "interactingLeftyReceptor"}], 
       "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"biasSharedReceptors", "[", 
         RowBox[{
         "interactingNodalReceptor", ",", "interactingLeftyReceptor"}], "]"}],
         ")"}], "/.", 
       RowBox[{
        RowBox[{"biasSharedReceptors", "[", "pattern__", "]"}], 
        "\[RuleDelayed]", " ", 
        RowBox[{"{", "pattern", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", " ", "binding"}]}]}], " ", 
       RowBox[{
        RowBox[{
         RowBox[{"mechanics", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nodalthread", ",", "receptorstruct"}], "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"interAct", "[", "##", "]"}], "&"}], "@@", 
         RowBox[{"{", 
          RowBox[{
          "nodalthread", ",", "receptorstruct", ",", 
           "interactingNodalReceptor", ",", "\"\<nodal\>\""}], "}"}]}], ")"}],
        "/.", 
       RowBox[{
        RowBox[{"interAct", "[", 
         RowBox[{"patt__", ",", "y_", ",", "z_"}], "]"}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"leftythread", ",", "receptorstruct"}], "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"interAct", "[", "##", "]"}], "&"}], "@@", 
         RowBox[{"{", 
          RowBox[{
          "leftythread", ",", "receptorstruct", ",", 
           "interactingLeftyReceptor", ",", "\"\<lefty\>\""}], "}"}]}], ")"}],
        "/.", 
       RowBox[{
        RowBox[{"interAct", "[", 
         RowBox[{"patt__", ",", "y_", ",", "z_"}], "]"}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", " ", "unbinding"}]}]}], " ", 
       RowBox[{
        RowBox[{
         RowBox[{"mechanics", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"receptorstruct", ",", "nodalthread"}], "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"unbindingMechanics", "[", 
         RowBox[{
         "receptorstruct", ",", "nodalthread", ",", "\"\<nodal\>\"", ",", 
          "0.01264"}], "]"}], ")"}], "/.", 
       RowBox[{
        RowBox[{"unbindingMechanics", "[", 
         RowBox[{"patt__", ",", "x_", ",", "y_"}], "]"}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"receptorstruct", ",", "leftythread"}], "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"unbindingMechanics", "[", 
         RowBox[{
         "receptorstruct", ",", "leftythread", ",", "\"\<lefty\>\"", ",", 
          "0.0001"}], "]"}], ")"}], "/.", 
       RowBox[{
        RowBox[{"unbindingMechanics", "[", 
         RowBox[{"patt__", ",", "x_", ",", "y_"}], "]"}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "receptorstruct", ",", "receptorpts", ",", "nodalthread", ",", 
       "leftythread", ",", "countnod", ",", "countleft"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6925543112045727`*^9, 3.692554434763664*^9}, {
   3.692554647722584*^9, 3.692554684131895*^9}, 3.692554774133947*^9, {
   3.6925548893760033`*^9, 3.6925549067871966`*^9}, {3.6925550257007017`*^9, 
   3.6925550321146603`*^9}, 3.6925550732450724`*^9, {3.6925574919878955`*^9, 
   3.692557502640121*^9}, 3.692566807928445*^9, {3.692605614613536*^9, 
   3.69260568062059*^9}, 3.692605877566945*^9, {3.6926123839090242`*^9, 
   3.6926123914385524`*^9}, {3.6926124236132355`*^9, 
   3.6926124520512533`*^9}, {3.692612503010207*^9, 3.692612512790715*^9}, {
   3.6926125558095355`*^9, 3.6926125715958204`*^9}, {3.6926126959949627`*^9, 
   3.6926127123432817`*^9}, {3.6926128814030256`*^9, 
   3.6926130594121847`*^9}, {3.692613117540797*^9, 3.692613121155347*^9}, {
   3.6926131525621777`*^9, 3.692613169359136*^9}, {3.6926132278481426`*^9, 
   3.692613228716658*^9}, {3.692613301963354*^9, 3.6926133064422183`*^9}, {
   3.692613345536278*^9, 3.6926134301335945`*^9}, {3.6926135096653247`*^9, 
   3.69261351126933*^9}, {3.6926135706169896`*^9, 3.6926136096159744`*^9}, {
   3.6926136437387657`*^9, 3.692613670006584*^9}, {3.6926137410817823`*^9, 
   3.692613789687171*^9}, {3.692613872500772*^9, 3.6926141140330653`*^9}, {
   3.6926142128698196`*^9, 3.692614289836226*^9}, {3.692614416502389*^9, 
   3.6926144169802647`*^9}, {3.692614467919347*^9, 3.69261450422009*^9}, {
   3.6926146099994564`*^9, 3.69261464780755*^9}, {3.6926146836342735`*^9, 
   3.6926146859341216`*^9}, {3.692616457171949*^9, 3.6926164678390293`*^9}, {
   3.692616524252694*^9, 3.692616530414781*^9}, {3.69261968946215*^9, 
   3.6926196994301596`*^9}, {3.6926198637651825`*^9, 
   3.6926198663491077`*^9}, {3.692621390338344*^9, 3.6926214259462085`*^9}, {
   3.692621543172521*^9, 3.692621545888688*^9}, {3.6926215920482388`*^9, 
   3.692621597585388*^9}, {3.6926299184529715`*^9, 3.692629920837669*^9}, {
   3.692630099686372*^9, 3.692630103363843*^9}, {3.6926304515883484`*^9, 
   3.6926304545350447`*^9}, {3.6926305623857946`*^9, 
   3.6926305702469625`*^9}, {3.692630628486269*^9, 3.6926306781841145`*^9}, {
   3.692631591302009*^9, 3.692631652378191*^9}, {3.6926322707559834`*^9, 
   3.692632336294444*^9}, {3.692713056408431*^9, 3.692713057329753*^9}, {
   3.6927136220197706`*^9, 3.692713623567093*^9}, {3.6927147051476955`*^9, 
   3.6927148646514025`*^9}, {3.6927148990150967`*^9, 
   3.6927149329858484`*^9}, {3.6927149835036135`*^9, 
   3.6927150020713696`*^9}, {3.692715103665228*^9, 3.692715179053672*^9}, {
   3.692715323344327*^9, 3.692715327012861*^9}, {3.6927154621434345`*^9, 
   3.6927154771439724`*^9}, {3.692992923957551*^9, 3.692992954331413*^9}, {
   3.692993007566157*^9, 3.6929930646965885`*^9}, 3.692993099837758*^9, {
   3.6929941437286725`*^9, 3.6929941965739255`*^9}, 3.694368076091062*^9, {
   3.694368159769758*^9, 3.6943681659678392`*^9}, {3.6943708378389854`*^9, 
   3.6943708423149595`*^9}, {3.694372187093089*^9, 3.694372218003498*^9}, {
   3.694374398645754*^9, 3.694374444686632*^9}, {3.6943745878130426`*^9, 
   3.694374590590721*^9}, {3.6943746783087397`*^9, 3.6943746829870114`*^9}, {
   3.6943747958261347`*^9, 3.694374812278696*^9}, {3.6943748542180424`*^9, 
   3.6943748808994927`*^9}, {3.694374975137148*^9, 3.6943749950348825`*^9}, 
   3.694375027394891*^9, {3.6943822282394266`*^9, 3.6943822309754086`*^9}, {
   3.694382275290746*^9, 3.694382286038867*^9}, {3.6948620473265142`*^9, 
   3.6948620549000473`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell["graph state", "Subsection",
 CellChangeTimes->{{3.6926122295401745`*^9, 3.692612231593137*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphState", "[", 
   RowBox[{
   "receptors_", ",", "nodal_", ",", "lefty_", ",", "boundnod_", ",", 
    "boundleft_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nodalpts", " ", "=", " ", "nodal"}], ",", 
      RowBox[{"leftypts", "=", "lefty"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6932", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6932", ",", "0.6932"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.6932"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"PointSize", "[", "0.007", "]"}], ",", 
        RowBox[{"Darker", "@", "Green"}], ",", 
        RowBox[{"Point", "@", "leftypts"}], ",", 
        RowBox[{"Darker", "@", "Blue"}], ",", 
        RowBox[{"Point", "@", "nodalpts"}], ",", "Red", ",", 
        RowBox[{"Point", "@", "receptors"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PointSize", "[", "0.009", "]"}], ",", "Purple", ",", 
        RowBox[{"Point", "@", "boundnod"}], ",", "Orange", ",", 
        RowBox[{"Point", "@", "boundleft"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.692612240671135*^9, 3.6926122468801823`*^9}, {
   3.692612306997155*^9, 3.69261230912786*^9}, 3.6926174343389316`*^9, {
   3.6926174722077174`*^9, 3.6926174733448534`*^9}, {3.6926206846682744`*^9, 
   3.692620685968135*^9}, {3.6926221982670064`*^9, 3.6926222032380085`*^9}, 
   3.6926225304017763`*^9, {3.6926225642151456`*^9, 3.692622566176902*^9}, {
   3.692629111997639*^9, 3.692629124325635*^9}, {3.6926308821785574`*^9, 
   3.69263091858292*^9}, {3.692630998798727*^9, 3.6926310062274523`*^9}, {
   3.692631043372387*^9, 3.692631084549396*^9}, {3.692632516329062*^9, 
   3.692632550125393*^9}, {3.69299218715532*^9, 3.6929921962886033`*^9}, {
   3.6929963376437073`*^9, 3.692996357655407*^9}, {3.692997092804805*^9, 
   3.692997102524169*^9}, {3.6929972814785857`*^9, 3.692997286359871*^9}, {
   3.6930000376708193`*^9, 3.693000037674331*^9}, {3.693000224312718*^9, 
   3.6930002243162203`*^9}, {3.693000269446515*^9, 3.6930002694495163`*^9}, {
   3.6943703115368667`*^9, 3.6943703155519114`*^9}, {3.6943706813901715`*^9, 
   3.6943707135252647`*^9}, {3.694371779493271*^9, 3.6943717998175344`*^9}, {
   3.6943719891453247`*^9, 3.694371995445811*^9}, {3.694372042389436*^9, 
   3.6943720524527864`*^9}, {3.6943735198311577`*^9, 3.69437355119293*^9}, 
   3.694373608201269*^9, {3.694373684079381*^9, 3.6943736857107773`*^9}, {
   3.6943737410931063`*^9, 3.694373744338677*^9}, {3.6943737825080414`*^9, 
   3.6943737903428774`*^9}, {3.6943738237991133`*^9, 3.694373824303668*^9}, {
   3.6943738689591947`*^9, 3.6943739042212768`*^9}, {3.6943739966540136`*^9, 
   3.6943739968228116`*^9}, {3.6943740506481094`*^9, 3.694374050995171*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["code execution", "Section",
 CellChangeTimes->{{3.6925384994099603`*^9, 3.6925385087393465`*^9}, {
  3.6926060745389824`*^9, 3.692606076653994*^9}, {3.6926148649774942`*^9, 
  3.692614873941062*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sim", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"particlenum", " ", "=", " ", "10"}], ",", 
       RowBox[{"receprows", "=", " ", "20"}], ",", 
       RowBox[{"recepcol", "=", "20"}], ",", " ", 
       RowBox[{"receptordist", " ", "=", " ", "0.03466"}], ",", " ", 
       RowBox[{"nSteps", "=", "5000"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"heightsim", "=", 
          RowBox[{"recepcol", "*", "receptordist"}]}], " ", ",", 
         RowBox[{"widthsim", " ", "=", " ", 
          RowBox[{"receprows", "*", "receptordist"}]}], ",", 
         "receptorsUnFlatten", ",", " ", "receptors", ",", " ", "nodalligand",
          ",", "leftyligand", ",", "nodalstruct", ",", "leftystruct", ",", 
         "receptorstruct", ",", " ", "receptorpts", ",", "recep", ",", "temp",
          ",", " ", "boundn", ",", "boundl", ",", "g", ",", "lefttracklist", 
         ",", "nodtracklist", ",", "nodinlist", ",", "leftinlist", ",", 
         "clistnod", ",", "clistleft", ",", "clistn", ",", "clistl", ",", 
         "posn", ",", "posl"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"receptorsUnFlatten", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"j", ",", "i"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"receptordist", "/", "2"}], ",", "heightsim", ",", 
             "receptordist"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"receptordist", "/", "2"}], ",", "widthsim", ",", 
             "receptordist"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"receptors", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"receptorsUnFlatten", ",", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"recep", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"receptorsUnFlatten", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;"}], ",", 
              RowBox[{"1", ";;", "receprows"}]}], "]"}], "]"}], ",", "1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         SubscriptBox["\[ScriptCapitalR]", "2"], "=", " ", 
         RowBox[{"BoundaryMeshRegion", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"widthsim", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"widthsim", ",", "heightsim"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "heightsim"}], "}"}]}], "}"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "1"}], "}"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nodalligand", "=", "  ", 
         RowBox[{"RandomPoint", "[", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalR]", "2"], ",", "particlenum"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"leftyligand", "=", "  ", 
         RowBox[{"RandomPoint", "[", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalR]", "2"], ",", "particlenum"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Print", "@", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"widthsim", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"widthsim", ",", "heightsim"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "heightsim"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"PointSize", "[", "0.007", "]"}], ",", 
             RowBox[{"Darker", "@", "Blue"}], ",", 
             RowBox[{"Point", "@", "nodalligand"}], ",", 
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"Point", "@", "leftyligand"}], ",", "Red", ",", 
             RowBox[{"Point", "@", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"receptorsUnFlatten", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"1", ";;"}], ",", 
                   RowBox[{"1", ";;", "receprows"}]}], "]"}], "]"}], ",", 
                "1"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"nodalstruct", " ", "=", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<nodal\>\"", ",", "#1"}], "}"}]}], "&"}], ",", 
            "nodalligand"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"leftystruct", " ", "=", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<lefty\>\"", ",", "#1"}], "}"}]}], "&"}], ",", 
            "leftyligand"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"receptorstruct", " ", "=", " ", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{"#1", ",", "0", ",", "None", ",", "None"}], "}"}]}], 
            "&"}], ",", "receptors"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"receptorpts", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Values", "@", "receptorstruct"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"clistnod", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "particlenum"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"clistleft", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "particlenum"}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Monitor", "[", 
          RowBox[{
           RowBox[{"Reap", "[", "\[IndentingNewLine]", 
            RowBox[{"Nest", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"temp", " ", "=", " ", 
                  RowBox[{"BrownianSimulation", "@@", "#"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"boundn", " ", "=", " ", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"patt", ":", 
                    RowBox[{"PatternSequence", "[", 
                    RowBox[{"_", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", "_", ",", "_", ",", 
                    "\"\<nodal\>\""}], " ", "}"}]}], "]"}]}], 
                    "\[RuleDelayed]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ",", 
                    "2"}], "]"}]}], ";", 
                 RowBox[{"boundl", " ", "=", " ", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"patt", ":", 
                    RowBox[{"PatternSequence", "[", 
                    RowBox[{"_", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", "_", ",", "_", ",", 
                    "\"\<lefty\>\""}], " ", "}"}]}], "]"}]}], 
                    "\[RuleDelayed]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ",", 
                    "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"nodinlist", "=", 
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"leftinlist", " ", "=", " ", 
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"nodinlist", " ", "===", " ", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"(", 
                    RowBox[{"nodtracklist", "=", 
                    RowBox[{"Sort", "@", "boundn"}]}], ")"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(", 
                    RowBox[{"nodtracklist", "=", 
                    RowBox[{"Sort", "@", 
                    RowBox[{"Join", "[", 
                    RowBox[{"boundn", ",", 
                    RowBox[{"nodinlist", "/.", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"patt", ":", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}], "/;", 
                    RowBox[{
                    RowBox[{"Head", "[", "patt", "]"}], "=!=", "List"}]}], 
                    " ", "\[RuleDelayed]", " ", 
                    RowBox[{"{", "patt", "}"}]}]}]}], "]"}]}]}], ")"}]}], 
                  "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"leftinlist", " ", "===", " ", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"(", 
                    RowBox[{"lefttracklist", "=", 
                    RowBox[{"Sort", "@", "boundl"}]}], ")"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(", 
                    RowBox[{"lefttracklist", "=", 
                    RowBox[{"Sort", "@", 
                    RowBox[{"Join", "[", 
                    RowBox[{"boundl", ",", 
                    RowBox[{"leftinlist", "/.", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"patt", ":", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}], "/;", 
                    RowBox[{
                    RowBox[{"Head", "[", "patt", "]"}], "=!=", "List"}]}], 
                    " ", "\[RuleDelayed]", " ", 
                    RowBox[{"{", "patt", "}"}]}]}]}], "]"}]}]}], ")"}]}], 
                  "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"g", " ", "=", 
                  RowBox[{"graphState", "[", 
                   RowBox[{"recep", ",", 
                    RowBox[{"nodinlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"leftinlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"boundn", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"boundl", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"clistn", "=", " ", 
                  RowBox[{"temp", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"clistl", "=", " ", 
                  RowBox[{"temp", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"posn", "=", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"clistn", ",", 
                    RowBox[{"Except", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "1"}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "All"}], "]"}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"posl", "=", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"clistl", ",", 
                    RowBox[{"Except", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "1"}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "All"}], "]"}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "@", "posn"}], ">", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"nodtracklist", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"nodtracklist", ",", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"posn", "\[Rule]", " ", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"posn", "\[Rule]", " ", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"nodtracklist", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"clistn", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "*", "widthsim"}]}], 
                    "&"}], ",", "posn"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
                   "\[IndentingNewLine]", ",", "nodtracklist"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "@", "posl"}], ">", "0"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"lefttracklist", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"lefttracklist", ",", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"posl", "\[Rule]", " ", 
                    RowBox[{"Thread", "[", 
                    RowBox[{"posl", "\[Rule]", " ", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"lefttracklist", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"clistl", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "*", "widthsim"}]}], 
                    "&"}], ",", "posl"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
                   "\[IndentingNewLine]", ",", "lefttracklist"}], "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"Sow", "[", 
                  RowBox[{"{", 
                   RowBox[{"nodtracklist", ",", "lefttracklist"}], "}"}], 
                  "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"Association", "@", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"\<nodal\>\"", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"Association", "@", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"\<lefty\>\"", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", "temp"}], ")"}], "&"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "receptorstruct", ",", "receptorpts", ",", "nodalstruct", ",", 
                "leftystruct", ",", "clistnod", ",", "clistleft"}], "}"}], 
              ",", "nSteps"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
           "g"}], "]"}], "//", "Quiet"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6926176497844334`*^9, 3.6926176724807625`*^9}, {
   3.6926177531104603`*^9, 3.6926179376218414`*^9}, {3.6926179703888884`*^9, 
   3.6926179913271704`*^9}, {3.6926180885535965`*^9, 
   3.6926182058323936`*^9}, {3.6926182655880203`*^9, 3.692618369959688*^9}, {
   3.692618793710271*^9, 3.692618817141079*^9}, {3.692618857390374*^9, 
   3.6926189206859503`*^9}, {3.692618990730153*^9, 3.6926191069086714`*^9}, {
   3.6926192051717777`*^9, 3.6926192291520653`*^9}, {3.692619313260974*^9, 
   3.692619388028164*^9}, {3.6926194460223203`*^9, 3.6926195944798803`*^9}, {
   3.692619651644617*^9, 3.6926196630131826`*^9}, {3.6926197181915207`*^9, 
   3.692619727428636*^9}, {3.692619917785845*^9, 3.6926199199474583`*^9}, {
   3.6926200629688644`*^9, 3.6926201112016783`*^9}, {3.6926202770726223`*^9, 
   3.692620288906313*^9}, {3.6926203295028915`*^9, 3.6926204461265545`*^9}, {
   3.6926206045107822`*^9, 3.6926206078258343`*^9}, {3.692620754927641*^9, 
   3.692620859382726*^9}, {3.692620914182828*^9, 3.692620916120285*^9}, {
   3.692621182342777*^9, 3.692621185611665*^9}, {3.6926212989276447`*^9, 
   3.6926213034453974`*^9}, {3.6926213798075976`*^9, 
   3.6926213837095723`*^9}, {3.6926219253044624`*^9, 
   3.6926219253891287`*^9}, {3.692621989098464*^9, 3.6926220353425813`*^9}, 
   3.692622069505989*^9, {3.6926221588550034`*^9, 3.6926221690849915`*^9}, {
   3.692622258666731*^9, 3.692622351569499*^9}, {3.6926224255203805`*^9, 
   3.6926224255830116`*^9}, {3.692622552832927*^9, 3.6926225543647776`*^9}, {
   3.6926225879727187`*^9, 3.692622624983721*^9}, {3.69262893681231*^9, 
   3.6926289696236362`*^9}, {3.6926293749752903`*^9, 3.6926293750755587`*^9}, 
   3.692629418512741*^9, {3.6926295097370844`*^9, 3.692629564348977*^9}, 
   3.6926299314362097`*^9, 3.6926300212637215`*^9, {3.692630317424904*^9, 
   3.692630320124576*^9}, {3.6926304655007415`*^9, 3.6926304912869296`*^9}, {
   3.6926305220630894`*^9, 3.6926305222004395`*^9}, {3.6926307145020156`*^9, 
   3.692630718018728*^9}, {3.6926307708909435`*^9, 3.6926308035870404`*^9}, {
   3.692630835750159*^9, 3.6926308361191173`*^9}, {3.692630930428837*^9, 
   3.692630976665943*^9}, {3.692631017409693*^9, 3.692631020878921*^9}, 
   3.6926311742647943`*^9, {3.692631209283281*^9, 3.69263120936759*^9}, {
   3.692631946590495*^9, 3.6926319570738735`*^9}, 3.692632200777199*^9, {
   3.692632369117037*^9, 3.6926324142401342`*^9}, {3.6926324463459997`*^9, 
   3.692632447261714*^9}, 3.6926325978257885`*^9, {3.6926329784459114`*^9, 
   3.692633001142372*^9}, {3.6926330545624185`*^9, 3.6926330646970034`*^9}, {
   3.6926333549872403`*^9, 3.692633366552476*^9}, {3.6926334698301277`*^9, 
   3.6926334757616777`*^9}, {3.692634349366013*^9, 3.6926343693631763`*^9}, {
   3.692635544468311*^9, 3.692635546399835*^9}, 3.692684203897884*^9, {
   3.6926842690550866`*^9, 3.6926842829277897`*^9}, {3.6926843833386335`*^9, 
   3.6926844555457706`*^9}, {3.6926891994764605`*^9, 
   3.6926891998762784`*^9}, {3.6926909058946033`*^9, 3.692690913544711*^9}, 
   3.6926909443426275`*^9, {3.6926910411545334`*^9, 3.6926910637230096`*^9}, {
   3.692691187775485*^9, 3.6926911904272904`*^9}, 3.692692551743823*^9, {
   3.692692907515839*^9, 3.6926929551782885`*^9}, {3.6926930192464666`*^9, 
   3.6926931003309317`*^9}, {3.692693164459138*^9, 3.692693199222269*^9}, {
   3.6926932421810026`*^9, 3.692693301506151*^9}, {3.6926934953091483`*^9, 
   3.692693573454054*^9}, {3.6926936650560913`*^9, 3.692693666227481*^9}, {
   3.692693696770446*^9, 3.692693696891245*^9}, {3.6926951665399504`*^9, 
   3.6926951682580256`*^9}, {3.6927070669204063`*^9, 3.692707079468647*^9}, {
   3.692707584107381*^9, 3.6927077261341267`*^9}, {3.692711108653058*^9, 
   3.6927111213912363`*^9}, {3.692711164577978*^9, 3.692711165628812*^9}, {
   3.692711819679804*^9, 3.6927118431536703`*^9}, {3.6927119083568325`*^9, 
   3.692711982453511*^9}, {3.6927120287311325`*^9, 3.692712029447981*^9}, {
   3.692714467217752*^9, 3.6927144989874153`*^9}, 3.6927145538037095`*^9, {
   3.692714591422683*^9, 3.6927146222913475`*^9}, 3.692714662456083*^9, {
   3.6927152294171257`*^9, 3.692715237429813*^9}, {3.6927152738290815`*^9, 
   3.692715303344428*^9}, 3.6927155371147118`*^9, {3.6927156684714594`*^9, 
   3.692715670702652*^9}, {3.692715720766226*^9, 3.6927157279671974`*^9}, {
   3.6927159982874827`*^9, 3.692716028533546*^9}, {3.6927161241078825`*^9, 
   3.6927161689909873`*^9}, {3.692716203780342*^9, 3.6927163250776443`*^9}, 
   3.6927163600104475`*^9, {3.6927207799692016`*^9, 3.6927208092329416`*^9}, {
   3.6927208485590086`*^9, 3.6927209848640146`*^9}, 3.6927211246372943`*^9, {
   3.692721164681935*^9, 3.692721164760174*^9}, {3.6927213006419296`*^9, 
   3.6927213159968004`*^9}, 3.692721701509497*^9, {3.692780606325874*^9, 
   3.692780607125702*^9}, 3.692780700215907*^9, {3.6929850304430532`*^9, 
   3.692985030842952*^9}, {3.692985197796705*^9, 3.6929852000123396`*^9}, {
   3.6929852802275968`*^9, 3.6929852805430846`*^9}, {3.692986923425478*^9, 
   3.692986938927523*^9}, {3.692986980361148*^9, 3.692987015207142*^9}, {
   3.6929871083855066`*^9, 3.6929871340725565`*^9}, {3.692987841518862*^9, 
   3.6929879048794355`*^9}, {3.6929880048524294`*^9, 3.692988019789658*^9}, {
   3.692988060610814*^9, 3.692988060663748*^9}, {3.692988132032321*^9, 
   3.6929881744438705`*^9}, {3.6929883100904517`*^9, 3.6929883269596505`*^9}, 
   3.6929883879074545`*^9, {3.6929884318491125`*^9, 3.692988445651466*^9}, 
   3.6929885429424667`*^9, {3.692989018309513*^9, 3.692989020192781*^9}, {
   3.692989060247015*^9, 3.692989141061593*^9}, {3.692989180594611*^9, 
   3.692989181194382*^9}, {3.6929892492142367`*^9, 3.6929892669794745`*^9}, {
   3.6929892997479563`*^9, 3.6929893486070137`*^9}, {3.6929893988462873`*^9, 
   3.6929894480929995`*^9}, {3.6929895729962273`*^9, 
   3.6929896210515585`*^9}, {3.692989715484589*^9, 3.692989764393735*^9}, {
   3.692989819167025*^9, 3.69298982338253*^9}, {3.6929898593472233`*^9, 
   3.692990232288079*^9}, {3.6929904611358776`*^9, 3.6929905702332993`*^9}, {
   3.6929906829107895`*^9, 3.6929906924669385`*^9}, {3.6929907333824205`*^9, 
   3.6929907748998084`*^9}, {3.692990869261766*^9, 3.692990871192871*^9}, {
   3.692990902609622*^9, 3.6929909069091015`*^9}, {3.692990948376337*^9, 
   3.6929910698135786`*^9}, {3.6929911445954933`*^9, 3.692991194551833*^9}, {
   3.6929912364213*^9, 3.6929912470731983`*^9}, {3.692991319639654*^9, 
   3.692991364246339*^9}, {3.6929914428400126`*^9, 3.6929914912071123`*^9}, {
   3.692991569241938*^9, 3.6929915860081873`*^9}, {3.6929919728352375`*^9, 
   3.692991992429404*^9}, 3.692992454944838*^9, {3.6929927179928207`*^9, 
   3.692992891520774*^9}, {3.6929942161510077`*^9, 3.6929942227718763`*^9}, {
   3.6929944215541353`*^9, 3.692994490149273*^9}, {3.6929945477297544`*^9, 
   3.69299466487716*^9}, {3.692994873717939*^9, 3.6929948928816614`*^9}, {
   3.6929949245084686`*^9, 3.6929949254296*^9}, {3.692994992609305*^9, 
   3.692995028953864*^9}, {3.692995159936841*^9, 3.6929951649871674`*^9}, 
   3.6929953561127996`*^9, {3.6929961925688725`*^9, 3.692996206149725*^9}, {
   3.692996551218215*^9, 3.692996552849167*^9}, 3.692996608308853*^9, 
   3.6929967353585434`*^9, {3.6929967934496756`*^9, 3.6929968028484783`*^9}, 
   3.6929968829435015`*^9, {3.692997052762515*^9, 3.69299706879332*^9}, {
   3.692997181856982*^9, 3.692997225075636*^9}, {3.6929973134438725`*^9, 
   3.6929973263117795`*^9}, 3.6929975902273445`*^9, 3.6929976587310085`*^9, {
   3.6929980191215196`*^9, 3.6929980192214794`*^9}, {3.692998077902752*^9, 
   3.692998078017745*^9}, {3.692998120428904*^9, 3.692998120760408*^9}, {
   3.692998697530004*^9, 3.69299869771432*^9}, {3.692999026562268*^9, 
   3.692999026777856*^9}, 3.692999178176374*^9, 3.692999214079857*^9, 
   3.6929996517161784`*^9, {3.6929997266014028`*^9, 3.692999727085409*^9}, {
   3.6929998000936165`*^9, 3.692999800569786*^9}, {3.6929998670062575`*^9, 
   3.6929998847901535`*^9}, {3.69299991806662*^9, 3.6929999250331354`*^9}, {
   3.693000273434194*^9, 3.6930002759442763`*^9}, {3.6930004136953435`*^9, 
   3.6930004148605967`*^9}, {3.693004154318336*^9, 3.693004170123826*^9}, {
   3.693005552443083*^9, 3.693005588551691*^9}, {3.6930056231879644`*^9, 
   3.69300575344851*^9}, {3.693005794298588*^9, 3.6930058385982523`*^9}, {
   3.6930058799651623`*^9, 3.6930059187339697`*^9}, {3.693005956760109*^9, 
   3.693005963142229*^9}, {3.693006012010195*^9, 3.693006031137537*^9}, {
   3.6930060744181833`*^9, 3.693006074718001*^9}, 3.693006309795155*^9, {
   3.693007143978511*^9, 3.693007145462787*^9}, {3.693011611243023*^9, 
   3.69301162570905*^9}, {3.693013252203422*^9, 3.6930132668330145`*^9}, {
   3.6931506260448313`*^9, 3.6931506322824793`*^9}, {3.6943648522478848`*^9, 
   3.694365071569313*^9}, {3.6943651227191*^9, 3.69436513311633*^9}, {
   3.6943654028702955`*^9, 3.694365405370117*^9}, {3.6943655944158506`*^9, 
   3.69436561518272*^9}, {3.6943665801024323`*^9, 3.694366597263073*^9}, {
   3.6943667446356683`*^9, 3.69436683555281*^9}, {3.694367014121108*^9, 
   3.6943670444377127`*^9}, {3.694367076069852*^9, 3.6943670881515417`*^9}, {
   3.6943671287631016`*^9, 3.694367171106721*^9}, {3.6943672155339794`*^9, 
   3.694367240929409*^9}, {3.694367405552683*^9, 3.6943674471291895`*^9}, {
   3.6943674821254263`*^9, 3.6943675879484897`*^9}, {3.694367680300701*^9, 
   3.694367693212634*^9}, {3.6943677546496134`*^9, 3.694367802646651*^9}, {
   3.694367874880101*^9, 3.6943679065930743`*^9}, {3.694368175088319*^9, 
   3.6943681970972915`*^9}, 3.6943683594701943`*^9, {3.694368687034706*^9, 
   3.694368737814351*^9}, {3.6943688256244917`*^9, 3.694368834893792*^9}, 
   3.6943688754835825`*^9, {3.694369352711873*^9, 3.6943693601312237`*^9}, {
   3.6943693969276953`*^9, 3.6943694117759633`*^9}, {3.694369451864422*^9, 
   3.6943694522645493`*^9}, {3.6943694943789735`*^9, 3.694369560621266*^9}, {
   3.694369839996176*^9, 3.6943698407317867`*^9}, {3.694369893904285*^9, 
   3.694369906670185*^9}, {3.694369949272833*^9, 3.6943699742910604`*^9}, 
   3.6943701561662755`*^9, {3.694370192637459*^9, 3.6943702251690345`*^9}, {
   3.6943703231361713`*^9, 3.6943703312055173`*^9}, 3.69437073949398*^9, {
   3.6943708584829893`*^9, 3.694370902513541*^9}, {3.69437140864534*^9, 
   3.694371450013873*^9}, {3.69437149131397*^9, 3.694371522340184*^9}, {
   3.6943715677906833`*^9, 3.6943715977004457`*^9}, {3.6943716603778715`*^9, 
   3.694371660509109*^9}, {3.6943718501952763`*^9, 3.6943718504480023`*^9}, {
   3.6943722965492077`*^9, 3.6943722966803937`*^9}, {3.6943821430758514`*^9, 
   3.694382143322802*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{0, 0}, {0.6932, 0}, {0.6932, 0.6932}, {0, 0.6932}, {0, 0}}], 
   {RGBColor[0, 0, 
     NCache[
      Rational[2, 3], 0.6666666666666666]], PointSize[0.007], 
    PointBox[{{0.34781764706993434`, 0.49574694271403996`}, {
     0.4924713497194497, 0.45657680920737076`}, {0.585513638092592, 
     0.2799731787472949}, {0.41652636576092994`, 0.6105933162346331}, {
     0.588927364056731, 0.5711612158681014}, {0.5026564171638259, 
     0.23115476957602676`}, {0.14796356079902284`, 0.6294365896799063}, {
     0.1775515854657539, 0.37208583128648964`}, {0.3634234467867139, 
     0.4140977010619258}, {0.5624954446185857, 0.34609247854446834`}}], 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], 
     PointBox[{{0.512509718264694, 0.11860943397871737`}, {0.469470041770059, 
      0.6672160499315543}, {0.06383696359713154, 0.3797519538187506}, {
      0.14020744188972112`, 0.10311205887714703`}, {0.4575881546474554, 
      0.034161332390272636`}, {0.20845613530916374`, 0.06098706264965381}, {
      0.20508480165516108`, 0.012654741553343896`}, {0.6565323552792857, 
      0.5044913949590151}, {0.4400668714431455, 0.24244233050629038`}, {
      0.4423422253324658, 0.268852205982247}}]}, 
    {RGBColor[1, 0, 0], PointBox[CompressedData["
1:eJx12D+oF2QUh/FfUuO9gxChhGGDQ4SIEC3SRdoylxpsaigSh7gZLlGB9Gdr
UXBwkFDcJAuXBocCvZGIkCUWKor/ajEIosKhIRo+7/DAOx2e9eG85/2es/mN
d155a91isTj0yGLxfz29+vexv745vKI+umX/g9XPTw1+7eL2tTNbvx781Uen
1z+7/O3gT548su3KP+cHb33vxz2H9l4YfP3K8sHdP18afO6JLa8+dvLy4KPf
rf127/pPg1cPvPn+ufVXB7+4ed3yiZd+Gbzhh+MnDn58bfAfH6489/rZG4PX
nrl1YcefNwfvfvuFL5cevz34+fNLD//ddmfw0xtv7vz95buDl9794rMb++4N
fvj9B1cvfnp/8N1Nu546e/zXlZm3Vv4wf5g/zB/mD/OH+cP8Yf4wf5g/zB/m
D/OH+cP8Yf4wf7M+q7dW/jB/mD/MH+YP84f5w/xh/jB/mD/MH+YP84f5w/xh
/mbvsn1Wb638Yf4wf5g/zB/mD/OH+cP8Yf4wf5g/zB/mD/OH+ZvNsb7L9lm9
tfKH+cP8Yf4wf5g/zB/mD/OH+cP8Yf4wf5g/zN9s7neO9V22z+qtlT/MH+YP
84f5w/xh/jB/mD/MH+YP84f5w/zN/snO/c6xvsv2Wb218of5w/xh/jB/mD/M
H+YP84f5w/xh/jB/s1zRf7Jzv3Os77J9Vm+t/GH+MH+YP8wf5g/zh/nD/GH+
MH+Yv1kOa67oP9m53znWd9k+q7dW/jB/mD/MH+YP84f5w/xh/jB/mL9Zbm0O
a67oP9m53znWd9k+q7dW/jB/mD/MH+YP84f5w/xh/jB/s5zf3Noc1lzRf7Jz
v3Os77J9Vm+t/GH+MH+YP8wf5g/zh/nD/M32oub85tbmsOaK/pOd+51jfZft
s3pr5Q/zh/nD/GH+MH+YP8zfbI/sXtSc39zaHNZc0X+yc79zrO+yfVZvrfxh
/jB/mD/MH+YP8zfbu7tHdi9qzm9ubQ5rrug/2bnfOdZ32T6rt1b+MH+YP8wf
5g/zN7tTdO/uHtm9qDm/ubU5rLmi/2TnfudY32X7rN5a+cP8Yf4wf5i/2V2n
d4ru3d0juxc15ze3Noc1V/Sf7NzvHOu7bJ/VWyt/mD/MH+ZvdgfrXad3iu7d
3SO7FzXnN7c2hzVX9J/s3O8c67tsn9VbK3+YP8zf7G7YO1jvOr1TdO/uHtm9
qDm/ubU5rLmi/2TnfudY32X7rN5a+cP8ze6svRv2Dta7Tu8U3bu7R3Yvas5v
bm0Oa67oP9m53znWd9k+q7dW/mZ36d5ZezfsHax3nd4pund3j+xe1Jzf3Noc
1lzRf7Jzv3Os77J9Vm+t/wF0Lp3T
      "]]}}},
  ImageSize->Large]], "Print",
 CellChangeTimes->{{3.694369502807791*^9, 3.6943695615054893`*^9}, 
   3.6943699076700788`*^9, {3.6943699498573327`*^9, 3.6943699756071725`*^9}, 
   3.6943702009527783`*^9, {3.694370325552535*^9, 3.6943703326052027`*^9}, 
   3.694370519378297*^9, {3.694370716140254*^9, 3.694370745511711*^9}, {
   3.69437082837785*^9, 3.694370860183052*^9}, {3.694371409029865*^9, 
   3.6943714512454147`*^9}, {3.69437165231013*^9, 3.6943716619776564`*^9}, {
   3.694371801448673*^9, 3.6943718517272224`*^9}, 3.6943719484519815`*^9, 
   3.694371997145854*^9, 3.6943720537060375`*^9, 3.694372096440967*^9, 
   3.6943722250654297`*^9, 3.6943722646231613`*^9, 3.6943722979178743`*^9, 
   3.6943735550469093`*^9, 3.6943736868951883`*^9, 3.6943737458233976`*^9, 
   3.6943737937272243`*^9, 3.6943738256356926`*^9, {3.6943738751951027`*^9, 
   3.694373905558247*^9}, 3.694374004961711*^9, 3.694375258400943*^9, {
   3.694382128124629*^9, 3.6943821513370075`*^9}, 3.6943821941723375`*^9, 
   3.6943822988790083`*^9, 3.6943825120025587`*^9, 3.694789584978958*^9, 
   3.6948617843621206`*^9, 3.6948621571967373`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["checking Absolute Coordinates for particles", "Section",
 CellChangeTimes->{{3.693006941839446*^9, 3.6930069502233953`*^9}, {
  3.693007003490977*^9, 3.69300700849086*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"absCoordCheck", "[", 
   RowBox[{"simres_", ",", "num_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"listpcrossed", ",", "particlecrossed"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"listpcrossed", " ", "=", " ", 
      RowBox[{
       RowBox[{"simres", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "num"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"particlecrossed", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"listpcrossed", ",", 
          RowBox[{"Except", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", 
          RowBox[{"{", "1", "}"}]}], "]"}], "/.", 
        RowBox[{
         RowBox[{"{", "0", "}"}], "\[RuleDelayed]", " ", 
         RowBox[{"Sequence", "[", "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"particlecrossed", ",", 
        RowBox[{"listpcrossed", "[", 
         RowBox[{"[", "particlecrossed", "]"}], "]"}]}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6931008115732365`*^9, 3.693100888408064*^9}, {
  3.6943825525006533`*^9, 3.694382552585066*^9}, {3.6943826671723137`*^9, 
  3.694382668754105*^9}, {3.694382698938922*^9, 3.694382706914993*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "@", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"absCoordCheck", "[", 
      RowBox[{"sim", ",", "#"}], "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.693100914585726*^9, 3.6931009402631636`*^9}, {
  3.6943826525187483`*^9, 3.6943826868196163`*^9}, {3.694382919317224*^9, 
  3.6943829255800867`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"10", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.6931009232014523`*^9, 3.693100940688917*^9}, 
   3.693134130817912*^9, 3.693142057122737*^9, 3.693151090844977*^9, 
   3.693250964716155*^9, 3.693405428854869*^9, 3.693501447203122*^9, 
   3.6935028509720488`*^9, 3.6936489102384763`*^9, 3.6936495706981106`*^9, 
   3.693650365505965*^9, 3.69365302962365*^9, {3.6943825484701247`*^9, 
   3.694382554850218*^9}, {3.694382690140173*^9, 3.69438271013501*^9}, 
   3.6943829259330564`*^9, 3.694789608827653*^9, 3.6948618070157404`*^9, 
   3.694862179789787*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GroupBy", "[", 
    RowBox[{"#", ",", "First"}], "]"}], "&"}], "@", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"sim", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.694383105687934*^9, 3.6943831216009235`*^9}, {
  3.694383156492569*^9, 3.694383197268926*^9}, {3.6943833041968775`*^9, 
  3.694383308595883*^9}, {3.6943838848957205`*^9, 3.6943839058967743`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.34346682989628396`", ",", "0.475469849645918`"}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.34375659774428474`", ",", "0.4676862842875996`"}],
                  "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.3433638415691143`", ",", "0.4638337589602999`"}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.35456085232189954`", ",", "0.4571370115589421`"}],
                  "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.35310792874004254`", ",", "0.4614357084760714`"}],
                  "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.3456815187981133`", ",", "0.4442874794310214`"}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.34056390050791424`", ",", "0.4533931883086387`"}],
                  "}"}]}], "}"}], ",", 
              TemplateBox[{"4986"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, FrameMargins -> 1, 
                 FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.5900502110887398`", ",", "0.4065301050750141`"}], 
                 "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.57189`", ",", "0.39859000000000006`"}], "}"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.57189`", ",", "0.39859000000000006`"}], "}"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.57189`", ",", "0.39859000000000006`"}], "}"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.57189`", ",", "0.39859000000000006`"}], "}"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.57189`", ",", "0.39859000000000006`"}], "}"}]}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"0.5592708454150856`", ",", "0.39931562908020246`"}],
                  "}"}]}], "}"}]}], "}"}]}], ",", 
           RowBox[{"2", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
             "}"}]}], ",", 
           TemplateBox[{"6"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"9", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )]}], ",", 
           RowBox[{"10", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 90, 27642878682769441947, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 90, 27642878682769441947, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 90, 27642878682769441947, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[90]]], "Output",
 CellChangeTimes->{{3.694383108203341*^9, 3.6943831233772497`*^9}, {
   3.694383158826991*^9, 3.694383198170438*^9}, 3.694383309597212*^9, {
   3.6943838885698442`*^9, 3.6943839079821424`*^9}, 3.694789609578134*^9, 
   3.6948618076643467`*^9, 3.6948621804856777`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"taggednodal", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"GroupBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}], "@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"sim", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"taggedlefty", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"GroupBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}], "@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"sim", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "1"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6930008581523237`*^9, 3.6930008808548555`*^9}, {
  3.693007203368603*^9, 3.6930072075213923`*^9}, {3.694382947318041*^9, 
  3.694382981751766*^9}, {3.6943830523307676`*^9, 3.694383080160828*^9}, {
  3.694383131468558*^9, 3.694383135470392*^9}, {3.694383923162355*^9, 
  3.6943839500803585`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"taggednodal", "[", 
         RowBox[{"[", "x", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"XYZColor", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1", ",", 
              RowBox[{"RandomReal", "[", 
               RowBox[{"{", 
                RowBox[{"0.15", ",", "0.7"}], "}"}], "]"}]}], "}"}], 
            "]"}]}]}], "]"}], "&"}]}], ")"}]}], "]"}], ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "10"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.693000882894496*^9, 3.6930008950703554`*^9}, {
  3.6930011288456507`*^9, 3.693001154780102*^9}, {3.6930061312797537`*^9, 
  3.693006139843373*^9}, {3.693006350319425*^9, 3.693006533053937*^9}, {
  3.6930065768710403`*^9, 3.6930065813348*^9}, {3.693006691790602*^9, 
  3.6930067316514215`*^9}, {3.6930067768518457`*^9, 3.693006871973816*^9}, {
  3.693007016484029*^9, 3.693007035043785*^9}, {3.6931010480195913`*^9, 
  3.6931010643189125`*^9}, {3.693101100658419*^9, 3.6931012758016186`*^9}, {
  3.6943839655807076`*^9, 3.6943839664112396`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.4797999752068062], LineBox[CompressedData["
1:eJzt3XlcjPvfx/EkdKSyZYlSUsjRISGKtxZr2VMI7ZakSEQOEUeRIiGyZClb
ZYtEk9JGi7aZuWZaprmuSbKeNpQ4uv3+0Pnjvh+P+/7dZ4nz+/z1ejwfXV3z
menx+M7MNdc1aTt7LXCTl5OTC+olJ/evio+4Wy/7KERzzOm+/T0rcU9nWtwA
OQa2ro0bD/8qwbvM/YviPghx6oNj7sbrEpjtnSWndZNBl3cnjyebSSBx3do6
/wSDokHTLwwPkiDHe49jzCAGtz2C04y8KiC0TgrMzxPihwY5iauCBF483cVL
ezBYb1yanbFKgjw5vfyUeAZzI37NHWknQZDpg/On6oTQ3T2gqMd4CboM+7Qv
2ZyB0w22eFBCOTw3uvil9xSi9meMXXGfTCb/kxz6ySlsYKUArvFihd4NZe0+
D5lMJpPJZDKZTCaTyWQymfx3+uhPx7VmHRBgr1PoDYldBVbqN8bP9hKiq/HI
fRkpFWhR6mq/wleITsOsMi+EVMDz+sYWk0cMoo7xowIzKmChLa9ybpaobX9k
MplMJpP/fJdxP9a9fcBgQkHU683a7f/6gfzHfG/eFSkzW4Ds1xuKzPzafx4y
mUwmk8lkMplMJpP/L5a0TDs+lxOiwkfJxCW2HAnDfMKrNRi4SSw2+/UqA88w
+rmJMoO6eR8kqXNKEe08Ouzsr0LgtZfdyMBSeJ2LnFIzWgj/p1fzRYPEiDOq
G2BlKUD6pNnLC01ECNDtKWfSJIThpu1JH61FeDZjvYdPJwY669g7eX3EcJxx
wVHLnoHJ7Y6Lth8UYZ+/Z3XmGhFORd2KGXVeDAdfnJ54SoRNvSSTKm+KwTa2
/lJ2UYQHH/0u5RWI2o639C88e84/oJRMJpPbzePHmBp/OiPCk6uSUcuzxHg1
SNt9gJIY1vFaIVoKYqw7fSlsqKcY9ca++6qmipHp0zNst24pNLxcNqkplaLB
ueHGo3FidHxwR9vmffvfHzKZTCaTyWTy92XupxKXtGIRhi0NqvcaVIZdoqqN
c2JFMDPxm5d6tqzd5yOTyWQymfztO6lL/phuSQzysj6EGdWJsexV3dDUbCGu
Oo29fOqMGOeiPLs3NQlxyH+z13yZGPKBdj07KzPQHiqSN1ERI0dLp9MPAQwE
b9aWyGmJMHYA/4p1BYOC190GzrNkYDemuTTqMYMuOZuGfQoT4piGsm5KEYPl
RUNHeI1n0NXx8JXoOgY5qUrG8l4MmFv+ctcVGKj33j9ichUDJQ/r7Lc8Ic5k
ePW4pS9q+7zj6/0gk/9OG/f30/OMEuL2jZNp0bcYDKjb5p/gJURzndLOwEwG
muY6Q+SXMOBdsK1VMxAh/pddXc/pMYgcapQpmSJGq2rQp0UfhVBROt7bY7oI
TeovJ8w4zkDXJz3qSZ/fP/+iUqlUKpVK/V5rnxZzJPPL+4Qj8xWc9BVFKDKf
0KL5gxjuyl4+x/syqK+J9Hl1QoTj71/umfhGiM6dbo/Ighja0c2CmS1Mu89P
pVKpVCqVSqVSqVQq9X/v3is1tT/fY6DwMfzDksr2n4dKpVKp1P+E2rPrWm/s
YCB/7GP8KT0RXi/pnTTwBoPGyeoa9/SF8JvQ5UFdMoOCnOvHeSeE+GA+dZLz
cQZIaPjF2USIu+vruzXmiNCcpcdLOipA0zu2S6inGLsU6hS8k4R4eElL752J
GLvLz2q+Uqbj9VQqlUqlUqlUKpVKpf6rvNrxFr/1EiPrU/+VpurtPw+VSqVS
qe1S02k6qk8ZpFmdTdn3WQTDgh47Q08wWDg5pmKBkxipMZ4qwx4z8Nx3937Y
XTHmL3s6rNWJwTBbyZyLK0ux4ZaKy8toESTHI95FW4px+mzJlhknGVxLWG74
ZA6DKz3KArrFMUjapZmjrSOEbbXfQuYyg+HzTy6ICP92riv8Vq0qvTKnobsI
Bx888r5cKoSyQmbpNF0xik4MfS7hCduuI/66Pfnfc/WTcb3D5UsRLH5w4Myd
9p+HTCb/7qWJ7/iWZmW4GDRu6BIXIVqiZlgc1S/Hbt7iQ5EjBYhSajXsrlOB
pboHz0cf4ENtwVXnl/vK8dz6peLIz3wcva41MPlOBeLlveX3FvMR9PrtCkMv
CY6qXXd+7S7AouEv3m4LliAhou9ElwgBwiLldy2cLIXC8MF25VeEOCfa0CX3
aCU69Cyfs2ogg0z9ysemDZK2dZpMJpO/F/uxylvDr1UitOfU5IC3DOQ1tj7f
c1SC6Niqh74lDKJTXW/uCpGgqdq/o2j17+vd1/WYTCaTyeR/mZOarWgxrkT2
M7lwN6EQoy4Kag26ViLFzu+D3Q0Goadb+j14JMHowf2aFlQL8cwWt+8kSlDZ
LyA+4lchInRUFxp4SMDjbdoxyuuPzzP0gn1FgHslcuxrRSO+vL4fqKcWZLlO
Cs1RUYcL9wowZVtXaYuuFJ5mQwYHZgogZ+Xi6NBXioqhh3WFwQIUZf70a8rn
SpzvxNMzOCnAbI/J15TV2Lb9t7cN/YwXJ7yVYpq57+3YWQIMDvdR3FwmxeoL
uo5rGX67z/e9OfBZvX2NN4vQwzw382QB1NcdsRx1noVJjwk229d9e3//f9cl
u8SKZ0xZhITO/OS4UICx90x5Ol/uL2vzU06HlQI4Bn88KlzNwikt0691SvvP
S/7P9g65xpBMDRYVIxxDV1oKMP9+9HgNdRav13ir39rNx4eF8z7r3JSi1X2T
WscZfHTZ6hzOC5BinytPqWw2H0n7R23GVBYKK00Sso/wMf3Tis82ISxGqfsn
tI7lo0/+8FrdYBaacRGmq/bzof8uuNR1GYtxfWvrvXkClI2z9lO2Z7H92Ky4
iEQBvEYtqu9rI0XqxS6r1t//Mo+T5/RoDSms7u370P+hAHv6j8uXr5FiQE22
pfZvtP6SyWQymUwmk8lkMvmf4dtDfjNetonFcn/38GvZAhivT/P78R2Lx3MM
OrzXFkCrU8HYmo0sni485Dbzxvd//OzPduddJ+yPaLDYUle9c4WlAPNkHr4+
s1l4+ytvORYpwOoZTpsa1rK4etVpNS9DgC7Rl9zsU1j8dnV9xIA+QozPUG7+
NIpr2x+Z/J9shj32qIM6B2U9QbxghgB77JJihCEcLENuxAZxfJzZ0PpZ+zYH
2wVLd6op8aGnrZHzzJtDbsrRevHtYkReluuTf5GDhke3znFyJUh4zVdcasJh
+xgj5NsXt91eel+9hZ0uFJHJZDL5G/XdxbbX0xZyWHaxk0q/lcWw9f7Jeehq
DtJE1bMHYorh6zE7cckvHGbd2uw3pX8xJq2SWEw255DX+DDvY2YxNsRMXMVr
4nD9gXr2x1nFGKwuMXttLWvbP5n8R3y4F3N463sOvJAhVzqPLoLp02LVxyUc
uquYHy5pLMR8yeLtXtkckibF1as5t/+8ZPL3bJcnj0e5tXL4oH3vfkr/Imjn
zpjS/TSH51Vql/Qdi9DqkrVjqejL+4f7u5VEsYVocEyoeSHhMNdry7iG3QVQ
a35weMcBDlqqK1Z5ez1B0xCFPUYnOIQtvsu8OJMH8ws6aUrOHISfb2zrWJvb
9nxksKXY7tDKx2QymUwmk8n/zf1NCmbNs+UwJglvap7nwH3bxDW2v7G4aOm3
u+Pi319PlPFV/Gcz+d+8rUzqE52aWOyPDizdalAAiw6re9+W52Dst3W/QUYB
Ds7plxRTw6LUakuSmUcRpijUGrsXs9imJlZPP1mIgRZr9rrGsyhafir6zYdC
eNf7WodVSrHG0tRdTq0AEY7955uLpXjx1LzIYVwh9q2Tqyl5XInJZzTPdZpQ
iPONqeqnKypxKMJr6v7MQszku8ZsvVqJI/l1OX14BYhdclelzzYJ1I/qR2gV
FbRdP/B1/u/dERNKNRUyJHgsFd7vbJGHX72jtrsnVmJHXWTszxvysKNswgv3
oSyc90x0YMtzsSP65MBWXRbx4w4Lu2/IRZj8kVPYLoWe95i1u6Ny0B+1zvkD
pHCYGe+gc+URFoni9xoVViLKLCC3RZiNsYn8uKwVlehS9LEq+k429jc1T+1+
pxLWWct8u57OBPcqsLAotxIdhu8Zwe+ViS1T1uUuMa+Ekp3/elFOFnbx7kov
FUhwb3HyddNN2Sgwv5zX2lGKnU8y5Utq0uHY+UDa5PNSZEZcMhx5+iHiO82Z
Y/u2EjahW4+59noIky2XKuZOlcIiPr7DeO80yG9UdjGHFEPtAvcv7JGGjGOn
yg64VcIwV8WcH5rc9ngtzjXMvGmQSCaTyWQymfyP96kb81ydh0mwNWZpZ2lN
IhrCVvLz71dAy++Xs4W97sG6VsckaKkEt+aMzleoSEbitnP8wKYKnOibu1F1
Jg9xu7e8DCquwCaLHct2JKdh1/3WMfOuSXBJ4NPvRUEy7q/sqOE/SopEg5DH
ekr3285/ur4rvuePKqlkMplMJv+PTh6nomS/hcWii9IfXzWnIjY5Q+2qlIXV
vbt7T119gN63JjhWJLEwre/2YP3wFCwIGxuh4sUioaIbo94tDQ28eUv0DVk4
69S77fB8iJuNhdVWOiwidlp6bvJ4iIkmz36wapbCobVCNeiLhZvLVNf0ZDH8
WVzKnqB0BA7Y6bN+LYttNo41kz+mY+qgh3qsA4ujjpqHJKZZSBSlXbobw0IL
n2ets81E13uFCu9mcojMmj5T/CQdWxRda7QncWAXl+7vbZLVdnxs98Ajo/jv
M8hkMvkvc7fTp8MXNrEI6L71Xv6ZdOxtXTGs4TqLnhuqa6f7pbett1+3J5PJ
5P+vJ4TLWo//zGLxrXKXssYMnI8ojrvnwoI/JzUxeF4GQpY9s1GKkeJZ+IZH
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
ArEg80I=
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.31191153181697573`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.31666829803800556`, 0.621101336183915}, {
      0, 0.475469849645918}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.30389523647024863`], LineBox[CompressedData["
1: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
/cpxdre0ZHjXxgl3+JGPEe9evYv7JMX7o9n9OQF8fJLM35w7T4LG85ccHAQ8
NIcu6DtZSwrxhYHGinF8uH+SfdN4WobMniOcUg/zsavHjoiFodLO8/N1nkf+
59o2vsl73FE+rJNO3GqtEeNUcKWz9zE+4g9za9qjxRC6be9XqsXHZSfrtqqd
YoSMfcaMaOWh1ttp5iFrCVJus+5ELOJB9bjCR/2JCGeKHtVWS7md63TIZDKZ
TCaTyWQymUwmk8nkP5Izc14cMDnJA2P47YF+DUKMPLNl/RNjLo7cH7Rtk7oI
+Zs12AbjGHD6qettKxWhYOBIl+4pnM79yWQymUwmk8m/bwfFjK2b68TA2mHI
C708EfYVZR4u7cPgu3XCO6sYCW4NXvyhdQGDk1vP+t87IEGTVeGrl44c/Lzg
w7W3V8WQz7m5wkLGhsDl3sLY02K8y/jb3FodBkMf2oZv+l4Cjm18066eHMxJ
Vv8QniLGjoO/7FHZyca6dzv7mauJYS4Z8uFEbAVibqnrb7EQYVnito8hPSqQ
ot4qW9oihJSntd9RWN7Zl0wmk8lkMplMJpPJZDKZTCaTyWTyX88/KfJ+uCRn
4alQs3LVFSGkDrzG1F9YMMrKDx2V+dv3CV9/J0Ymk8m/Fxd6SXSO9avAa8Xe
H+cd5cO8sGbJ63MsPCjY8iivnAeuoN/Gq+ksaMU2nG235qOe2f/+1wHlOH3w
fS4j4kG7f5yN3wgWTjp5ZHfby+u8/6/r/MhkMvn34qnN2/37ziyDjb3D0oZi
Lkqb7i7TPFqGqss35gzNYjq3/7puhUwmk8lkMplMJpO/usgtslrnpzLUBMZI
RYMZHLXT2TexZxlmnslrmN3O4EuOlm99zhMMuFv7U34YA/nddXbpnGKoTRyV
rzzKRZ8JJkvcFxZDv3DWwSOHePC5wNzqnfgYsvE1O4UaXJy6MMxMZVcRVhhX
P7w5lIspRnYn01cWwyNi1zhdSy4uDhy1PL/7Y0w2Eh9TlzAwcf9kNX56MYoG
LEjRmsdA1B55mR9UhNwH9nv0YhncneG9JcSnCFO8k/TWtnDg4vWydtruItx2
jdWYuokDvQ315cW8Ipy9yzUR3GAg9L/5fcacYiyL1Giao2SQMSlCodbR95e5
Gx4OquWg5tPjkPdPi7CZf9d34jsOfjKMMuW1FnaeHzKZTCaTyeT/bh1by1Bu
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
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.12658957420290876`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.13228944617832922`, 0.4970812526052387}, {
      0, 0.49198086016682807`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.4471265742034689], LineBox[CompressedData["
1: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
um0yLpgL59NyNy2uk/YaYmJiYmLiv4LlLK2O3WnmQN30ltYjczYy7caFqt/l
oNb5kPYBazaePVVozXzFwZHU4ZMtNlFoOZswpqKQg0WXtfctnMDC5YZIs/hr
HEyM2xtsQTH/z98v/G/ttzFeLNrPxSoD0+DEMyyofzwru82Fi0f6tQ873zMR
sd5MXluZBynpnFlH41iQPHZAsesbFyeDEiO2NDJxLWRI/mcnDmLKT97r6WBi
wJGdvW6MNqS33T5lNIcJRdc5vCzHNqTGJPRWrWFh+4fiKGeNNhQmy8Q496Xf
uuLDw5I+3zc6yvfUZPV/v/NHfMTExMTEfw2b3L2bebakFWm7k19Yqfz8eIj/
vc24cSl5QXQrFNqrF2jKsbB/xLD5GjmtyFY0SX3iwfzT48n7cNz+zYg2FBv6
+dn6UEhuULIak9iGEZ1vY2dPJP09iImJiYmJiYmJ/1q+tkhtnGoYF4Nly3c0
ylOY/1D1SFkgF2nfJcTO3tRPb58nJiYmJiYmJv6zPSRwevaywzyMvFl9tfEY
hZBpE2RNzASQMXmbmKJE9c9H8GN9YmJiYmJiYmLi/2irEYnpL9sFKNIqLZAb
3VffGmmdTGXxUelxYpfeUha+DqqpCLnFx27f25HjHjFw0N6+PmCyAIYyDHXB
cAaqltxPfDJUAEmlc8O9njHwcZ+r7RQ5Aabmvnm3dCMDj1/LqG6xE+BOQNKo
dHsG8sujnmyVEeC6s8hI25GBo8suj7val37B6UP6hSpMbOs+/EV1IY2SLJO8
J8uZUOiU7bUaR+NZytALUZlMbE2SWHjHnUajwsSR97xYuLhRY6eMDY01wWVM
xdNMSCsrmz6sp6Gzt43qbGGg6c7eQONrNCYtsVMTXGDit6S3mrK3aKQssXd+
msRC+4x9jZp8GnIHjiS21zGxhdo2rHkxDdVPxwRPlvz840NMTExMTExMTExM
TExMTExMTPxn2iDxi0LCHhpn0lnu7BEUYmZmuYlSaGSulK12PkTaX4mJif88
Xzl2dLlZtQCL6hfZ2Uxgwa0m/PfFVXwkPTkZqTORhfB5PSdVo/goka1NvOhK
oYb5bOXufD4Kl6Z/UBvGxrvKk5vv3RFg29NNBYcs2bih1vn68iAa++1KnVpZ
FOTEIb6Wk2lM0NhWaNRnIwMZaUTSkHXQrrMbyoaVfItb8lUaEWHyVRcPUPjD
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
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.3504283207818933, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.35573050095987935`, 0.6950700323509869}, {
      0, 0.37944481201888686`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.15818235894069166`], LineBox[CompressedData["
1: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
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.25087709806536257`, 0.3793460057753548},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.25520484201160226`, 0.5321804545709423}, {
     0.39859000000000006`, 0.7834698844929058}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.37409343735967315`], LineBox[CompressedData["
1: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
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.3146223044179634, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.319347173486147, 0.6217387938498952}, {
      0, 0.6316967917974139}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.45827607765529765`], LineBox[CompressedData["
1:eJzt3XtYjem7B/AiJDmUUykRkxRySlHyLZFTpEjjVMghTEUoCiWaiiSGMuWs
UEMJkdNEJ51b7/uu9a7Vaq2WSMqhHCaHiN3+o/Yfe//2Nfvav5nGzP3XfX2u
63mf517rutaz7vfwvI/+Cm+nVe2UlJTCeiop/WfMzhVU1rxWQNLHIC/KtRCd
tV4vLxmogNrgZ075TgUYr6wZfTmrAk/ux9mrpBfBcXWPdiJTBVzGhlWPUypE
gvaRE4NWK2D8NXbOwZgCKGcZ3dpSpYCNfhf2qUYBhLuf9C9rVGDauLj1OWUF
mLDv+qVoPwWe9Wz/THGuEJ5VjklnXBTofX3XxZl7CxHUuHp2V50KfErZbbGp
qQBvG2u+s+5YgTsHUv2vHC5EtnFF3sQ3cki5boGz+SIymUwmk8nkb96LnvnY
ZW+swJjXge3idUvgvbmsa2EvBfxqj5/88WExNOIDjIPcFLDdKZ3aFFSKTO2q
kpWfFdDA64QK1RIk1FblLMitQOwmdcOUGAFOFm8dGnq6Alp7HJ6Kk0pbx8vs
O2Reh7MCMplMJv8LT9TvgKKdcny2UtUdXkfzJ5lMJpPJf0efKzxQGrNDDu/A
Iu/i+lKYXFU+dma/HC+NAystrhQjtm/p26wVcihZGl5cnFiIfQk1gyNXyfGm
h9qLBR0KcTJgsKLnWTnKHUNj9cIK4WCSYOg9qALZCW5ik4iC1vFMtjIuUavz
yGQymUwmk//fvhz1rJOGcQUsJ/q9SxPnwtLR8pLjCxkePfC7KM96ANeoe4Vn
D8nQ//DmwEljHuDRz2FOdzTkWJO41vs7nWwkbs7XTYiVITOsIuTwkWzkjfJn
uy5oPr5jJ0GNSRbaD+qkNtlahl/2ht+NUsuBVdIhFUZbBtfP/ZLEJjnY5Bz0
Yu9cGTrduLzcVZaFKQmrHstyyhFZZaO0/0omci7qXmwY0Wy3sAilskzUb8c4
11vlSNl1SXN4twwymfwPcl154pCnM8vhMHSAnVHVvTbPh0wmk8lkMplMJpP/
qp6a4DLQN1yG/gbbNK+oZ2C0eamjnVs5Zs2f8DDc6D5Wlg+prs2W4sy69PmS
i/cRbocnzpZS/ML9vGGYNp1vkcnkb8dz5/3kd2ZwOabOXGk9kL8Ds8WxG0/v
k8LguFqJkegeVNc/LemiJUWP9EKj1PoMaJeeOh0YXNZ6PJlMJpPJ5D/fkalK
dqGTpfgwosnceNA99HA+Uqh5Sorak6tufcjMgHCaPM2q+f/bZ+3J8V9O/Aoz
Tc5nzNoymN/Qeh25PBOj083e62ZKoH16xdnIs/fxPFo/bI53GT42xJeuq8lE
QpSvU9m8MqzfHX3CSSULK0Jx6ocZZdAIiQ+tX5uDy6OW9JjUvgwGZkUKy8Lc
1vxa7p+Tvy3rvDyjr9FfCusa32M1Tg/aPB/y/83joj8YSUVlOB0j2JNemY80
pdo6yywJZMvn+f5im4/kIWnDhhtLsCL+jcU2v+b2sWYeMzN4bP+621k6qAAb
fjD5EN6Dh/ueafl2igLY6rfrdnqmuHU9JZlMJpPJZDL527KWQmBZt4PH0zUP
1/TvXYyp0dW3A3x5ZB9MqvbtWYwOjOWS8J48MvQP7Jg9rRi+0UGXflDh0Uer
9Fo3+yKUq0Vi3G4Rhm6rv774VAmGf+kyI3mzCK8cJMzh4yV4fqfHragcEbxt
9by99QTQiq80HjWXR/H3o0a7bhZgzvi8p7N/5WG/6ozD5+8FONvnQPWIJB7+
o0zz2gcLUHfMuvDmbh62Zr3erSgsRc2i3wQLC3noW2FWhaEAznpSh8d7xMi5
p337ibIAq0RGuyyOiaHUUOf2Kby09fO2rD8jk78lJwXxiS+LeWQVXti3ZDqD
pWqJmTYfRGA7h95Sec3Aa5O7f6amqLU9mUz+dj01x9GuUCLC7nfFq2IVAqgc
2M88GstjzPehXtMbBQjYMOvXryk8Ulnd+qIkBjt7ZxlpHuPxyblxS/xWBqtk
7T87hogQWNn+sus6BueUZzc+Wi/CgBXPJg7/WoLSbtcSdVaIoDn2nYW+cymu
Pbo3rGuBEB4bvIRGNSUI+RKfNxFCrJ1usmR2bQk6rs9omJggxIGujfXS46Vw
cnbyCbHjEJJ1VP2aSwlGLpi+8MV1DumSpY8y1EpQ/bUk9pY/h2djjw7V0Wr7
75NMJpP/LA/08Dd7JhHCS+MatyC9FPL26cK720VYYTB3gUhYirmemwzc9wlh
Ud2j0ja4tM3zJZP/zl68Tn2k9KII+95azVk+gsHjpp2KB69EmDJqlOYpPxbH
3mmrMyIh6p5HekXs5JBx+uissJ5CNBm8CFARcrh34PGc0kMcnIIGzD+gyuFo
Tnb1YylLkeL/GNkQ21+/DGexKCakfNEsDpd0o3MbNVkUTo5XM4lk0XQqc1Hg
GBafH1wY9Cm97fP9p8X3wnN+PhyLPma3h9R1YaGi9bOZ/1EOHoKQNzHnGIiU
9vsYTBWi59EdG/wCGSzrM8Hw5k0O9+sTLHw8WXyYEbzafAeHR192JsZ3ZXHH
+8adxeFCaL7b2YEVCuD7PHrHhv0iRM+zbvopohTKCVeHscY8vBxDF3qcLcbW
4bJPLpt5fP9ScVwzsBQJekddRnQXI0LraYOXTQmMBryeuc6UR9Hp95onw4pb
57OW67VkMvnbsfflkHZDM0WwGhH2ec+VYhT4pxe7BPEwvO3dMS2pFHGO+zfb
mPPQi98RLjcQIPyURaUOw+O5W8Uwu+kMqt9nb4xP4GEwIC73F56B+ZH3oWp8
c/+zD6rOX8jgUM0E48WpPNQGfri1NIOB7aDDy5f14jFirkkVq8HC2OXFebEO
31y/nOqjcZ/FFHEf34bxPPZaflEe08Si3m8sO+qrCG55BnmDHVkMk6meGruR
x2iJfXDHGhaffnu64N3M5vnLXh49ZC2LvSemRKAfjxQhc6qRYVuvV7fMr2Qy
mUwmk789u09OSQnYI0ZNX37A3dMczM/n2u8sEqNol+bqTc02yc+d4uMvRuYb
6xnXrIRI5y/o6EQ11wv6Q39UGypq7a+lDiKT/53ulOvVX89BjPepj19etxUi
XtfDqHqIGGajbzI4y2Gip59L/wYeC71SYw5e5dr890Qmk8lkMplM/md55+ba
0UcjxAiIkSw40qft8yGTyb/fvz2I4AxfiOH3bu+SnUs4WDiZdfJVlcBwXky5
nxeHbfc7OauqSfDeL67XmS4cplzMFq7cLkGCKOTzWgmL9LsRXhVPy9Cuoja/
+x2mdX12y/MpZDKZTCaTyWQymUwmk8lk8r/TQ0buv5Q9WArjdWx/bX0BbhUN
CXCzkeKQ1+jFuhltnx+ZTCaTyf8EN6hqha9USKAU5xFwehCDHH5DZLKKBE0m
vgVT97GYyK5XfnVdgk5RF6zdF7K4XfOjdeipMuh/OX5SnsZg+ceve1/Ol6D/
03GRBwI4zBhvujRNT4Kn6Wz+tgoORxt7qiz7LMEO7/Jam20clvdzGbNSRwqf
c5NDjbawrfm03O8ik8lkMplMJpPJv9/z2llv8rgqgXJl5/w7ZSyKxmnE6Aol
iO4XENTXnkGqTtzx4gApJp2otmEXMxA0mNvzFeVQ77drso0tg/PlHdTXDitH
/tEFFQcdBHAMPiia/FqKGROjIm7eKcWHzpcXLtcuh2f551t3fxDA4dBHDdkJ
Kd44JKts4wUIXJd/6cK0cjTEXVm8XZVp3d+v5XyDTCaTyWQymfxtOfpQlw2m
82W44ZMXuUxLgBzr+588Lsuw6fqDBN3JpShZGdT+1jgZZs+abGvZXC+2db5k
Mpn8V/Vqn/du80xkyJpyJ7+ijuZLMpn8r72g7G3KvPdSzJ2SknO2RoB+Psna
ysek2C96NVloQes7vzWnbRFZz82UwKFgyku5swATBGZai00lGP9uarZ3ONPm
64/JZDKZTCaTyd+W73sc1tZjePh32HotOpjDu2Dp4sWLeOhHDvDKLha2tv+r
vF+VTCb/cbZeHStbs1qMWxe6+3xStH0+ZDKZTCb/Hq84Utux0F6MIZkprpds
hXCw6jkrUlWMrpPclc5BiJw0UZ5WKg/33B8fDdwshGlumH/JOR67Hvf8LduK
Q7vOX7ghrjz2K6NzvJxt7belXiaTyWQymUwm/709e94cpW1NQnQL9LxRpc7C
uPcxnV27hPiSX37uZi+mtX3L/Xryn+sQ80+2/uEi7Lm/4eekN6VQ9QxNUuhx
iBIXXlFxEeBzXeclavdZfJ29dETqeAbe9Y5X3xSzSNyyJfH6NBbLhp142KDN
wrxqdIr6Sg77cqURS7qxcLi1e1Jtdw5j1ri99/Zk4L/O2eFaTw5h/lHmg35h
UOnXy9Z+BwdLvcwPzoYsjAr1ja58YMF37Dte9TmDbUq7bpr82Pb7iVOkSJEi
RYoU/3vMmnj2wI2LLG5WrXLPieewWu/U0ullHAqmvTZ6YvrXqUPJZDKZTCaT
yWQymUwm/33d9afb7KQ8FnkN7ibtK0VInWeydfgMDhGvPWImz+SR+l7otFuN
Q2/DrhavInk42BxRX7qRQ59Y9xme2/jW/lqekyKTyWQymUwmk8lkMvnP8Jcj
sXFG/VlIT3ULiD8uRr13bdPAQSzM+6YteWvxx4/fPT8wafE5Dhd/1nY12yhG
lWkPE9tNLIReJ2vKDCUI2xuw/owVA9eGyLgJu8UQZx1+6F/FYEeeXDZjlxhl
0ROTwy8IYB2UZbZEKEFy9m+y22YMzA7abe+6RoxSS0G83hsGJoklfRNNeewR
HK1bqMZAryhFvsSVR7Luk7kvnglQNbBI48tbEcY6ru1n+VEA0fjomqWHRDh8
3Hszmy/Aq46mX0368a3PObbkTyaTyWQymUwmk8lkMpnMFYYqXXVh8DpW/8b6
J3T9gEwmk8lkMpn8z3LXASt9nSYz4K1KH9rn8vguNSeiSMBg+NulogvNPin0
VFLtzSF4T0qVjw2PkR9LRt29w+Jz+LqZJ5JF6JU2f7SBEQvhyhVu6r+IkFt1
uN6rG4f5Jk3uDx6JMIMZsdZ+I4uZoaGZWot4NI38PMrmKovKqA/iYQFiXN46
83pTMgOZf1C44VoewauDs1f0YHHMxKxG/SQPJwedj0HeLAa/XKqlOMjj1zTX
NWH3GKy26ng4cZsYKhnXjbjuDEL73w3IOi/B/XFZI/ZUCqB+rv+yahsJ3Bry
39g5M9grVw+1eymG4EXTyQG2LOq4HM9O58WYt2jOYPPTLJ5XaF5/dY/H3LyV
794xLIIVg6Yp7eUR/rCg9n4ThxUzJlau8RQjTsle3WKeECenF2WY7xKj4L1F
xMEoERqUt++NWCWBIt7ZZfxHEdhXvo/Ppv3Xexdb9q35o63VJXGNg70QsXbK
b6/dLcMJ5S2+oTdZzFozqqt6rRQT8u/GGEYKEWW7qGyLvAymXeJXKcUJEZkm
H/3dHQnOVi436BXDYeTpy6ZuVn+dfdnJZDKZTCZ/u/5QIbT5Pp5DWZP2ssAr
Zcixb/9o7TkOd+UJA43Ky9D+XJb7TxkcRjWuCo1bXo7pI/bM13Hk8EwQn6Q/
qBy/deq88s1tDpoh3d9v3lAOZ+7REy8VEUa7HVieni5rrYda9n1sax8ZvzT2
9QUh2ievnrNQtRwxOurui7yEyH22h1/oI0X3zAvnXzzmsDxn5GbP0HIk2/Zz
SXvOYoSh6oHCznLUx50ZsG4Ci6kjl0x6Fi1HlEl1tw0yBobwUJhvluNTlz4j
1XMZXGrovTNGLkP8pi7i2iwGqVVMf3OZDKuCnl6eW8jA0XO4UsxDGTZ09H37
ZDSHHltn6g5vbP6+AiI8Y/RYGO1mejfOlsN1yA/rtAUsxHLmfHClDN/pJvjf
VHDwcG2ffvCuHPk/CnVq+nBw7N5PS3q7AhbrzwR5aLLY+JW9E/aTAg0n3ev6
HG4ez/1qvuqMh63nG7N/mJTctTeZTCaTyWQymUz+3/wfAcitcg==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.25620265790757524`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.25995, 0.49977989391518574`}, {0, 0.5089153232066598}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.15984907666037085`], LineBox[CompressedData["
1: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
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.05198999999999998, 0.35103242380013394`}, {
      0, 0.6994695862529}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.346143901487433], LineBox[CompressedData["
1:eJzt3Xk0lfv+B3BTKg00KNKkgYaTBiWR3irDKWQoGo5SyGnSpE4ahER1D2mQ
RIQmjinRSTlRsucR297bVlRSSkpUjql+/f7IWet317p3/da596p7Pn+912vt
5/vsz/OsZ+/v/j7fvb9b33Oby3oVJSWlo4OUlP43q536fxI4MGGdm1AXeVkG
izdTv49/yoShd/Tx2X3kMPIvWX7Ch42F+ir9kxbLyGQymUzuFtvHBN/LNeNA
zWeBZmCHDDrqbrtUjvOgNUM9WOtnGTYw/TaOiuHirlF7Oy9Khpyay/eON3Ix
qXdscOMUOa6sN5xc0MjBp9LwO/4KOXzWirx1HLk4knt0r8cmOXp99AzI1eHA
vdTB1evAH/2frigxKfBQBZlMJpPJZDL5L2bO8cF5fcEB69HS0rclcswalB7+
is/FQci9Mr0VMHU2yRY946ImyLFKPawSHWENvXc689BWvsT6yu8KpPd9GTMe
XMyueTQqIFaBhkcJw2ZbcjHv8GzrTUaK//jxzJv5Mu/Gcyb0Ck/lh5R0//n9
2s2a+nHf1b+xwQuK6BA4KRCQu7Io5iQX7qmDZUtjur8+MplMJpPJZDKZTCaT
yf9/L1PdHNCczoL1FvvByeYKBIb5N07oyYJ+5d5d4cMVMNU0t/u+Bwv303Iq
Fpt0f71LJYyzY6zZMHP4lPHSSYGmIUoD8t5xINOvOKespcCG2HEWkZf4KJ1f
8YNHogJ1b/kHg7YK8duuw5M5hQqsCW15VcXgYJRvcUJnhwLPslJWdthwEZRz
2uakeiU0W5PjeTY8pLzZkGVcp4Dqg87iAasEsK8q3l6zXoGVlawqg+cCpIcb
LDOSf64vfNv1Xho8DFKG6PGxCjyeXrm/sJUDz8BwW+t1ChR4el2qHc7HgiCP
zjnj5EBebVPSLj7kUxdLfHvKERFTlRyQI8QBPzvXlOVyPL9/d4yqpQCcEXqa
qoZyTDvonuMIIeL3F/RYIpTCz+2W6PAbIcYmaO3K48hQNNRgaY+L4q75YzKZ
TCb/d3iwp1dmlVSEUxVBm3/65c/vr8XySOnYTBE+GBTnZhnIMGp+brW2iRBu
yUlGZkOlkJ2Ja2RGCtCjpq+s8wcpXj1fPbG3hRCqZTsyAqqkSPXae8/P7fP2
M8a8rv9BhmQVCX+bthip6naVC7RlKM7w8Dk8vATFCpF7yCMpsGd/TXw/MZ7f
0/7dta+0q56tfl77igaW/+XceOe4YTRfhB5njhgH3pEARtktGSvFSBt7Itg+
TIJ5uvtf/qokAnOxYWbgoHI0bBxYzP5VAKvm43keyeUQW7yL7KkqxMF685zR
nx/PzVp1wSCHD702kw7RTClq16X1/82Oh0InD9Hpo1KEvVU/XX+Mg9aIKQdN
5DII9dYOeZbAgR+/f/r6MBnSEwUmv/bjYaH9+/nKV2So9Vw//GgQF/zN3Ia4
9TLsbjHeW3yEC5Pnbm2hZnLMirNpM/yOC5/RxXWSuRVQlPUPdJDyu64vMplM
JpPJZDKZTCaTyeT/67hxigFVm4QwfRF9WmVP99dDJpPJZDKZTCaTyWQy+dv3
7df76iZa8BBbucDn4abuX+/nn3nDvO8uTpAyEZ0bejUuUAZdX8Ws9hQWVrR9
rHKo6v76yGQymUwmk8lkMplMJpP/rFfzNl9738KGtpXu21+PSnFJ48We4XFs
lJZ910vuI+32+shkMplMJpPJZDKZTCaTyeR/5Kspt04d7sdG0eutRWuDpGhr
SYwymMfFjbam/KqZ3V8fmUwm/7vsZFM+avM4DlKinHNPnfrjfv6X9bLIZDKZ
TP4avWIr647nCBbmOtr8POCMBBrbFrC2CZno9VvUB+7jMog6jdOtsxnYIU2e
e25UGeo6507Na2Fgzx4nXfHJMtwTXB8/+2kxol+2Z/TJlmCHwZbWzGoGdC2T
tEJ8JODO6Vzz+mEx7PTUX5q+KMfqu0fGPyhhQJ3pu5qlJ0XI8KhpZR/ud/Wn
ZPLX5KnFh5RHr2fAb/iMzsVpMvz028orlodYeLQ2qNYvSg4XjRovaRob8nDH
yHXaciRIH8ft38NG3fcX9zRYyCEbfyvhsgsHO9c7vLwQIEfcmbObmYNYUCS8
WqXbKsf5hVVLoyfwYKK1ssbulRyRWRYvRI4cfCfPzz2TKofWqkl5x7az8Lhg
uXeh5O/r2/NOY6R52X0UuWU1vNORd/v5IpPJZDKZLEPZlObWJ6cZGHdy7K01
5jKMUm6JNC1i4rjv9R9d0mXQKcru4FuxYGRjX2z5RI5Fk2OW/9qHDfbGNTyD
THm3398ik8lkMpksg6RYZJ94gQP9cFfjOaUyMPKcXrwK5uLxje38dQ4yTHhh
utx3FRcXA7Tq+JChKZ2dy73Lx4Wm5rVD50hhoOb7yX+DAJbnP+7U4EnxJiRe
+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
6v8BTlvMMA==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.11892854410763361`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.12131000000000002`, 0.27372317711145083`}, {
      0, 0.4300553484918181}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.19694086085479767`], LineBox[CompressedData["
1:eJzt3XlcTdvfB/CoboQikoiSa6ooRSh8cEWp0MA1ZGhASGkwRINIZGpUKinX
UIa4okFKnVPnVIqGc/aZ6jSgGy5S6HZv5Od5PS/d1+t5fq/neX7Pz+/Xde/3
r/16n7Nea3/3Wnuvs/Zea5092snDdmNvGRmZI4NlZP5j+93o3krnFguhXpF8
LvCAGOQ/ltXn2TzRKRJiXM4+r0k6kt8/p+3f3Rrsn6B+KFwM19ZpnSNtJNjB
Ky0YdVMCuZ+ad+pbi9Hih2nrcmq605PJZPKf1Te2pHnfla3B9j7RIqmWGJYF
0yP02yUY5LVlxINoMUbzi5oj8ySIGmigVPVIhLwZD0pufqjBujtunJd8CW7B
zHuUQQ2kl1rL78ytgWT7+sTeWbU4vvj+vKcrJD1+fGQy+f9ul21PePe+q4HS
6/rsuXoSDLlotLN3Qi3uHc6ylZ0sRprFVd5bAyn0Jj9gpewSw8PcoHeHrRTa
HJsu65c9Hz+ZTCaTyWQymUz+11muRmw2v02CGxsGd+hYizGJfyfvwuwaOP54
87jKeDGG2Zi0s90lWNO+yEhtrRhb5ef2PvxOggi9c4Yup0R4NiVHLXqbBLbF
lyMHnRDj0KTcxGPzJBj8cNQp5zAxzA7JsENzJfBtP7xwtbwEaUtW6MR+8rhg
mWRZbzG0gpgEn0wREjxdPJceF8PiRXyvwhAhdh3/TbXXCRHOrjFWsI4XIMzM
WLvVSAQnc3O2dxKDhotrK80yhUiN8yjOe8uD59S3h5LeCMHsnCZXPZ6P4z7j
/ORahdCem67WvoyPfrK1fumhQgwbn+Z1L5DBxQOrHrvKi7CgT6xY4s8HW9lH
aB4nRMTytDUlKgzC6jNSrjwSwt3beS/7kz8/tyeTyWQymUwmk8nkz06TGbz5
0UE+hMf2CTNvC6C/P3+C/Xd8HI59s8cuRACOexJrpAcDLcdf+3+QFUGm5OG5
0GYGC3jxwrly//z+8zbuVzeLYFCVod0U86rny4NMJpPJZDKZTCaTv1YrX4/X
vLSAj3nihBRfYyF+eGPw8U0qD9WBCjrBxiI4XIbPuo5qXCma/3OziQhrJ7zU
dDpThchrR6YM++T9mgMMTooqMXDY9mPSFyLsVraXctWqoJ7Y5p9VIoLlqM35
Dy5VodSsMixaKkJi7ruod7pVKB78sLHSTIQTfeL6WelX4TeFjbMOaouhYBU8
ds6SajRgxs4dk8Q4zSn66bGkunt877/arV/js816PFx+abJBs0gEjdYjCk9H
8DGXMz7S0liMy5K3NRuz+Rg9Q06Bc16Ea7OqMkov8pEcphs2pk0EwYMTLx5t
5eOFo0OaX5kIEQIvt+QQPnxH3ubrXxehKnhWcn0+A9f2e9viVEQwXhrvK1/D
gJsw8UHTZDHsVGP9LFkMmqEUsTxVgtTmC/5engyOGcR4KtRLusv78zglmUz+
3eFzXMdWFTAwj+/bGK1Ti6tx9Z26AwTYqtiHYcXWYl2gn8A8jcHS9FeP7L+V
olD5SXnUKgEGq8bkTy2WIiny4/xlFQKUfJxX0WhVh8VHpj0u8BdiaxhbMe5a
XXc7V6RTVzKrTUomk7+gL7isHrsmQIDM3SP99CqlSNkqtyBgowAxId5PzTOl
eNpluCSiTYB9Nl4DfBfX4pLhiKZ+5QJkSH0tOjol3fl9bg/I5L+S5TeEW51Q
F2FiUQq3mF2DTolnmoGHCJ5KPzf8ukCKXPeTvbtui7AkYIO+xy+1aDOeIlgi
FmH+BacNjj9IERCWaKQQLob7E/HNmTpSHO3rInBeI0KIcXFK15RaJFW0ntV8
IURV3C0LZcdabAmc7T4oUoRBHSV+2xJrwRuYOqhBQ4wcv/Dod2m1sFVIYfCp
X/3y5nipxs+1qGwr5+SsF6NhyaKHH+NrkRE45duqhWI8S8qs8jvb8+VHJpPJ
ZDKZTCaTyWTy37N6kcOTSVeEeKNk1KnuVdvj8fy7HX7Kvy3sqACFripRP7vV
QP9oxNYxeQw+Chxb7lfVQKDxuMMjmMHu5l6Ve6fUYJN6cKu5igDjBpsdW17b
8+MF5H/MV1/7L/3GgY8+XTqbKkfU9ng8ZDKZTCaTyWQymUwmk8lkMvn/75Gi
1KJxK/jw3jfm7RPlWozQqtsUdYqPu08XPXb1/P353+f5m/+sl5TrJWX48XG7
XXFYkLMUaRvVAkJ9+XDNjLXv+4sUhZWGO10n8DHjbd6Qk++lWLVjvuFZbway
DzvMDYPq0OC/02nTewbhIXaFly/WgSvrmJL9WIAsr3Wqm9h1kONm2y/gCnBC
vmvW+5M0n/tLe0fwSuOYowKwD8gl5VyQwn/1uswmfwGGj0+OMBhbDwi36/Ma
GfyUGHS0Y2L9Fz9/yP+Yj9V2tkTbM/hesi01NrMOWqverTbV4cOtMGxDq0Vd
9/qoz+nJZDKZ/K9x5OOqyA9neTBxPat0+YYU87wCdpxL4yE1b4u/bqMULdbb
NF+XVKN+1kbe0gRqn8lflx+kjeaLJ1Rjn/rmMz5HPp3PE4u8bptXo/w5p9So
Q4plHhN/9F9RhQMzc8QPZtfBNkFNN0apEldSdzuJrtSBrTbOTv58ZXd+5D+W
p+VZ/GxpWYXiU0Py27ZSff2r3ZRlxY6XVEAp3Ko1fHkd9ugKZYyCKuB9lKsx
5HYdPKLOuB489BCpAysC9x2qg9WI8lKxUyW84rxK+ifXd+dn7Tbn+gDVBmQJ
XEZXM5VYxhGP+d6xHtfPeRQd8qjE6JTc9EV6/z09mUwmk8lkMvnrtqdB8Hn3
ogr8qjPYV2zSgCMXue98fB7iLdfx3twf6iHhKQVaC8q7+59/NhsNS9JYalOG
OYm5WRpXpeijY5BSavMQLqG9Dqj8Ugd7l+u+0+aUwWX9DJbDx3rkOmsP3ji/
HNX+fpms4fW4md9PenFSGVTbRhyLSa/DxFtNp7XDyvDi+0bnPoX1KN9j/zQ9
4D4W9/5RU71/Aybvqfo+fFNJd/mTyeQvZ5PdzKXbPsU46T3gqcaWBjgv0qz0
LOOg5gCzkZPeAINDY5wTgoug6Dl/yu5XDTioEW3Aay/E9MIBHe8NGsnkP5Q1
5rX4vj3BwezvWRHyCxphFc3ymhHAhV1Nmmr2/kY8eBNiwTcvwS4nXbX+HY04
pzd05diyUoRa3xUKjjeixFdvYu5NLhKXyRx+/rwB0z8cv/Ymtgjup4S+Ldcb
MORhydkQBy6mqIc3m53u+euX/D/bQVnRb3JmKeT7Jfrk/1iP6W7OtgZx92Fz
LKf5xKf+RczmQL2+/Pt4ruC/eqJ+PZ55xW89VFOOwI+rsoWn6vBx7HA4Xy9D
RuuxM8P6Srvz/zz/h0wmk8lkMplMJpPJZDKZTCaTyWQymUwmk8lkMpn8dfuM
3Fr7DNVStN1dvONWlwRHFkzfGfqwGHsqkxf7XpSAY5pbmlZejBW9pOOuTpFA
cmvyngqTUuiWNGUlK0rw/kBN18YJZYg03GJU5SpGsJX1SpeZxTAbO87h4mwx
fvMKbGZu3EebhofZpiUirDCceeyuTjlOlN3YJ/vJSt88194bXQZ9VR+h9QUR
tobH1OuYlsFM22O7spsIKrte+OY7lUKq03fo9f4iNPxqob8p/z5KctodU3eL
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
ychh
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.07162606276763402, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.07757318507364602, 0.45818901265841466`}, {
      0, 0.5615292027024015}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {XYZColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
       1.6], Opacity[0.31902771739762237`], LineBox[CompressedData["
1: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
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.5598671607203964, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.5634821793923744, 0.7948433743989735}, {
      0, 0.4571421624136486}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6930008855557733`*^9, 3.693000895583111*^9}, {
   3.69300113270012*^9, 3.6930011551088424`*^9}, 3.693006079235138*^9, {
   3.6930061327423763`*^9, 3.6930061402432623`*^9}, 3.693006220211581*^9, {
   3.693006254363052*^9, 3.6930062807444167`*^9}, {3.6930063452515025`*^9, 
   3.693006430366082*^9}, {3.6930064731684494`*^9, 3.6930064928793297`*^9}, {
   3.6930065242365255`*^9, 3.6930065350248833`*^9}, 3.6930065837589397`*^9, 
   3.693006794770297*^9, {3.693006861456522*^9, 3.6930068740268974`*^9}, {
   3.6930070246173472`*^9, 3.693007036898509*^9}, {3.6930103637381897`*^9, 
   3.6930103843873262`*^9}, 3.693011918426505*^9, 3.6930128538061066`*^9, 
   3.693013304539447*^9, 3.6930134603345165`*^9, 3.6930135054715433`*^9, 
   3.6930333823879786`*^9, 3.693033464664627*^9, 3.69303434133355*^9, 
   3.693093246689233*^9, 3.693099129553361*^9, 3.6930992148614516`*^9, {
   3.69310106127177*^9, 3.6931010767435703`*^9}, {3.693101112930398*^9, 
   3.6931012792957025`*^9}, 3.69313413264777*^9, 3.6931420587795925`*^9, 
   3.693151096917115*^9, 3.6932509667047415`*^9, 3.6934054306750126`*^9, 
   3.693501449745031*^9, 3.693502853463939*^9, 3.69364891207883*^9, 
   3.6936495725859423`*^9, 3.6936503675410748`*^9, 3.693653032038416*^9, 
   3.6943839705439167`*^9, 3.694789610685136*^9, 3.694861808719714*^9, 
   3.6948621813408613`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"taggedlefty", "[", 
         RowBox[{"[", "x", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Joined", "\[Rule]", " ", "True"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", " ", 
           RowBox[{"Darker", "@", "Green"}]}]}], "]"}], "&"}]}], ")"}]}], 
    "]"}], ",", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "10"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.693000882894496*^9, 3.6930008950703554`*^9}, {
  3.6930011288456507`*^9, 3.693001154780102*^9}, {3.6930061312797537`*^9, 
  3.693006139843373*^9}, {3.693006350319425*^9, 3.693006533053937*^9}, {
  3.6930065768710403`*^9, 3.6930065813348*^9}, {3.693006691790602*^9, 
  3.6930067316514215`*^9}, {3.6930067768518457`*^9, 3.693006871973816*^9}, {
  3.693007016484029*^9, 3.693007035043785*^9}, {3.6931010480195913`*^9, 
  3.6931010643189125`*^9}, {3.693101100658419*^9, 3.6931012758016186`*^9}, {
  3.6943839655807076`*^9, 3.6943839872759237`*^9}, {3.6943841668535123`*^9, 
  3.6943841733752527`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
NDqhTQNJrwJBTpEq1PM9m75qFw1615+41GpYgfzRhLLJHL4/iSMrQn+W/bmf
+H/fp0OY8L+0NX9e/HkFN3+dcR5ZpRxVrjt2LtuNBqQ3fmlyX1+gA+zjE6l+
NFg4Ik6L1qtG2py6HT1JNPBVpxgz69SiyFfqQT9W0mHa/3fxuAJCG6bLQ/m/
06DQn73MsrYW8Sq/9Hh0kQ5M9hIxuidqUeCv/lh9JzrITd481cZJQkynFr9X
2tIh2Plp5kgAQpui96T/eEIHZ9vg5jmbGhTQ4xuawaCBXPvB5qY4hHK6jeyf
8uPbv51OSPetQTFpKp9VVtEh0U72ePY9Eqq6u6KugYsOFx7Ktf+SqkfmTh0q
Arx0sMnMkb5wqx6RHmjMXAukgyJPmKr9WB3yVGt3C1LC2z/cuEn9Yy0q5NA5
fUKCDpIRc53WxSRkquRVQ/lNg5pNO0a6X5LQ69HFmVsCeHlmcbOkfh1K1H/Q
u1WKDuM0Wkf2z1p0+rVEBVMoPn4tsd1GadXoSo5jyq5yfL7oWzSNSatCA3ou
C+V9NLDntT9z/mA54hV018iSoUNmmHtI+Y1q9CaQJ2kuDe/v8fYpimYl+qiw
IHSjngatiVtOs09X/u3nC2HChP99fZjlzfljuJ25X70dkitH/BI9Tp4z+Pog
rjDn9SQfcVrYRzbg82WiWA/Xx5X5qN18zsElA4+PQsY5nLBc5C3v43m/iga6
01OUq9J5KOtXGU/wdRoo+h9PuRle9Gd/f31fT5gwYcKE/3eauu6chxmeD/BX
Ox4++DQb2fLtbsd88Xg3oHUb785UxHxW6XoNnj8nhjAvyHYmIhGrKlHPSTw/
yN5T+3tnBhqSvysq2o3Hw0YHMkYE8pGp3HnzUDyf8D1z8bW1Rw4ybWVvRrM0
yLQ/eVZKvBgZFYyIssjSofCmKr/hihKU8rNs2PkdDYJX1E+1S5SiNye8xR/1
4vXf5HnnHPECPXBJ+pKMrz9mY7+ZrxZUIaf5sVeCeHt7h/f8Sjtci77kTlM1
D+D5RjvGxFJBQpxU5cIAPF+ZYBt/17eqAZ06wfFkNh6Pv+8ompwj16CtDlc/
mtLw9vQ8C9C8WYeGq56lNz6lQdhqZXXxmyTUtXtB8d78P35vtS+vV5WE1I3X
Pku3wIDE5KKYcAOhZpE4ZeeLGLSGRZyeT6hGez52lb+qwiD4pcty05s6RE8o
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
//V9IWHChAkTJkyYMGHChP99/H8A2XWy/A==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.5011117657672897, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.5059703700127459, 
     0.8169210417219491}, {-0.2954259100544743, 0.16525928119200622`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
in4vRk+5P+oDo2u7W5WyaFhEvjMoWtkHEct5BgbvKZjL8JLrdybq/9viajUL
MiZEdVZ55fTCkGNNUPY6KjINznjsb+wBjuY5L9IKCn5L+N30YWUPyDTsir98
iobKZxYJj3zoAbLah30Ly2ioeyKyY11dD+S5x1l+3EpF3VXn/1w+0QVOS0YD
thH7X/Xz2H5P/26wjCVNnp0g48znjZDf2w1OVm0rPGrIqPQwpXVWvhuq1G8M
rdxDxW+t7lWmW3pAjnvmj801VNQW5u1/mdENQrvVFFOFabjprO7V8M3dMOCr
qlC3nY4n3TKEY2W7QOrqid8P6dDx1SEO6VNoF4TJxWswpmm49k1m1tVrfPPN
N9988833v+HMC7ramTM0DJw5abM6rAuazsSGpZxuQMkPe9uTTbtgUk1sf34h
HdfdijDu2NoN3nI73bbtpWO2d7CV/MUemFwjKxFZT0ODNRsjbL53Q8PvDT2K
Lyk4YvN24d5EN4hxXVosEsgYeiL4Z9vcbnAQsfq2o5SC8w0p2RGiXVAsOdhv
RkU0NnKODu55C65ehpqvL1Jwh2mGQNCatyC0jKq0ahkF9V7o+nie7ICTQ3As
1IWMHiSVw2MpTCj+n9+bo+d5R3+qJN98880333zzzTfffPPNN998880333zz
zTfffPPNN9988/1vOu+wUGOHJGJviaBg2komPNGf27SPSsF8wy+rwuWYYHDT
O8dogorSeQfDjw62Q8uc5eJmtQZsFpK0Tvdoh4i0cSHj7zQcaDpe3BHKgOAD
X34dlqYh6dLNST3CytZWfVhJxXk68z5VlAGWksqjh1Qo6PkjWNLOtu2f/iTR
GwZ53Xzz/f/bylbSAhlLEAtXROp2Em5weLLx1DIy3vqtSWVBggERqRoFx9Pr
8ZepiG/Wh9tgds1PSaoCiPnUZJOlka0wfnZ9hcW9WtSR99zP/NgGUmJirNCN
ZEQP8/xBKcI3n6nElBD2L/5lxdE2UPwylfnOh4oUE+GdPxitEH+7ZO3ufQ1o
sVlAXPx7K8hxz1tnLWnA4btWuzs8WyE4YWzKNomG53VycZFNK3gf8zPXqaBi
oNSbwVn5VhDSdg6MW0nBWC+XsDvybfDEVrS/9AMZdUQGPofEtoEOV45EYVGw
4sje2g2jbeCUddrpYR/x+T9yh/RJnAHu9g/MOIcoGKhonG7YwYB4TcGyph0U
TK3gMcVVGZDm+/PyXjMKjk653BPyJ9rrJm+Y9FPRaz5j6xU2A7yPVpuZ+9BQ
b8Xv9GdFbUA+HmLj9rwBrbw+Rcsz28Dd+EOUuAsdBZ0omZcUGaA3HHOaeZCO
UqYZ4zdiGEBe7SS/mkbHLZ0ZAbN/MEDxa2xb+B0aWr/LS32l3A7fNu2Kr+xu
wD7lR2UmDQxoX3xRd+gJHZdcz7H+VbYdLN/b9y5bT0eFDdSjJwzb4XJiySsa
rwGrZO7FyrxjQOBjrcpMPxo2FfwVXEhvg8C+kh06QMeyUNaf0+nE89c5KW1w
jo7DKlPCGn5Ee6yPstBaOqqEGe+MfdMG3pbc4NBcGi5OVH+dn8CAAenV9w8b
NOCH1rLCoHsMyPb0T9O6R0FNNaFU6dcMuPxiSw31LhWNajW2b1jUDpmJhrWF
XET7RSG3Nf3aIbDq2qU94lT0nF4rECLSDu5K1zs3xlDQ4HHgWHExAziqwgFZ
rRSsY3eo/rWqHTppp1zfr67HpieZe6YLGdBpUlRmllaPlud7lU6NMkB+Z0SX
1vdaXOKsGGo3xICW3FHDe+fr0cZtYwuluB10dja1t2cgyg2TMvY5MaHWtsud
a0FB1anrbpcq2kEi8PNCljgN85vUKl6OtcOsV+ayrXcp6PKLV2LdCBNid7Xc
6A8go8c8N6F4bQeI3ArWTowjo+lHP6SRmTAQoKI1RaZgaIu2wB65DnDadTJg
fJKML8lnxWVCiPpUcrmc509Ba/8jg8k+xHiUPddH3aCg9szmkIXX7SDSHFzC
eUnFwoSmCUkl5j+/p/m7nvHNN998880333z/p1tDYR/5zykatpjV9B6QYoJi
6tIB/RQ6yhltM1ctYcJfTSu4vK8NWFEfULPOnjj/gHTcO3s62hiRSkXWMcGb
TAuR/N6A4x+3FE6+YELw3bTE54M0fH3beqo5swN6DQZvPBun4bA6Res8iwlG
ynORejV01PA5mLulrB28xQs+Lhmio7WKiZF1SDs8tRMmifVQMb32itzQVia0
fJ3rHCPy8znHY6orR9rB4HklNHQ0Ylstc86RyK+6gcaR9FfP0axx24eQQcIu
MT2ywU24rmDTnK9nO6hebrWJdW76Z7z/V5Ovv9Kdd2nCru3RLF1iviJuaLgy
99JR8+xw2NA9In/eb2yvYNEwfO31RelpTLh8XuRzCZ2Cyq45NaJ2RP8qSwUf
Usn48HFad/eL9n/9+5n/dP8XxRBOsQ==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.19140945168219925`, 0.520294648781764}, {
      0, 0.8404147702241114}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJzt3Xk0VX/fN3CppBKiSJoUQlKJUuKtgUKkOZFKCdWPyFBKhuaSMqXMU5Qy
j5n2Mct05vmQlAYKpTRoeM71x/X761nrWfe67+e5nvu+9l/Wa+29v8Pe3+Hz
cdbZR83Zc4eLpISExF15CYl//LWQClrLeJuF3j8lc7fa8vDTZal10vdc6OCv
t6M+PBTOKyieOZCLePa8WT5pPDS1XJq2N/ch9nVYbNOq4GH91NCaiA2ZmBp8
xlR7Pw8UT3369QeZeKido9yynIe5wr8YSnKp2H5phaxFGA+8JNacnyaZcBkr
K2uw5YOdNpNqsPoBTDVDHOvDuNh0ZPfVreMeYcrd+4yQOi427Dl9KOBYIbhz
5TYYxnBhrDtil7SzGFFVOqOvkvjIj2zzE93NRYTNrW9dLB7KStIeijjlGFzv
phguz4e64M6OWxZliG4fb9kkrj9mRoG70bwqzJOV2zkg4mLxKT+ttFkVyKfe
c8ir52Jr99rzRYvKkalaPrZjLw9/Zglt1IrKsfBin+vXEh4YeffWaeSXYJX0
ljcnVvMgMRbvecfuKaYsmqk1spOPqgcZQWXZT1HsN9jT94IPBnPn9u9vyqHg
mFi6/j4fphGdzBOnn0I59vYG7gAf373XpK7fWomVMykd6kYCdCjRe6seVGPN
rV91be4CmNVcOmxVV41vi37CtIOPLUT4sVmfKdAzTTvz6iQf4by6T3IBNejc
M+d3xkcexn0X7LUMpKD91ub464V8cKbWuLEkKIgwun1+XBYfl+/HfO0rrQHl
8pWr2eU8FHclaeQNUMBrmT5/di0PDw/FFFEf1UCPGxF915OH5i1vDrnfq4HH
LV33iB8cfPwh3fXpIAXHTmpKLgnm4kmyfNlko1rIvWq2LdPlYt0zf82WsVr8
2v6tdrsuD8nLy5csqCSAyXszs27y8MVGc5qPL4HySWsm92dxoZdVMjHxRyW8
Nl7+EuDDRcTuDdP3KlRi2jrRmVvvOTDU+X1kxaUKfK4LDpxUxcHiugol7YhK
hHQm712pz8GTZYferMipwPjs3tPKL1govPxpR1pqKSgTczSm3mPh6MLdBe7+
pcj5oDGo/ICJ9qdKS+9mlkH+2exju/hM0CYsmLN7uBQ9Cp3rrbKZuDw/4P4X
ajFMaZcHGCZM7GvVbyjQK8W9xobXLwUM0qRJkyb9b+qouxcurzUsxbxdI5n1
YqfvNIqy/Z6Po4xcNYOlLAiVA3zPd5ZAfqirzqRJvL/8+H4zhlMCrd19Hb+P
/8frO3WPcad5WSkeRdZvsOAzIMnveaKdXomW2bYXducyENFUb3hnbxUK7q/J
GP3ABG5NOm50tRquyqENkpFMhDqYv66bRuB5rw7z+zEmcmfYvrUJFO/P1fmb
SsMZYPyxtLPjUnAzP7BhwJQOTtOKgKgjFMhsOG2f7EPHfr1TDsVHCIRQDB2+
b6KjIP+Q55/VBPIWUY5TlRn4vu1ARKphNZZ5VPHSV9ERvsrCpu9kOdp4b193
htNwma9t+YNbCZsvhkVfLnai2uBeyef2Cpw8mbSna3InXFrG+bpEPsUMk+MX
+rgdsFhwZO/T2GL8uDz2O7eoE13ssC3YVoxQjylBu7RpGPh6qakgoxBvTQJo
FdlURH45d++AXD6mvZV9dc+7ExbJ6r/2iuPHmiK730rfO/HzSs6C8toUHAiO
P3pZqRPOS/ZN7tNIRz777LZQYRts5IsWJZY+wETr60c2MDrQP9316Dv9ZOy0
UPyj+hcVU6hDqR4zY7Fj7gbHyMlUJGaPms07fxWaGgb3b1dRkePxJeFzTQTq
lDV3TkynkSZNmjRp0qRJkyZNmjRp0qRJkyZNmvR/maNKVpjPbI2AN/+uckgG
Df5nw3wmCW9B88g5hnIjFXObI1P4Q2GI66Vxr0RTUVxbppJNi0NWc+t619ft
f5cnYMoG2XD+89YbMe9JzIlA+mKFrDpeO3ilIu+xqZcQNG7DmPzvNkxbk2L8
5cgZ1NcgxyWnA5bvHOnlthdwQeLPs3A+FQk2pr+Pv05AzaoNZdOkaLikcX2B
yfBFaEgUXQvcSIfMsNPP/ozb6CmjFwXuoOHLxuWHEy9EQDTxj0lXERWzCi/+
CPe8g7BLViNvizrxKyZYty/yNjYv1fA5eaMDZo3VG2b0JIBGOfpsm1YH3sZv
iHNTS4c05erWeTadmMz7KtvYFIGlGfoWMcNt8HN3UJDJ84LKrAR6BNog0eS8
xW3LYcLP6LNiSU4bKFJ3+pYaX0L9Ob9n8TdbYVRVYjEYdAPJXeOLaJnNkDBj
1OcoyxKml7mpzaxnkFgQ6jDeI4jw+C1TPuL9DGbTrEsOm98gRrXbiu3smkBx
rxFEFj4kClKNSxgH2+CWMvf9/J0FRLz3tfjw/g7kJ1RMUKp9TDRfaVc8a02F
3ZwVbmnDj4nd6jI+q65QkfKB1TRKySSU3J8IQvyokP++eNW8danErodnfRRu
UkGbsMeavTObqInvc+ecpILiSyS3az0iTrQ8PJ7ypRMS57xcNng/IH6rTk+z
ru3E8O9tB5X70wiDuhJdj+00LCiIVrL3TCO23Z0wxLSioWdB+Z3apDRi8JSa
YWIlFQtC7xSuckwlZNU/VNTsFV9veLikbdpjImvD/PZ0t07Q7nR/anzxgOip
XPct5U4Hhg+trbrS9JjQPxlveOR4B0651qyW0csjjr1x/VpvKj4/u29q1KZC
wiJzj3x9ZAe+GUy1n3y3lBinsuDimohO8H42RnLVi4irl74/Wibo+OfnJ8Q/
xyNp0v8v7caJm3RVq5Tw36940J3bjm/h81mbdpURlRmB2yRp7ZAOGKcfvKWK
0Fy6I3KhdgcWaJ1VHHpcRbhGxRgQ3A7I86e23+OUE+u+G64dPCCe7/vitDyY
pYRZ68KiE/Hi8R8k+3yJVyHR1uJ25sP6dlA6r1G/bC0k7CRNhid+bwXNnPPT
NzCXWGDzzPnn+xb0jFdNSW5JIZaPHHlMc2oFZZqHcurhG8R5Yt8On6JWyM9W
HaEsTiHq8k1U/7rdhkOL5D52r44iil960l2iOyDhFMu9Wu2A+KLU1CZbKhaP
cyka0LDC+M9JoTKHaQjWmRc0660vQR9O4lbeoiN46sTqJKULhK+wrMv4ttj5
xcZbh84RV5snuq10F7vzZbCdVyBxWsObrfGdDsr8x/zyskjCWGS0/c9c8fGZ
PdttdiUQuaYykxJ5NFCcS7rmjl0mFgcWlcczxPWd1egbMjtFNF/fr1e/iAaJ
PK91getc4cMas1vEFq9fVzTdD745Toz3uffruXj9kpBbqpmueZO4lx+kEzyN
jh7+xkSHw7FEpOJ2/4lNdJjJb3GfbRhKvA90jBv0Y8CM//Zlr8l94tjRL/fk
ApgIvk2f5/z0LtFls+noVnUmFnjZH6cuiSNyVxGO1RkMUP447WrvjSGEzhdV
DEwYCBYsWbdF7z7RoSv8/XOz+Hr9Oa7hbjeJzunhXT9VWUjJd8kJfR1JOPWZ
0z1+MCGRempglc1V4uDqgqWGq8Ue9XaKGvQhtORYL/x1xdZ8taxk7zEiJWjn
L92V4vLX9EZfC/Qi8ia8kvHdxIBEY+So+3Mvwn8G7Y3ZfTokJnd9PXrtHpF5
07LVVYOOBXEGuQ3K94gtJ3z7Yi+I+/t9X1in93WiqaiwpnSQBjOn1uP3dROJ
km9KmkFq4vNdD0pM3pJErNurNW3WdQYOPZZ6vHN9JDH5pplO5F5xf1Y/XZTl
HkKkXJAbNtoubt81lbpk9ZXEnjS1YttGBlKy54gWB8Rg668Di0+ZMrA/e0bT
/JPhSPLz1ilexsS3sW/SLc4J+Da3cMHediaqOl5e7JgmtmqAE3M6Ex7+H9um
IAWeTRODGs/S4eu/aKiNnwqr5fSVEbJ0BExKe6k8Lx1mSn/ZO2b/6+Mv0v9v
fSlo9a4nhRE4dnK0OTKVhjVhChev86IxPfm+7+JHdNyVc8v7GXIb4cEaLyxl
GAggekYL0q/BRq3zplI3HaUVx4z2fPTC+NKHi0VV4vlyouf3pTk+ROhYGX+8
hNgpSZgzegybaaUyqY102PwQpXEmxCOzcz/36Gs6mp7XXxiemoBXP8zul/gw
8CirKS82Iwkh44z9hMuZ6OeazLKbkgbpVLmyPf+wbd/vC0OZWLnwtGh0HQsT
VnMfqU1OwOD07uWq+SxIKRFyF26Eo9jdVv+TAxsSLY+zNzrYEHZFrS67xOtD
8FiWaofKXWK6Xlm2w3IWDukka6YVRRC+wQYi/hcmTk0aN7P5agrRn/I+6Ucz
Cz2cjuamIxlE5TE/uvtatvi4b0V5TAoxZ4ATMm4nB4dCZg612j0kmKvSbyWV
sGGmvqlsxDKTeHtfKnRFEBvBT5iVbIksouPEqk/DcSwE0wx2R/zKJDwJlYJG
PRYot82XcWMziRd7P47p/xTXZ9far2oUR2xJl3a5cocN2pHNMdJaGcR8V4ng
V03i6xs6Bes+ZBLT68yCDNls3Nm4JDha9SER0PvEUNGRI17fTg14JGUTG9Uk
ZVOtuKRJkyZNmjRp0qRJk/4XeniO5oKcqGziHWtm8R1rLu6cmen8+utjwilg
gP+qioPg+3kvjedmE0PPRlWr69jIN3WMYhllEL2LZaj7RsX5hHntGH9CKnGm
VWZM4wYHZps/0nybrxEf+1baD03iIvjcikzhskB8MrxzRPcDG5fqBhYuPxGH
9VOmfZUfx8Xoo7gr4Vb3oDhTZobPVg40bUsDjh2KQuTwmQXnLojLm3GzzO93
MKFt4raNMyTOJ/oeRZgOnCM0tu0wPjwoPv46P9P5WRzhlNVT+kBcfrDOp16D
zZFEgPrVa+vj2KBMaz1QGXsZ3S25Q6PObPit2J6zQfUWFDNOzMkLYeFbUsRI
1IIELD2u9DLCioWzPFkZ2+/x2LqGd1b9BwsfNiwWtM1MQvLya3W3P7HwPrv1
kYCXgpUlO5p+zGZjzIKh+0cqDf1Sql61i9jQNJx9aCz0Pr6HH9IeZbHgETgn
0P/SA+y9QrGV8GNjTXn4F1FuOvbLpCu3v2Lj1pZl+wx/pWC2b1N6pBQb1ox9
CxNkM7BTJal9cTILobuXXbxbkQi5sFyHfGM2xk84+my8QTqO9xhFXvfk4HJz
5e3WgmRsb8t0PL6Ai6qnnpKPf6eh7+FkKesYNizub2c//R6LjwVuPn0r2RBm
vAnvbE2Ci72XkWsiG9kRBed/ZiYgzsznLG0FB58/eRytmZ6JdM/6PPuvLEif
3rNLZXE6ypy2TtP7xUK288a4tdceQ+b5/Fomk4VtzpIKdynZ6Ij6oz4ll4Wg
Oe/cKqelg9C70OgoPu6TaGfzK+wOikvZkfv4TExaMV3G8EMkhnaMi3nZIr4/
nPwWSmoaXvz5YzcrioXFgpZAM2oy6K+N6HNnshB7zj3yr8dJqLE6pitUZ0K1
qv+tWlwcDtrKaP/lxcSL8/ZT1d7GYe6MhgKltSxwkpmVn8xjcSTCZrw3XZx/
D4WkDjJvw6TzoWWkOB8/KNEt6tlxAwPFIoftkznI/RW7iVoVhEfCoZ3NszjQ
8hrHtgoJh8OzdSeiatmYve3876T2mzimolEY8Yf19/8rPE4fCahTYJMmTZo0
adL/I2yzTHN2X3EE6AFbW81nsCETGasgdywWLY3ec32PsOBV+3jFkcXx+Pgo
q5Qu3u/rtkxkdOek4Ghg6g2ROL4oeKXi4Pc8Ha2zGXs4sSwYjD3cP3QgDZrT
LyR/G2NiopS37fueVPQ3WvjsrmTCwCErfrZWCo4NO1sfiWHCve8L21E3AREa
lOpbDCZC5sb5vpuXCsn8pPLzXxgwCrG01jjyAJE1yuOM3BhQUyrTOshKRo/9
NKrXPibkDa+OvTl2C2d6t+lxFjLQc7C931UrAU43ntz09qSjVzLWOXY0BnqM
O/0/vOhoUJDbu+V2DGZsef6TuoUOa++xP+8a4/E27Nn43Eo61sz5WGznkQT3
o1Mf9FUxkP14ck6fUiIaLjQOD0aK21uoMcVmNB7PvpYHNGsyUTEgVchcmIgT
N0IVmUIWWv1PtZi/Tcbo5rt7pkhxMHzgqly0dQbe+s87Gf2EjdbgZPWI4ExE
OA8V2VeyYON97uJbhSd4cVfT/x/xn8QeZCzTLoRU/9r05JPieOZMageTWoAr
uoOBwQIGVur5e6/vKIBbvkakxBIGzj3NHjGLLoCya2D5dVcGXvG+f2JqFGCp
DQKETgz0zS8Yi6IV4uggcXO8NBPvN2Sz46Y+Rf0vqmuPIwOjRbLl1LJqKJ4f
jnd6xERN81pov6vCWJvh+msVLJglTN5FDFdi4fjjN4p8WEiYuilplSWBMKkD
j2+lsPAnaKK6WUANVC9sjHxxl4XySecWffpShf78jF4pCgthEvan/UsJbLb9
a3apOD4sqj+8ftFsCsLvuBS1iMdPXkiOgq4s8fd4JP2fs9fUtuNJkwi8iTtR
XyN2penR2QfHarD/s/tcsyTxfHbW6AqsosC47GXxU/H8fjajyFnTrRaVq94d
9L3BQkGS4QKLiRRMeTX9YuATcbxeF3685FAtWFnrx+os2Hg18XI/Y2YdXMcF
PJuYxgHlwU3XfRb1uN6ETZ+OcDG0eeqa1dsbIH17aTV/Aw8TDt/W2Lq6ARVs
0/6uVB6mskudpd7W4qikr9LwHx4q5xmkeFnVYnGjwp9bzXz8fPtRkHuqFhGn
j/1cLSUA7Z7plajFFBwxH97En8KDsdnB8XFcCm6ccOn6upKHkdbVvqKvtWCo
h41DIRfFNlES3V4UlFzaXSs7iYeZ9ctj+0YpKMy8HZjP54Ebdn7jlOo6vFxm
S1d35aPn+9TdLn510FOrDHR04yPI7WeIcWU9jn79zB5LF6Bz9mnHMy21mF2/
+bdzghBfds2YOKJcg+mZB+51XBLCUaaQNsWEgnn8Gi+pk8K/n8fQeRg6VZAm
TZo0adKkSZMm/d/Lx7fK26+bTMDH31bJu1IIvGvbVGNYieD9x+LCfYUoVVHa
cc64HCm/DeKXqApRHXpff3ZKBaqJ3AiRpwBEaE91rnENoil6WP9HgFOBTFnt
S5WYaLK0fFoZH3sON8vXdFSjxqS2/PVTLlY/PuUa+awCMadVru0s4SL6vTLd
JrwUO17Mc6CO58EorNo7tqMQlRsDU63seHALPz2wtTUHJpmDWs55PKwZv/qv
hxal6DrwwGHDIQEGrxo5fpxUhhGtt3FvuoR/v4/pn/0j/e/l3CiH6Es6pRCk
5ozNfirEpatDr3auq4GO1+iztTeEWKG8TeeFIQULpuR+sFcWodx8jLL/BAVb
OvIjpL8Lkb7K5mL01HqM452M0DMSgbHy9fu92nVQ1eywOtQnwuZ1qXPGUuvg
qarl3XqxG6c6TeRq5BsxJExiheV3Q8vwq5Iktwn0q4OUbMduPGioOKHzqwWf
kqjrSqhdYE5/f3bb4zb0m6xV0b7fhf6pIlbzkw6s+8Z6uj1LhKxrYZTnp9vQ
JFN91uqiEDs4U1qoIe14cn1anM14IWxkel8Yb+lAYXnNkiRxflrosdzXJKgd
x28G6e+TEQBmN4pd3rfhh17LPmsfAVR45tkzDrVjmqvpnp5MPmzP19/NienA
db6Of4EfD31Zy/uwvQOVfvaM7tX8v78XpkJNSQ0KJU2aNGnSpEmTJk2aNGnS
pEmTJv3v5hl2e0oi2e2INNeufB3MB72NW3zJthOnysYUeH58BC1c5KbyoRO2
11dKLKTy8aF9zMptIw3HE4/ojlwWYN2AgoHiZxq2Hi+4dvaJAArqz1u/3WAg
INlQ4XCOANU3TW8+s2PiveeNsN5tfIwM6rocGGXgfFd9XMMIDz17zm9pu81C
Tz53jmIuD4n2h4S6T1l4kKldSxVxsPLLmKalIgvmcokK2nkcrA1WPeNbwIJL
XMXyr4s4mNnS3mHpyYSBy425mTEcpG0vWS9xlglBnq9j4DkO6vU9q+ZXspAb
ZblYKYyDDsXNwRRXFrIf+P4Vn8/Bj+w7yi/LWbCNly4UXedCTj81p/0RGw1B
aotOl3ChfiJ9a81+Nh6ePBX2wJQH2tkY/+IAFtzie75UbeEhwbyCvYVgQXL0
4nu3PB4mmaScrW9iIcb3lZZKNA9yv2aWZPFZ2DMh6bkkhwcfWuQbcw82Dit9
9ttL42HyJRPz1SZsfBAcmU3dxcMsns7wzxgWruv4pjlW8RAUWXqrvpqJ7xsc
vsvZC/7xO0UzjMKZ2CxvxbUf4sPdcfGqpocMxDkW3jfRFmBq4I5nB1cw0b0w
Yb7lZj72iqojP0UyEbLu186f03noLiYWHx1gwmvtdSVdPx4+6qpc7Pdi4sqH
4g09d7koPzJb8Y8cE+POP4047MrDss9zZNcbMXHhzoH9OqU87LS3fxIuyUTo
ksPHLS/zEJhz4nCYKhM/b835Ei+ur7K5NP3SHibeZKVtXmLHwy5H291J45i4
KfFpR4s1D8UWW9qjghg4c8G5/DaTB4fbImL6KyYa5j4qvjrMRde2dfqn9VhQ
e9h+3ojOhfmsT3NX7GZDaYOr9m5NLs71tU60Wc2GZTGtvHw2D+CW768oZ2Pj
nMtfomu42MDPn7jJmI1oS+nMJHsepLf/HDpTzoTk49Vd7RZcCM6+qV9ylAHa
nPf37hZwYSsZf6VwIwOhhlvvXxZyYM6MlXwVSIca51P0QCAHI7Jq2jGedCx7
wWHWpnBwpeCLtbQ6HaG7oj69kefi1u/3TYXL6XD0Di/KsOTCucfqz7FpdFwI
Xk6wNHiYPWtg/t0EGtYHJnGWmPCxYuy89pHLNAhntFte7ePC2pJd+0qBBveQ
GxmbKniYIPtK6oc1DXGnPSZcSuRhyGv1NxdJGnxPH1g5L4n793sY/jl/SZMm
TZr0/0wXUCfsm51Gw5jPKgP1ED5qBQcW6AfQIH27eukacbzxvslEidJJw5W/
Clt7xfuzvu5sF7YvDZldIzunv+DCeyPVx51GA3dNjZ57FRfbEm3eHs6mwVr/
2/yiMg5UdbTnPblKQ0jMqae3v7IhZ6fes/02DcV9a53uruAg9d2q72aqdDxQ
/jWqs4eLyd6/Zi1bTMfvtRstbov326alawNOzqRj5wbZe+7OXJyyqEtdKy7/
/dtJDTNixfGGzsO3TD4NLx/buxov5II2lDv1tDEVU6auXFVSwIHHK2N/nydU
/D51YMR6gI2eDesHH/WJ408/32sBFA4eBFzZ2qdLhUSaifdTFy62L5lsOjOp
E+F9XzBuFQ9fDTtMtaOp6Nl3t7Enh4vG19H02aOdUHYJ3RvzFxdFqy51TBTv
n7FLtfrOZHMRkHQx3NyWhskrqkM2b+bic3ubcbYSFQ/nrJ9/sIIL5DttWjGX
CvVgDWqrAQfNCZNXSr/rhNwu78YPjzhQl8lbXMvtwB09kcbVZ+L22mq6Pxps
h1HeLrVDb9iY62/7cZNaJ3pjT+vtnS6OX8Zv3tFgT0P4ItEf1VVcvNg+N1hp
GRXOtqL6aCceGpGO9hIqPFRU+Tasf/14I02aNGnSpEmTJk2aNGnSpEmTJk2a
NGnSpEmTJk2aNGnSpEmTJk36v9KnZPVVXTJoaLZwMIoP4UPBsP0EJZGG1k0f
vMY1c3Fx15SVm6l0MPpi96uqccE7W1Lv9YyOZ25eFjJruDhRZqW5Z4CO1C/7
Ds2fy0XyvZxIm580dOyPLxtawoXtrWRr8y4a6HVmti+/cv6u/5/v3ydNmjRp
0qRJkyZNmjRp0qRJ/28sedkyTpyv13k4bJK15qLe0GJO0loauINzrbUteEhv
+3SMqk/HStai7s3HeThqenmBdDcNFNetthMleAj3ej9c60XDag/5u/cucDHp
7o4wxgw67vwMNGqq5iCr56mjvBVNnNef/HhoARc3LfffS5CiIVjLd9HKwzy8
LLVX1jpNg0ePSPHNNR6Sl+tSZWs74V4f6rcllYcA+9d6IjMaHAuPlBdo8dG3
4wpPZQ4Nbv5qifu9BPg6HDh+1yk6rtVkvWt6x8f54JkbTwXQ8erpe5VryQIM
Hv6UkiluT/advhO5jXx0W2eapx6mY4tsmL4Mj4/FguLSx+cYEMq5V82TESDX
6I/lwwlMjM4YzZGfIMR8/Y+HPCsYeF6XFGX/RIAGj6HFLV/pSOa0T5MMEUFB
Q7k56gAdh9+FnYyjiDDr+XNq+SMqbhrLdwVxhCikPnEe/UDFClfDz/GSXWAr
DjxqFff/4kwD6fEZIkQNOw71OdBAf9vAvfVGiJ1rVbUEvTSoWk/6JfdJhMQP
QWWHVOjoP5l9ImN9F7xtL78b9Kdi41E7jdvmXfjm1rps2J+GTRciNiZEd/39
fBt0ulvWfSJNmjRp0qRJkyb9P90fjuvvGUijIWqs2u35SBf2Dhz0/+xKQ96j
c19lfojgqRSkGq1Ng7HiYGKeuQgC+tbxZxbRMGOyeeQsayHcdk8pnt1ABXdR
ICUrSoDpk5+f9mylIvIbS+f5Bz52RRZmbVtAR7kg2TK1mIc5B6ZdONBCg9qt
M9mN3TwompnXeNpT4al90fKjAh8RWy7fnxJGw5djMVZKMwVIKsyb4J7eCdml
1VsjmvmwZr402jiOigDvdpNHY3x8uHJaslEc71fo/yCcUvnwTvOMaCyjARPD
bja/5kEQELXdQZmKl3XmTOY6HhZ1FoeVPKDi451D13kCLhjPlzTMHOmEk/xJ
/QtOXBh2HkgY6KZiTWrea8dKDp5GTgi0V6dC5uFn6qE6LmS/Gqk2PKZBM2v4
p0k8B8FGJjIHJeiIsVS99N6HA0r/9uqJ2+l4mJeC3+c5uLppXpPtIB1DNWwF
agEHBrbHnjmNYyB96Zq3sZvYGGzYfCWSoKO9XXph7yUWRr9nj2YL6Zhpkqj1
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

        "]], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAK7oh+UIGmD+H2/6pXC3lP8R0MH9H
/JY/Aik/4roM5T/C+R31h9WjP5fshfsZ++Q/Qt+DrbFkoT8GCYlQgQ3lP1pa
pb8ZoKE/R9ibDpXH5D96FAJqw66AP+lOC8sIs+Q/hm6z4DNNZz/+3guLgMfk
P8CHZc+RL4m/az60eUDn5D+gObnw+iKTvy8iB+L2EeQ/sFvnK1SUpL9o3YlP
7C/kP9Absu1bGaa/se6MyeH24z/AAfNIKsuZvypiMDyIL+Q/UDcvPRQPob8Z
OTnufgTkPwBsh+fdBp+/OmaUPjLS4z+AHO52dNiKv49z974S/uI/cOX3XUOb
oL99onIwZXvjP7ANo0tjwKC/pCGK8RYG5D/gG3O4Efybv8m832y5E+Q/wJWe
Qh1LmL+tnEpYBd3jPwDYNopw9qS/FczyXYK74z+gkwDJgLGfv7R7S8xQr+M/
wAt0wKGHnL/uiiOEgl/jP8D0M2VuM6a/NxjLBb/q4z+gxTUh+uWlv0b14QBE
AuQ/QFfzTY13o7/SY7kB6o3kPyD17OffEZu/bbo10GGZ5D9Ax7BDfMyYvzeo
T1gDHeU/cKEMI0c7p7+rQP804bPkP6DMRIrF5Ke/up4urMOT5D+wzcbaxayj
v/ooM759deQ/QCkkbCeyob/QdCuc1hbkPwBLJny/k5C/fNFQtGCs5D/A7/hK
0pacvxYh5cyQrOQ/ACjQXQ1Yor+K3jChLM7kP0D/r4e0BZm/Pi2tqc3s5D8g
7dCJPpumv98KkaP8K+U/QIf9UDx1o7+hBoE7UtDkPyAHzS1TbKa/xHLZfILl
5D98rLMVZ8upv4fb/qlcLeU/PWFKZQ==
        "]], 
       LineBox[{{-0.03370284104263355, 
        0.6617873497224175}, {-0.03210561231810127, 
        0.6573964983306716}, {-0.030827201189852382`, 
        0.641956668462519}, {-0.006399750850971331, 
        0.6417052085782545}, {-0.004837700236804984, 0.6617873497224175}}], 
       LineBox[{{-0.010059614259082849`, 
        0.6617873497224175}, {-0.010770141477520534`, 
        0.6611273923239686}, {-0.024168505846508648`, 
        0.65035882651555}, {-0.04606501450165815, 0.6617873497224175}}]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.11199850297376246`, 0.33939989909719154`}, {
      0, 0.6617873497224175}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
9wv+6eMlTJgwYcKECf/H/T8A7kx9FA==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.414449691303961}, {0, 0.4720335007024467}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.003666666666666667], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.5849036252083293}, {-0.3238140280875735, 
      0.4062662616082472}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
/HM/DsyYMWPGjBkzZsyYMf/7/H8A3iTp9A==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-0.08665, 0.42487566022892775`}, {-0.22638063673589703`, 
     0.4128744121785201}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJzt3Xk4VW3fN3BCE2WWpGRIkUxFGr/KmNAgc5NKyVVRqSglkqSBylQSigqh
VIYk7G1ve+2197bZ5tJkSKUiRSHeff9x9bzvcxzvH+/7DNd1P/f663t8DvZa
5zrX2us8f8uylvo2v/XeY0RERCLlRUT+kfgxfoq7AgcnuUd/zp8aB9tPLQrZ
U9hgFjcpSY/EQ68x5F51OBuNKh86orhXERI0z+eOHgfuAxdP9m9Oxe4j+3Mb
b/PQF9H3nhuWjrj0yt1r3flIsposn3r8DmhTtJ0kbvEhru3/cd+NLMp/sZck
Lw62FPpUhVFp0KUswL/r6rUGPnQ/vyvV/3b/L28fZcqUKVOmTJkyZcqUKVP+
5/R7o18z44S+kZU39CwrC/NGtjUWbKyB4s5It4SYHHy5Q1ikFlWDE+5vuKPt
Di403NCaocaHyzr7JZVbb6GANfxFNpKHtEhnMa052fjkN79fXI+HK809d5Zy
ctCbF37+dT4XZzNmxZz2z8KeDa2L20S4OKFge2R0fTpaBJNDHBo4v9tDmTJl
ypQpU6ZM+e/lmW+rP5U0cTA1qsvX7E4WWHssyYblJF70HFrQQWTD6CCbJnGR
g4j2tfNmvH0Eg2szRXzaSNTlzkhz2vgYnbayC0a/k+jdId6s/6gQrF7mlaBg
Eq+ejY1eYlmMRcbdAy3dXOxqKOWsnl8EhoSvmqERF5ccFmybUFaMdxqvpZ8H
kLixPaHX6spjuBalS1at4aD/8kwV8bOPf7fXjW1c+UC/gDJlypQpU6ZM+b/d
TqX2TUVC71UvazCa89e351/d85MSxeybOTiresVgvN5f3x7K/6dF1VbxVOs4
OKLCa63RKUDqZFOLHi0uise8W7uzKxf3fVMFzQc4CPtMhK+tSoNd3AInmbs8
yPy0/2Pmtizoi9vbxmRyMVah/0udbxb8rFf/oB3nIkCr0c1VLR8qQ7efeF/n
4N59tztlXx5g7FWSmLuUg6x7cuNkrj3Aj379jJo/SCiO+ZobmZj/l/cH5f83
H9oRbjFFwMHb5MEt3vMKcExOOlkQyYX0XdeD/QWPkU8TXWs3pxrSKkcKpE4X
4I3ZwLKP3TysKbYt2IVCWC34ITLdnQ+/JXsLV20pQur6MctX8PkoXORwPvpr
MS7Ib/rcmMGHcfzL6tZtRYj+tia0Z3YNVDJ2Zw2Ul6Dr6sYLEmv5ENya2bxw
Uxl8J6kojnOths/w5FsGZaX41ujFjPfkYkLl0TSbeRUQ3XwnJuArAdtKh+xj
oWVgsF+JTzIi4V34MF1JioaQCc1yC+cT6Ji7lFzDK0eN8uaom+dZWKyQdNMl
thSWE8y09yizsYIbr056l2FrSOLE5A9snNIef2aqXjmYP6LfhVmQ6FS9n8mb
WY6U1z4zbRRJaC9Z88z9SgVmY3b5nBYCB5f09xGb6GgT87uZcIuNqdKiJtEG
THgd3OoXJ/y+Rc7+1jQpiolJxQ/yXDZyMW5/oHveAwJDmiWCtZd4YDRG9Zdp
sXEvf8BFu5EDr8cpb3kb2ahjt2dc21WN/ieHy88Jl8tb2bYjJ6IaAVE/b37c
SWJI7nWSwL4aER8nyp+4RSJk4wufKPlqMDOI4PU0Eom9ugEOHtVw+RISZ7iZ
gGJocdnBBB4O9FqYxNixEJ8XfmJlBAd7Fse3Ouczfh8Pp1RjDQX9dMqUKVOm
TJkyZcr/QYuNNdmW1cRBiOT84Qvf6OCtthUsjeRgtmjq54avtL+8fZQp/5Ve
aLR74tlmDvLkC1tXCb2xoc98wIIPvr1B4dmZDOzOEFH6OouLLTtolg4kA/sT
+7t0QGKl3/Xll9UYcFxpcjBmF4FThhL3+o4zsKlozVrFTAL7t/lbfvKqRIDe
ruYDHmxcWES+P/+eju7jih7LFpPgnXb4xYqmwwzWYZauJLiJlfuvgg7rw64X
PjSQkD08y1LNl45jGm9233bi4LDbhi2/XOhIdv3p10PjootWGB9rXoE09alJ
58JJDBOv76uKVf7l/UmZMmXKlClTpkyZMmXKlP85PY359Lh8Iwcmc4LdxwzS
oWl4pTTDjYeyz1rFeU/pyC/plvOK5EFaJ1tmXDoDE/ffmKCbXg1H86IN+dJV
8HljZSdzshoa7ivtyvdVYbSpYvicNxcp1W1iQclMfF+8rU65m4vGcKkxmXMZ
cHbRXrJMrhrmS84N2Qvr7c9L3xyVD+QhxXY8Q25XJY6MPeLfHMrFMXt2y7TM
Sky2mx29oZhESl9YfcotOmpM78nemlSNmITZtl/lGLjTHp16YiIfgY8Slfa9
oGPHM59P0WZ8iDh02vttoWNZ3XHjtw+qsa3+a2KxIwOzfUy91/jwcVfkm/n6
VQzM2lBlfLaXA8fzS8N8ZzOhtt9ZcGMsDxvYD3rldrKgqPYhX/kTibDXGSsu
fqsCpvFcDzFJuK7f9vZpZxUcabcCY0+wsdbIwWoMvQpvbi7b7JBOoqHi8fsr
VVWQaRq+nVtE4nDDmu9btVg4yFguo+zCwWBnauo4fTa0ZURtVs3jQnPDshI7
4XL+3D/6gTWuMcL1U6ZMmTLl/5n2VHCeHyp0qy5NfvV2FhZm3HHob+aANJ40
QbWACYMoho5SP4nKYrXWiFYGiIenZra/Z0G0ZNw4biUd5xJk5h1tZuHG12ld
RUsrkXlbf4PziSp4HYv1CZtQiZgHHbb8rCocWqyUKe9cBZ1iIymVPiamRK/8
csu1ClsvOU6XsKjEkhS5BKKBidLRJ55BQ1UIWbejy7mOiSwH9r6ItWwYNHe+
n7aawMa1UTfXK5MozwsvWF/GxqN9T64FH2KjbIpgx/lNBLrjYg3IUxzMuf76
7sc5BDqH+jycOzgIsEiJOytCInvBUbvlW0hs/eVQw37Ghpxj0VHPvWxkPcoM
zFEhkPe2Mvknj0B1tQvpuYdAWurbRCsQcJySpnwmpAoapaXFsnvY2HvcsfRG
CxPn6lbOMNIQfl7bw5Qjykbytfj3IqEsqF3VVUqqJvBukzP9pSGB4sToJXqe
JB7JPNLc1cKCjURmIP8KAc6PCd6+wvW63ou6qb5IuJ4s8HsIBuK+yjC9B8i/
zTyNMmXKlClTpkyZ8l9jjsYfx/u/0VGY/uvZaBMH5tGJR/7oY+CTowGhlsCD
7hypsvxpDGh0XDg71oGLx3at5RfsmTjvqjWhN1s4ry8aOeUvWYXa4qlHDcXY
MOPvlJR5XYkqE4FNjAULy7VP+vV2MzASnr10/uEq6Ppddd83gYFXh/aIy18k
IHd6o62fThXumlTKKPBYeLnqiPntsQRudoYXqy5lY55rdCW5n8CO/bvvb5zP
Qdxosf22rWxMV3TL9n/IRd2UYis7cR6cgnqOnP7GAZ350SY1kANu/a4+8iYX
3G2v1AIUuVhYvDTNIpuHWRZu9LfZXKSYrhJohXJxaKN1zp7VXAzIu7MHo4V1
gaf0pjczCSxZLl8TtYEN00Wjzu5cAocPkea3v5BokSh++eYgG4cNOu98GWTD
IfsG8UA4T7984Uxok4DA7uPaaSP5Vfhlscksq5fAG/nBvSlbmRjfHxP0WMCG
YoAMcaeDBUm+2oIyHhtXxJxrH6qwUNV4W2XHSzZqRIwLN5xhQ3pa8q53Jzi4
sdC0KECLhdfKucTSDRwksdJOGPYycbxzX8vqdSRcDYy2315biZNsYtIYCxJ9
T/1+xC9louTEXDHfZgLemz4oR5RWwTXhs8yrMhLTxm0dHz6BwGYiwzlZlIOJ
UwqWtboS8HUq79XpI7EtVe9R1XMWhqd5L9rN44GjJrvsZBELXiKxbyXWcVAq
MD/0+QUDNOL4oj2FJCL72NFDTAZKIt+9ZJ0gcG/tcAGnjYGDp8Kut6UQ6D/g
kvVSWK/tMHXVlJ1Pwq5gi47+TCZejbvjefw0CZd39ceOLGDgulz3aHw9G4WT
PnaZ5NDgEnzJMN2Mg4KDV468UKsEy35CwIlyNp6dl3IznEDDa10FJjORxFTD
SVoDW2moDfE4qiVL/D6+/6xH/7s9eSTl1urvdFy86hSYJax/p2dWTt31i4b4
sxNadx0S1svpXhO7NtIwuSheV1WWhdAU2pcgJxp4lZct9jcwcHxtVmfrQRrc
Rvbo/NRnQDRHfkH9GhquBWbuEumioXsDcc6phg73EoNZ7xtp+GoeUWOZQIf5
xbIN5nXlOCfw/XQ7l471FoLPW5Nov9tHJZVUUkkllVRSSSWVVP4T5qakk8qD
dISdS1QfO/A3aA+VVFJJJZVUUvlfnpbvlH1MhSmn0WwpKZwHfEpSjxmtrATd
K3Hty5l0hJY69swXoWHsSR0PXnElJoqFyiVeYWCvwarAyJ90jPl8qTbYuAql
0YNiFsV0uJWETFkjxQTn6tDBBH06fsRVDc21ZsA4xlvncDgDTt+7oi2Fy1+z
ZOclr8uVeDg2c142nQEt45rNUZ0M/PjyjVDdy0CKQrviXXolgvOvHmTHMNBw
yPBNyXkmZJpkp/7qqYRRy3yDOJ0qMFP3pqk/o8F++2YN7ztMxM1Kv2jTR0Py
pcGvvXuZSFi2J6zzOw2XQucrbb/JxH6PB1OinGgoPHlsIlOG8Zf3P5VUUvmv
k7GSA7XJ3+iwEUzvWi48f5qUumvOqa2AivdenfAZVeDMimU3zqNhME87Y7cs
E8aDlhrfTtCRtmdGlHUbE02xt7pevGUiKCe0VWpRFTzlTQ30HVgo1b5y5r4h
AyHykNU7xcCyI6uu782sBPd+SZ7qAjb0x6wru1tLx5GoqWM8dxMYTNqWtSCz
Alvr781OyWPjeuToj0eqdHQ23z6BU2yonnXaYHysAgFuu5blapJYb2sdnGZV
gQaz/Zru2SzcCdEtvk6WY9bSzOHLhiQy2do944+VoYmfZ/QgmcRG6UNl3f1P
YTdjRp2IHgcHqh99v7+uHEoynHE1LBLt7mWvuGk0TLA0cq4b4uCZ714NLR06
NPz8HiQ4cmF5KqovnVeJtNcWnx93cFBn1ds8oMCA5FHZH7sf8/C6qtQxJL8S
CnO7wnewuJh99fjz4VgaAuNrr/jqsWG/WCe44AANjL1bTV44EniUa71i/Rw6
1kTRD05pYuNdLo/0aKOj0ZE49LiVjQHlqfOaG4Xj1iHB15rlJLbm+BqcGa6C
1qYtN7/UEOjxZJ2R0OQg4tG85KxRNgo9b5d3W3B//92bSiqppJJKKv/O2XaB
yZQWcGAh0jFSU88BZ6fSsseKJJSH7YeVlnFwVOFwx4ZeFoyDf2gcY7Gx/XDg
ge90AupvDh9wVCIx/fkMuWnJLDyLHLX06iPB+cSYoGlL4IbOFNPjvQTEnBYc
O72VgLhZ36wmLgv3DO2dpO0J8CrUbarDCWyNUNsiJsnGW4Pvvqc2cCC9xOS9
YTAbW6ePrnbTJaHCawvmfWHjE/f6oMp3Ntojlua79pAYCHl2PsiTjYw1imNL
RDlQb7ekzfnHc4JmJfySNuFgns+kA1E3ODie8jHuYyoJvY0cO4MhHh56HAha
uojEyMmd4/PnV0MlKSJ2rDMbhhauGYrKfFQnzVRc18xCCb3/0+hxLno23fed
tpaNoAvSeR+keBgwsL780YEDJ5EbX4Pm8vBtk77dnkwu1seHdqwTjv8v9toR
wae5kBw7cexwNxdmogG+Lzw4mLB+qkZ6LA/lJcN7DtuwcXOx5qVNphyEPc/N
0flKwN1Y2XSXAgemx5p3qYmxMUu/JN+6kIO0wW9bTuxnY6xn0bixBRwsXrqz
wO0DCZNxA7/KpnPQSBj8ZP3igShoiLgaJezHo45flkzlI716r9wp4X65xIw5
Z7WCi4cQfLERJ5AYt+Zn6yECPq87Yz4vJsFMTsfzqSQC3qUOvB0hUWq1uEyF
LvS+jic/J3GRzIl7SZ9A4ouij63UNg5cO7m3jwazUPjyaJxfIAk/22sXItZV
QTR+ONehlUT4DUUydyoD8832WTo4cZBU+EGdFcqAWX7KnEEbDvJmfujcF8eE
xVGLtAJZEpPa7jvpeTPhtnrg3iwvNvat2pb9UpMJM5sm5Wx1EkozL85rF85r
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
lVnC3w+R2vTmk0cVMk0Te2ZFN8FBTk6uNoeBb8/G/vzFaoRyiPjs69urcI1u
OuGGfCPGdKwTvfiLie7ixPEmhg249mJ79DVRBr4b/HH43Oc6jNvzYde+hZWI
+kS7tMG3Dn7Tz5s8SqGj3KRfaX1sPaTZzjnkBxp40q0rVL7XYyjkQqiglw61
/fG7lqIRZ0lJOjurEv5JWxfoBTdAUJtgHhVOh+jOHWW6Zg3Yqb1jf3gUDd3t
nJAgl3pcbtksdt6ZjvkL85YOPanDrLcbnmWO0FASIuew53wtChd2iC/uKQNn
5qxb6pYCjG1x8tq5/ykmdm+yD1QQoDNrfHj3QDFq73v67FssQIyP4web5DLg
apFYbngtNJhX/pgzqRxHiz/1tlgLIDNhpLRDoRzmnioH4iXr8EUnoDDtIA2u
Tffyx12thd/hudd2y9HQbnq1wVeuFstHg6Rl/MoQVfZtUXpEDfJCc+T0Jpf9
vp+JMmXKlClTpkz537vmweVt7fJl6JIMm1gr9Op5W3Jlr5XCt1vjh+zBajww
sxMnDpXBfWnSmmmveXBZ99jz7rsKPCrU2L/yNhezVa+oTNasQMYDUZf6XhIr
HjdJ2FyngR3LEZt7nYv4zCGFFc9o8De++TzuJwfO5x9s875Nw8vGMeJbL//j
Pct7A+tFK6Ca/cU3MYaNe+p11z5FV2BPxnVTx1YSC700PhaurUBJb5GVVg0H
VuohHzTY5cg6U53cGMUBx6TnpJdeOfrKIzta1DkIEhxR/dJZDutuJ+PqYRJ3
Z4+unRxZgaxW16aXbmzoN8r8DFSlYYe1YZH8XDYSNPL2LFhVgY4UR2lFfzYs
a3cozjYvx9TUqpwUZy7K23t8xjmUY4nr0N0fiTycszKwnnSYhmvWs53kXKsh
bjTayissw8aVn/J3ivLRejp4QwizHLL6LtzeK9Wwmb7912PLCgSpTpQYGsvH
kqG+8T/4T6H06USAvhUfJpZKfj6K5bhjsinL0oeP7Y8rZ6zmVeBSZcbxq1Y1
2LO8Z3SNOw3rbh/0X+DGR9nNT7vGaVcgKWabhbcJH+ol7bZB8eV4Pj19W7kx
H7rOw0XH+8uh7+mlI01WY/yNGyfmDpfgi/t1WoIlHxyfHdHiEiUYP0ftnkkW
H4qOfFtFn6eIn3VXc3pKNVQKPL16W8sQ6bdhQu65amDdk69268rRVdzVmVXK
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
dzABcW3/j/tuZP2up/5u/l8/3oK4
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 0.340090517644586}, {0, 0.3995265120882542}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJzs3HlYTf+/P/wkJWOTioooQ2kkIemJShqlyRCpaFAUCpGoKEoSSiQJScZU
JGme52FPzSWK1J7WyhTKvc51X9/P776u+6/f/bt/5/zOOfsv1+Nae7/Xe72H
1/v12ntnobu/nYewkJDQRWkhoX/79/FU/TetioNIvXozaL7Qe3hmTZqc1TuA
YrdLMfcre+HrZzDpSfIAQm7aB/y51gdZqXVBgZ0DENctWW9yvReeZvvfXFk6
iCgnLes7rr14N2NNWJ/vAAY8+2uUSroh3PO7sLZyAE3Lu+v4LV0wCRzesXr5
AM5bH5zMtOqG7lHFtnHLAWw7+C2Dx+lByJSHKeYBA7iS9OjZvLFuDPENablp
A1i0dfrdSO8eGL9+vUf6yAD8NN/mcrV78GbE8r081b/0fTsurljag4RK3dsR
VgPQcF7cUTrejWc+8WPXPQZgOl/uYDbl9dLLH09/PYA2I49X53914Y3eZ501
kwYxi3054dPebqwhsvUCygaQF/F7NGlfD34Yd9esezMIfx2m/T6qP8995E8+
ODkI77XpA42R3bgT9/zwt7BBXDttvPFbbDeO5a2IeFIxiB8WScrao11YaJNe
btswiOUGU2M2rOrGtlizKU07BrF5i7pcgWM3hJ6GnZ/ycxDV8zUSfzV0w76x
sG9B5SCcF3G/amj24MtHp68eeoMwKxw4v9StGwV9lm+mnhrE4RX8O+JB3bDw
sn4ufm4Q6V+etsTP68HKwNQZWqcHccegtWwsoRuZbrm5g0WD8PlyctjqdxfY
s0+7XDn2CT7qZ3KlorvgN3Lh/H63z/gR1OVwT6ILOq9DfeL7P+NI0pgbW6oL
BYNh0m99h1DVM4dh/rsT4kUVNe5uQ+j/HNeV0N2Bu2sNl73aMgTtV5yGAH4b
Mg2cN1U8HkJenv6e4t42bEh1idvw4AvSbTQbjqxioUfDc3/Ozy9wvnLvU1Ua
E+s/fGpPJ75ALVT98isjJt4UbtKesm4YygoG+VY9DDz7uPle7pZh/NHZ1LTy
LgOisbNiuB3DONvwNV/1NAMnW7fHeWqMwC9g36kyKeb/8X613vJH/PIRNHZ/
DWuhrDfGXrJ4yggGdNZsMgYT+t9lqrbsHYHaod0LLlQxUXBmRErz8QhiXM0C
7S4x0VDwNFD13ghGJSe+xD1hgvvC41HP/RHwPh7dddCTCeKAXs0NZTa6xptX
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
LZuaGTg0MfPWKaqekLL9LU+rYCD1beJx7SoSa2hr5aYeZeCtSWDdg08kYh2k
ZrLL6Nj2fpmMH41E00fjphBpBgJPKZfvvkViZsvoYOFZBvxj8p6vO0ZiyVhU
zi8/6vrlex0PKF/IHQ1ML2bgfpaIwcNEEp5pJbkK25kYU0qUUnhNgtOq13Jh
ggGJsE+xQi9I9KvYd4yJMnAx1anShHp9ffRx4SNedFx8/+fN2cUk/jz1iIYn
HduPGAUtUySx0at2ec4FGpihNzXND1LtF9KD9ZcxYFa+Z1W/Iwkhq+c75v+m
oa9iWNdjB4nZI4y/98To2O2xf61rIAnannzTADkadOYPyVRWkyh314hUU6Dj
wQqh916VJIr2Z7usGaBhctGwzvn7JLy28Eun/aX6M/XSLddLJPzXOJAzMunw
nBgLcvQnseDb15h8Uer6qs0vNlD1o8zseZssXWnw819eH7GKRIrOGusLW2k4
5rzpqOQsEgYz1ietmdGKgz/yZgtRz7d0wG7MWr8Vk5z3LdJaRs1vlP/QwczW
f74v/9ffjwks8P+K72h99LQWJaHvX25fTdmm/vOuaf/2+dCnEF+v2hZc7HVS
WtpC4L56nrTMgVZkv5Dt/HOKwO+bgd8WzG7FIF+ScSKWQCWf4+TJacGSFUpC
ep0Eiq+e/iMx0QiGrfvDRg6B7PQ7X9Y/b0aZA+/gpdkkDA85qHTSm6CRcWB+
sT2JQ55M6aKDTfh6brOPIhUvtocfqeQG1ENdVNbgCnX95+t8usqtenwIld8Q
K0Xt5xeVrCG5Jtz6mSFutZTEr7sGD/WPNEIrXaMvfieJ4of27xqUG2C+0Gr0
rx4V30RO7VkcVo9pPWZj80RIpPfzUg/V1WMWLUdGW5ZEX0ilOFO0Ab4lpx5t
VSbhPuMLX024DsztBrwj3whYNf2JFw+oRbaI3BnuJwIK18DUbq1GpfCBK5l8
AseS7NV93WoQpHO0aYMpFW+lZB/236iGQvRue85tEj8SX+05YVyN+RYniw8+
JbHrvLCEVUMNFJnTnqY9JtH4Wva6qUotjr06NMO1kMS72UcRk1+HwnPDemaU
X8W2CsefrUWzrYLSgUYSj764bppeX41z/mv8p+WT0Jb+qzGQUI2Adr+Gkpsk
Dn9RkRbxrcJa/q9nelQ8Slr88cZ0mVr8siBZFx6SYNcp3RsfqgZLWNviIjXe
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
s4ox4wK9tdKMjXPyJane4sWIvJJRPcQdwU6nwrdT9hTgqXSKSk37CAwtmvac
fVmA385ehfbGVPsJo0sSfhVC3SXxze6pbDyfGxQp5lAMMzP+3yl1Ixi/nX9I
e1UJJM/tWDtfjo21wju+vzxYjIr6gIgZt0egc0dD0eVBEUS/S8TfuTYCs9d1
tICdJaiydH9a7zOCJBsDvXXjBXjfFmbdfnQEpq0t0fGaBWB913ndvnEEesMq
MRcuFaLyaFGl28gw1tG97ngVFWAgqWbL+8PDyC3d9M5yXgEunDMVi58xglSV
Lo0m80Jo9WyYsyN3GNHO/SdXRRVgSh1xL3vHCI4Wb4p72vwOSaIjy90fjWD/
pP2XWl7lIfBDff6q4RHc6L7IsfQowO35/oUWemyInjcNbtv1Du2s6G1tGtR8
eMZ7LOh/h5808Re3nrAxlZmdpaT7FvfuJflVeHBw08/ngGT1WxxPv695S4ED
duDWs/PvFyPZ/lfytVtsFGep+4mHlcIPYlMIar7WbHONlpStgNtVv9Zn39j4
Pmnn5F1lldCpcNb4bsaB5q2di3/yqmCgX/LwwAIOyreNS66qqkJ76cuFG6j2
sl59CjjHqfxnvv+13wQWWGCBBRZYYIH/vb3FbvmD75RVXnqVcX5S1y81n383
wMbI3oYD3mvLYR57NnWmHwd/boqkkzbl8NYbTnpG4yDO57FM3NEK2Jz9rmJK
5c//+j5KYIH/d3rnveaFVym/Lm4JCd9Xgw9Lti2e1s/BJ6l5tXEiNcjfbjHl
5l8OdH8PrmZ+rMFcbrBT6SYu/gidSb53rBofjx0YcJ7LhfTDtdZKGrX4Em4+
8m2MAy+fS5893tXi76yGA4bWXDT6L/0SVFaDbZoN795R9fCa0VghgqpPlznv
cTGP56JoWVB4U0E1vsSKXZST4OK02zTYmtYgpvpcwIUOqr8L9l5xXdYA2fXq
pTIZHNzJM3WU2F8LQ605qbtIDgItr6jHqlYj1LzfUZ2qd9W/ZGqFvq7FzDhZ
Cd8ELj4YPDRZ/r76n/r8X88vsMACCyzwfw2rMK8p3DzLhdzBuapu+2ug6naj
elo+F8QFpWdfw6pB7iqSD73ORXhM6mo34Srstr11ay24yF6v2CjpXImPjQ73
aAwOjDZeWtvbXY7WQwPCF39w0PDOwnLn73KIfHWgnX/BgcJvqxMHRkv/OU//
9Xnjv7crU3aqrqScJ/0gOk2sGKLDmzSYdzgIcDdt3WFcCtayjsA0NgeV2XLZ
N5eUgExf1HLeh4spBX3f8r+U4MDOpZHRmVz0ti5jc3/+x39eLrDAAv/XtaqG
c+1nylncyKEIQbwR+L+5jcriHrVSJt6fnZ3xtRyaIrEvXqZy0SEhN9Y5uQLm
MmIql6n62P5MZoCTfCVMNx7q7a2m6tuLpjQzkUrMUp9ReSuCiwGNY/e9Lasw
1PGxL7+Pi1URloPuJrWYuFfwaspbLvKSW/SCC6tQ/kcyQCmHC6M7VQXzqPpZ
5uupUE43F3avrpa+f1OPEwFFHJoKDwk2IY9vkTV4Gh58TtaAh47wG9muQTXY
fcc09sNLLqZrvWU376nB3d8pTRJiPPD8n0dMjahBq8gq+ePU/deqF06VzqnG
XDFjifReLmii+uTNsWqcnhzX52jHhWECY94vZjXiPqebcI9wMa9XtlHkQzVW
B0+snrWZi8msqZfXadbib/ehI0lUe4usU9x+5VThsJK5Z+dzLswH3OvsRmrg
IBPt8N6Dak+S8+jr0jo8g2v73yYOLsuX+LhL1WCpY9DJi9EcVMmg0HaYij/n
k87zr3CwdPncF+8VymG33yJrURwH/rOOB/s+KoXbSpGemc85kPHBeF5SKW5d
UqFHynOg3yIsb29Ygc5uen39MzZu76jKDVapxILqvpJ1JBsvE1/XdZdUY4Xx
l+Hz0zi4c+ToKstn1fjUyNw0tISDDTeRYppfBeE37Ze1RDmg0+Zqvt9XjVK7
tT4iDzk4mJkxfeFgFQLO+FrGUfdXX5soI32vGg3rHjOS+jnY3njA4uKSSuSe
fNuQJE/NbzPSzHvKkbDSCBZaXBxv2Drkp14JWbbubSlNDh5eE5XS6KjEtNo3
82KL2JiVQfQzmRV4NdF+a81DNh6vdn68sKkCLtynEx7NbEi0Rk8sP1AOq8m7
D4XksHGo1rC1n14F/zDr45+p9iRWHCjilFSh8/Z1RV9dDgb33eiyXF2Nnh2r
to4s5cA8ZHC/t241araKy887xEH8R3nDF8cqsUHv+vDnDg7KF/RtK9KvRPfQ
ry0h1PMtSC5sXxJWhV9xoYWKphysPL3IOXB5NVSqJDIuqHHg6Z66Oft2DcqN
JO36qPbqkt5emxVXCx4tMiMyj4PSsJsD/qJ1iNXtph88Ts33/PHANdwa7F3h
tkxvOwcHrr2ddPRBFST/1C+aQrV3TlSEu3RdJfbP7HvqdZYN12Byd08BNT55
jg66o2ysjieMC6nx2Kp7bKlRNRtlhw6+sZOtgOHUgVPbNDgI20zXSpOuwnqu
DNeB6s+i104KMinVaCnQvFhcxsH0Sd2+m7/UIP314I/Jq7h4fPXI+M3nVRgV
/2gavYyL3/EP1KbfrMEOI9a1EEsurmHpX+34auSecDa+u4sLpf5FA2YW1Wg/
8Wl2nAUXa9wM+QFWNRAy8bpU8o6Dn8MVlhbTK1FRRDvJpvL7/bXSEqRdJZoW
b3Kuvc3BH//G6IVzatG/Pdon8jMHPI+yzQ8CqqH5W/hwzxEOkjqfnemYVIlA
oc3ZM1o5sK+uGLtnUo6rhz9veabExWbJ+/kiZWXwLfj6fM0FLsTv/bmRY1UG
hsi3S8qnuBB1jqx9+r0E8k125e02XKQF155p9C1GTfkW9k2qfvD+YaXuvbwE
nTyXrfPLueDsLr+/fWEpevc/SIjO4OJD2Ur2/qkliE4vjEwo5OJMDS18T95b
7CutOfqDul/BGbWq7dlv/4mPO+pWVGRp5f67e8O7Sp/llI0bdG4uXpaLTTpp
8Sv1ePA2KzPckZgH2V2jP0PNeGCv9+/zTX4LEe2XV1L8eSjeqjDa0Z2HdNWl
g9YfeZA8euV95oU3SLWT0LvE5OG1p9k0J+dXYPxdfO3hGA/pki/1kxWyoGUo
JjplEh9v5/yMOrT+FYaCKk+o/+Bh8/X9x5PF38B11hz57V58/OlT2DAYkQe/
Gb9LqiL4cHoYVWd+8h1qzH0j797k40KOq9lU9lu8ZIwKz6rm412w8vJ76W/B
zuKlO+Tz4TJX50PathIc7Yg9tusoH19uOdwQkiyBjMKiW/kb+FAPS+1db1UK
w7erlnQN8DD5zo6ZjsdKcGvQK+Q11Z/3+05Kj/uXglt1PtRqgoeln2QkWieX
QVUz4Y1KMu+fevQ/u58dDXqgQdmGVtp7l6qnPVXbqhobeFgW+8g8wLsUuVpz
E/pE+PC3VW8okyiHYeejFY/V+RBeXPJxS2wZjPWehnKC+FR8eiukPVyGXcPV
USf28pGwpXXQYV4pGF/1Jcu281EnWy2b5VqAuq4hfjU1/nX+wo/G+otwfMey
9sHNfKhuqjQo3lGIqZuyQ8V38//pn8ACCyywwAILLLDAAgsssMD/t5WLX7Ek
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
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.6204038859411043, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.6302754150998529, 
     1.2620532812597653`}, {-0.0244188243499317, 0.5000145297422485}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
AKR+m7aPnWRgJPNVTeB0Ir8ri1zi28dA3uy/lg4jA8j7tfGGxhImBgf9rWLt
WdDmUhfqpDDRem1ok7weC2vufvX162JCclHDZeuVLDBWOtm3+DLRM7s0ueY7
C7YhPrlTk5mo1e2tfqBK5HsndWskifIsl15eekuejYv+5Y9yNZlwmDLvzWgU
C6erO22bApgI9mbNfGrJxn73zq7Rbib2ff141rWNyDcf/f64O5AJud2rN+86
wsJ9JdaDmNNM3GnnvfrTTuSDUfVyP4j9/cY55w2e3mDh0FvnDtX26n+ex3+/
vydNmjRp0qRJkyZNmvT/uvY/N+fJSykW6n0e3TcgbEo9KVhPeLmBf3VTXxWm
3TONnKLBgjD5VLBNPR1bFuh6ZbizMHXGhhUNEeWQHtx9af5fFhLWfZOrflWG
0gdm5xYps1Fpoxvr/K4cuSsU2ZG1bPirvn9oPrccLZGG5YkigxCrCpV6MlSO
3SI/JSpr2Niw/9uaWCk6UjJvuGunscEqZS+OpNIROhDGjI9n40Oeb/QUajlM
2hq0b3HZoHJp04rjyrHk6LXm3Ayi/AuPPQ3kK9CpaHPl+Uc2zjorfVw/uRL7
feiCTMVBPOzv1TW4Vo4wlc9dj6cNwqr/XrzaexqOizz7MkRl48v5Wel/35dB
xH1wNPkoG0cZlT/5B+mweHOr59s0NkI3rVYtel0B1UunzhkR8dUNax9TlK3C
wILLfQnexPHtxZHTX9JRy1tSRSXqU20xLevRGTq+rWr+8iyajbsYbSrbXwZD
5yR64IJBxNxybLS5RcVdz0yKxks2jEfEAud4UDHtdHGLwQU29J4PWu+JocDN
feqPv/vZcLhzReZ5CgWbirzDrR6zsTRiwsgqkwYm7wv1Dp2NnetepBq6UeBs
/svik/ggAhcdEFwLomEo6EHtl4+DuNsSLJ62jIbruW3L9b8P4tjlzvjTTKL9
O6vbgxmDuJNl56L3g47Ytfnro3mDeHVNXnvuukrkyghXxczlYNO5nzrF4xUY
ZaQsSBobhGAonB2dXIHagRNen+5woBa09kqdbRWmXOKG3mjjwGRzQtax0irE
JjYEfiaOP+hoN40rqcLdxJgjA9Ec7Oiw5XhnVYPyfayrxZmLt7eUdbQ9KkGR
k06o2EqcnxVv/OxQBeZ80zb6s5kD018Uk/lelWAY2U9Kr+LgvvzO6VpfKiCQ
mzfb24EL1Qbu1xvWlaid8uNs83UuChqLJplsrfjne6b/Hu+kSZMmTZo0adKk
SZMmTZo0adKkSZMmTZo0adL/Tx+NXnDb9yIXfSsD2//UV+Ih7e7e9lIuHvws
cozqqcI2nV1ioZUcXDp5pASfq9ElfBd21JKLxrUdu1sSq7Alf/hN5Rsu3uVv
T471q8EOjnqUxjQetGy2Lrj6qwpLjiWey43hIm7dMXpedxWqH8yN0KzgIj0/
wO3c7hpMlvugdMCZB8njUQyXdQwczzl/RMGRh3eZl/bN3MZEqFvAgXlWPFyt
Vg9R72WgYuXw5z0TXByIvmdKYTJRNfnPXBjysLbBbcaWLgbuGeftYknw8Gv/
xKyeDCYuJBQUcNfysG/dmt39lkzMzadu37WeB/mrbuGcDzWoXMCe45/Iw+Vc
x05ZTSZMv6hctOzggf+m0nLWCSYMJydNc0zjISReU07lUS3W6yxqZibzsP/M
m+hYah18DfPq3y/iwabD67g3pQ7Ww03Osfo8LPyuL/vqdy26Qx9RpCbz4HNa
dtff0VqcbrHz3ZnBxW9uqvve43W4902svnmEiyOW6XUlK2sRZKiSsqiMC7+k
Rx3LZ9WheF/WykUsLhDE8GXercXMPXrf/vX3ykQyFh4qU6nFWve023vfcTGt
tkecR5zPbpZyo33lIlFN7tjho7WQt9F/xXvCxUfu4yfTo5lYtm7TWacsLi5/
8uwb/FuLXK7Tuh8/udAWbX5ys4cJhxRbTb82Lr5f0JdncZhgRbr99FIn2n/d
DOWKOiYUqH/tdznxoLMrKCZlPhPfffUCum7z8Jh11VJRrxba73z8XLN4MF9Y
MbQ/thbRZgGLZacPoXSm2+rs7bWQjhbKlCgOwftdvIru/FqsYTmafPEdwgbL
Dv2bB5lYu1zphI3PELbzt1h6X6hBsq5FrfPlIWgFSv62cqrGn4ln+51WDWGJ
Di2S5l6FXRyzsMWHhhDz9tqCVWsrcDVxo8lizyGExncHC5QrwQ07ZugbMwS3
t3pd9LnVCJL+0HnPYQiTFMV3aN2rxj4nytcEuyHcmCOy7oCwCnmRw2mvzg7h
rHuFfBCPDmMVTpfl8SEUazlL/k6vgOnCc8dF1w1hLGZ+xtR9ldBI/WieFjiE
lQsvl18VVGLuH5lFZz4Q9RX7HJIYVYWWk1s6KwaGYP+0d//xa9XwFZ1pfLJv
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
+mhAQoaP9XP3D6wwykbAi3cSC6bw0bzaeonG+mx0mj48KRDhw+XywzA3o1x4
uQ7myc/kY+TdlXO6KjlQig641UQZxqRZQrGJ4o/oz5ipM1ozDIkx15bSz7lQ
8zyjqVM0jEdlstMXXsvCH43IdwvihuEwW9XV5ncmjEPG0j/GDONSYY30pp5U
9HJibir/JeqXZcxiClMwzTaiMEqdj6ZfllffdD/HvVWOcal7+YiwpG32nnYf
mrsievZu4KN05qW3xZ5xcC+aOjPahY9dv5/XP9n8AnfPoPVuJNF/G/ou5hgk
IXy5wo47RP9E7Zcvvf00GVmte84cvEG0P2/EvawlFYOUwl32Bnz0NLAF0fFv
kJdevaLnJR/H9cwftK59jyeC+hXJT4nzd/+d2n8iDWfSu3ZcJ8bnw+8Oj5bM
ew9dzbf5C+P5CFknu9YqNgPWS3/JxL7gY87Qj9GdM9Ogqse3vr+FD4NXn6SH
p+egd9v5O2s8+bDLCxbrGMhGqPvw1nEbPp6aqpguqczFIqbujB1exPr78caf
gaBsdDlujzhowUdVAN0jNuwjFq7/WeVwnI/Pr33nL67JxM/Ar6H12nwc1vBZ
emM8HdVyq7+8biT6QyVlc1tjGpZsuDZpR8YwSnWGko5fSYOT8csgv6ZhjD2Q
tBHmvEe7+zy77LJh/Mr66NF88w2a5eyXbf40jLmSn/7MXfoeo+enluw6Mwxm
+uesIzfeo35mnSa2DQOfi9Lc+9PBf3CZ/vvsMKYu92J7xr0mTZo0adKkSZP+
b+c1JxkHjfyHUaUUabf/1Wu4xY1qvwgchqV3yd5wzjt4rfp03OH2MD719Qpj
Z2QgVmnv/WO3hnHlx2n7xNVpeH688mq24zA660temazLRGTPN8GmiSGk04x1
py/MxOcCJVvJ5cOYVcBus/r84Z/776NrlaZpZJEmTZo0adKkSZP+D5ruvCGz
mvAywV3vdJ0shFta9hx5NIzZp9m7hZsz4aOcxA3MGsYc3frLcpey0SKdwElN
I66/KJK0ySQHRemyFIkzw/C0akiW3ZWN1LBM2wsrhqFpo79047f/q117fYqy
DMMALqGOYioiEMwoC7IkMYDuCnnYxWviFIMIEjsgGMmiAYscPAQRgbIIArbI
Sc6nBRZ2SZGDoNHQEmrabMkGUaBACGqoCezzAp6h3i/xD9RMTb0ff1+ewzz3
fc394WkFa3T0hfsuggKTyDES2IIEZ465vQ1BkHCOf5jTiEHpBYeN2gRHrw8m
nDe5COerOheUfRqsieNxy++1IXGi2ELrkWbhvP83X+sI3S2i/WuopPDYpkt4
a8nJwR2UBsnlqRxXp8tYHH82eKMpQd+KCK+KA5dx1f2V/8AdDZI648M+294K
W2xII8sI+GlG+l+cbsGYQH7imBWBvZX2+gOZjUgUc0tShAQv/Lk+8ph6iMcm
osfaCTgWqtpsczm48dKb544QNLbwPdqlMuxsny/uSCeYLFvvnY2yhXpqiJot
m1HmMGbM+F/kfY/51Rra5WYJur2yHPQLhVOdDXTes+4PuJhmQ1ozH8T/jSAr
Kyuo/vMyqEdaKqXGFH5KV+WuUxWhxyzcsHOUQODo6MEOrgW7MfBMz0MCa5+u
5/G3z4FTbBMXoia451kqkD8/j4sWloFddH68N2TcPNmrQEX+9zGONwneRxzv
knktdAyX36gZIpibeNDpqCqEnQMrs+o6QV2+F/tVoAxHY48p61QESwvDvZL3
56Nhj2+e/iyBlsBzODOwBKsGJSXLx+j93tzG4p2OxcyruLsz+hTEyx5Zx6Qm
I8xZFK1ZQi3cnzHj/7JtdLLOZ9COZj0UftWeA8N1blEFphSSeE/3h68VY9XH
SSNyRwqUsfMKES8PMYvfpcK66P4vOlrXPluARzEsvZ+rCQzz4kNG9+Xh4Bx7
Xt1K0LXNzu9ecDbU98d1RHS/dyWujj106gzqSh8UiX4huFOg6ksZkCBgqbdZ
/ROCXuEVdWhoHkbHhy1q+gnY9qv0xkfKcMAg+ZM+Og/qx1s+3e5Vjj1OKXkB
YgKzBi2Wx1AFjFKJj14vgYnCbjbCpRp7H29Wv95JkNksv8C1qoasX+Urotez
3BDGc0logr9SSxZG59f8SrZy/+4mGCXs2uxNzy8GG0w541NNOOh5eeJSOYGt
ufFU7ZZG/HijVXCrh2DHlO0Jzz4FpMMlW2eVdD52DfXEO8mw96PIg9+0EXQP
vt0yFSLHayKbnQN03ilWWgokkZWYvNFzKulLgtJnue6pwVU45K//YUQKweox
fuCSIBmmm93HbWT0/GqrbNX9oQ5GuW7eLml0fl3riDI7If/H8/+vOvudsJE+
2pb2iqT8/hzwN0VYtdHv8wHXoOpsQBnYFo7Xn3QTLHpZNdDkF9OJl0b+6YW0
2yJntdcfwaiTbs1xur4k270eHD4ZjqFn6YmSKwQqRcfvOWa5sOb7aVLp+vpu
sG0q+utCTETdvbXVkkKHw8vujMRquAqdirt9KXw7vTa6YKQEcrvpWCc3Cvdt
mueP367FXGUVV7GFwtNEgYQVnI9Ffuo3MhwoxGn3RlAa6cL/lz/vw5gxY8aM
GTNmzJgxY8aM/x7z2no9xLRdOWvWXW3PwR9QLoHQ
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.42145532117491274`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.4350569519870598, 
     1.3055613239644732`}, {-0.005210581594041086, 0.3549010221030072}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.002777777777777778], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJzs3Xk0Ve/fP35NKqkoKkJRipCSRulpKJU0KKWkSIh3KiohKUWkzCFT5nme
M28zmed5OM45hmNuIEn57ft3r8/7j99a92+t7/re9/25h/OX9VjXtfc17L1f
+3Wds88mqPPgot5iFhaWN+tZWP7lb42f0cr967pRQ48u9klqxOUkwb3r1bvx
LeOx0IvrjYgs8tNdcrkLg5OvHzpdbkIeJ7vsx7EubDtT4GKi1YSqFfKfa3f3
YGZzU9r1/iZc3xu/p0WhG0I3N6fojjYiOr+sP/Z1N9p8HZonqQ2IrSnofnKp
G+/VlsWdzW/A/Gxv1thQF4bnUvjWTjRgvZPLT9HbXRBqG3u6t7UBNx4XUW/f
68b4X1Hiaw82Qu738fNP0YMs7h3H5MIa8fREd+GCZA9+NYSv3XiuEYcL16dI
m/Qgc9h0v8zZJkyne1saN/fgZCqv/wqyv0NGjxEZ2IN67qblz1Y2g83+2g7v
+W6sPy2d2ufejN/ODRZhq3tQ01fzNmpLC0KE1pk/4+jFEiVl05MWLdhlTj9Q
+7MXP9I9Iu5pt0Cvf6fSBHsfKkPU99teaIYaG6tloW0fVpX4tK11b0Km2JI8
45I+eDMmUjsmmzBwbuuf2zZ96DM5tC7mdjO+jt6tWeHWC7ekFZwh35tgVmmT
oWrQi5zFgxuGw5uxL7BX+yzRC4M5M+rWgCY0RU91qZn3on3MV3GHfSMSn535
GRzZix76R3m7lY1o++2lHtHcC5aw7PS71xsQ6atW6pHVh6P30ux+HW5E6bL2
p8SbPkQpLThKvWyEu7zOrjfG5HjCn5YcXNcIuwMTmo+UeiGazxJ39FM9eCpq
ZVtceiCQDXYD1KFkV2/F0a89KNq449Ky0HqmmWaa6X/Tq2tescR+60GlYFxl
A2mV4kOUc7t7kVJ3PHfv5nq45z3pslrUg/cLVUQgSz3mC9g2pN7tho5NU9cp
pToMj3Iddo7sRkvELKfLmzqkbA20c9DrRqjr9m2+Xg2YiTsv17unB/4yikdt
n9VjYcverrOklwxH+hc/a0D4QteOm77dOMjHdfelSz18Q8qXe6l2o3fTws3x
O/XIe3Z2RzW9G3XyjI9e1+oxGTkqLLW/B6pDV/3Fr9ZDhsX7CHdsD9SDt3at
+FqP/SN3499q9uDGvpOdl480IMQxvHmUqwcqK2bbX/9uQCirssuVJT1oFxi2
qd3ZALbbYRnf+8n70fpb9ye+1MPj+aLhRJU+WE1zifCb1UPQmO7uaN2HT9PV
hL5BPaSyOoZF4vsg7/3XyZP59TA+eKo5jo2Ckz+nGPvPNyD4qdNemiwFrx/f
TLk0XA9VHfpX6bMUNGipyFh8asATHicRyYE+OD/gN/3A2oA6xn7fcwcoOFzW
kdM01ICzRscSVnNT4F1aMkjrbGSaaaaZZppppv8HWFY9+u060qnKvIfsuxvh
1Mu5NOg6BRybhZ87djWipMEzwUWbAjOpqqrNnI345im8MKZAwfCX0MeNZQ3Q
2d3iNZjYB99tbjq/0IDKXasU7J360KY6u+ztrgZ0bzzSoOrYh4fGv6PiCxrQ
3yERQ3j24cJq2xUWJxpwyGfL64h3fWBQV163I/MvpcvaJ0zie9Hy82vw4vdk
fhKqUfZYuhfFlXpsTwfqofMqI2Z6eS90bFUrxZTqwX66Ouo+tQu/VjWHGKwg
87Fn2H8zu+vvfJJppplmmmmmmWaaaaaZZvq/i+V8NGdpOV1w21p466+QerwQ
0Z/ZdLEb7C1fDi4bbsCcqFLgYqIbRNKqTcI/G3CQJdmbmO/GptXjdvq3GhCw
vUXRnq8bcmlB6oZbG2HsMpCu19iNskUh9Y/eN4Il4qe7ZVY3ij6dyzMXaPin
f/7PNNNMM/2/1edtkhc6v/WgRibrVjEZ7/Xs2TffZO3BYu3ATfNF9Vg1HXOW
PbgHoQEvaA6n6xGltX8ia30vrotzagxVN0D0itT3UNFeRPXOyLiKNcDGcsj7
zmgPggy0K1/O1sF8b61i2788/8E3XfvRpwbXulV5n0T2YWhi+o/BdCUmRZrv
RlymYKDKyXOw6zOKX+QKC0pRsGzAe03i1UpEri35es6IgrtVfIrrkstR3FR7
siuMgr9+uens061Adbm8eLM4BUln9jsoHKjCi0WTJkHb+zCoem70+19VKPXJ
9HLz7oX/X08Ff4hXoas1Q97lch9s7szxHcqqgugJmvV3iT581bOuOdNdBYVF
XwQe2/ahrHndjEtDFbpHtW40raIgl9ZvpS5L7i+kw2ZgEQV+dfcKrdoqUCOw
3fnnVgok304ee76pHKWxCdpbiT682ToXYcQowZo9V+LjEiiIscULi6AyHCxe
PTu/px+7zRvUXfUrmGb6f5VPHnb0qd3bD/9hYSdz0rf33YlIEeuH9dtB5QdX
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
wTo5Y3piJFGZ8aicyhgFyy+frWmLQwgvsXePd6mNgaUKqhlaUUTa0J/8iB+j
SHKtvycuF068cdl96FjEGIK4xXLT1iYSuiI7Oy+fIuv/6/tc/q/dkbdxbSTp
IGobrpHzNX51z16ZnWO48Pyt8IqYGCKhMDWuc3IUHDMnD15YH0x0v+e/mdBC
juegJvV+qT9RJr3jMcNgDNrycwVVLh8IDv2AlOxV5P5cZteUzwcQuuFlxmm3
R7GVUSCbm+JL8JwysSp2JMf/3Oe18nZ3osh2s64AaWvWp1vHr/oTF9KmLq3z
H8UFgRsHhjeGE0pGIZmCOaOQyx8zHpmNI742/Ng6SRvFVDFhUSsTRRzQkZQo
TCLLD01vLeqIJQxeuN9U+TiK9odG+k1SyYTFv/ybZPFRXK2UKknencE000wz
zTTTTDPNNNNMM80000wzzTTTTDPNNNP/r7fbtD06KDGKFbGF03ykc2W6wnLG
RmD+oInSnZxGBHFrrrj0bgRXG9klCwuTift6H9tHbozigleV88ldicTzALmA
tU0jeDN27EfGiwyCb2q9zyvqCIx5ZSa4CzMJZ8fT+gPCo5jyaq1WWJ5NxHnk
cRb2jqAi8Ul7UHw64fzKVaGii9y+p9RY2iXpnz4fTDPNNNNMM80000wz/X9j
nxXB0x5iZH5t2nxumLS51UxndPEIvF+LH5O+nUUEn1t+Kdl1FAZrPVbLTWcR
Zqty9jnnjYLji9fH2rI84tji5Oi6A2MQGZtNVikuIDRF6bM5QmNIK3smfF2n
gPi6robDmzoK40pVweq3eUTt3HaDzwGjyBT/aihjSBBjMhwpj9LI9reXtZq7
EoT5g7T+hs5RcKX36UZUFRDsdOvj7N9GId6mk+nfXURcETqUF+4zirj17d0X
dIuIjgurRXvPjqL9JwfvNrL9UeeD3JeUyP7ljV3ziyskCpzEd1GCRtGcoXTg
gnwJwRY5Ee+QM4rh1nfH1DcVE/T0pfPGF8n1wpa3q03WFRExmW1X1PePQvp3
dmzUxxLCqjGOrc6cnC8fyuXmX0WEsXTG45zQEYw5RrVdXVxCvOO9X1nrOAK1
IbtfbzSLiXap6wKr1o8gKoehZ85eTGxINW0/2s6Ad8akQhx/EXEmOkY1womB
tINsD6t2FxF2esrbly8ZwXFFoykBiyIijktCw2qAAfpaeyNznlIitUJDZ1EK
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
29GaUvmr/wNe1oOZmZmZmZn5z/4DBQevQA==
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.34156452444222213`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
           Part[#, 1]], 
          (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0.35059792605322626`, 
     0.9287356291574963}, {-0.22012806596153506`, 0.35405421575961077`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.6943839886311274`*^9, 3.69438417469311*^9, 
  3.6947896117310205`*^9, 3.694861809885043*^9, 3.694862182194064*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Section",
 CellChangeTimes->{{3.693007098041191*^9, 3.693007109723467*^9}, {
  3.6930071518156796`*^9, 3.6930071586607766`*^9}, {3.6931007233797517`*^9, 
  3.6931007282218237`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stateDraw", "[", 
   RowBox[{"tag_", ",", "parnum_", ",", 
    RowBox[{"color_:", "Blue"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", "boundones", ",", "boundonesnoInd", ",", 
      "boundonesindexed"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "series", ",", "totaltimeboundunbound", ",", "timesbound", ",", 
            "numtimestepbound"}], "}"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"series", "=", " ", 
            RowBox[{
             RowBox[{"tag", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"totaltimeboundunbound", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Differences", "@", "series"}], ")"}], "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0.", ",", "0."}], "}"}], "\[RuleDelayed]", " ", 
                 "0"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"_", ",", "_"}], "}"}], "\[RuleDelayed]", " ", 
                 "1"}]}], "}"}]}], "//", "Counts"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"timesbound", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Differences", "@", "series"}], ")"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0.", ",", "0."}], "}"}], "\[RuleDelayed]", " ", 
                  "0"}], ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"_", ",", "_"}], "}"}], "\[RuleDelayed]", " ", 
                  "1"}]}], "}"}]}], "//", "Split"}], "//", 
             RowBox[{
              RowBox[{"Count", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Repeated", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ".."}], "}"}], "]"}]}], "]"}], "&"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"numtimestepbound", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"Length", ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Differences", "@", "series"}], ")"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.", ",", "0."}], "}"}], "\[RuleDelayed]", " ", 
                    "0"}], ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], "\[RuleDelayed]", " ", 
                    "1"}]}], "}"}]}], "//", "Split"}], "//", 
               RowBox[{
                RowBox[{"Cases", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ".."}], "}"}]}], "]"}], "&"}]}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
            "totaltimeboundunbound", ",", "timesbound", ",", 
             "numtimestepbound"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "parnum"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"boundones", " ", "=", " ", 
      RowBox[{"Replace", "[", 
       RowBox[{"data", ",", 
        RowBox[{
         RowBox[{"patt", ":", 
          RowBox[{"PatternSequence", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"_", "?", "AssociationQ"}], ",", "_", ",", 
             RowBox[{"{", "}"}]}], "}"}], "]"}]}], "\[RuleDelayed]", " ", 
         RowBox[{"Sequence", "[", "]"}]}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"boundonesnoInd", " ", "=", 
      RowBox[{"boundones", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"boundonesindexed", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"boundonesnoInd", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "]"}], "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "boundones"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"GraphicsColumn", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{"boundonesindexed", ",", 
          RowBox[{"PlotStyle", "\[Rule]", " ", 
           RowBox[{"{", "color", "}"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"PlotLabel", " ", "\[Rule]", " ", 
             RowBox[{"Style", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"Bold", ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}], ",", "Black"}], 
                "}"}]}], "]"}]}], "&"}], "@", 
           "\"\<number of times ligand bound vs how long it remained \
bound\>\""}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<# of times bound\>\"", ",", 
             "\"\<How long? (# of \[Delta]t bound)\>\""}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], ",", 
        RowBox[{"GraphicsRow", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Histogram", "[", 
            RowBox[{
             RowBox[{"Flatten", "@", 
              RowBox[{"boundones", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ChartStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"XYZColor", "[", 
                RowBox[{"0", ",", "0", ",", "5", ",", "0.2"}], "]"}], "}"}]}],
              ",", 
             RowBox[{
              RowBox[{
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"Bold", ",", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", "Black"}], 
                   "}"}]}], "]"}]}], "&"}], "@", "\"\<counts of stay\>\""}], 
             ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Histogram", "[", 
            RowBox[{
             RowBox[{"Flatten", "@", 
              RowBox[{"boundones", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ",", "Automatic", 
             ",", "\"\<Probability\>\"", ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"ChartStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"XYZColor", "[", 
                RowBox[{"0", ",", "0", ",", "5", ",", "0.2"}], "]"}], "}"}]}],
              ",", 
             RowBox[{
              RowBox[{
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{"Style", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{"Bold", ",", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", "Black"}], 
                   "}"}]}], "]"}]}], "&"}], "@", 
              "\"\<probability of stay\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}]}]}],
        "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.692721580985437*^9, 3.6927216186579037`*^9}, {
   3.692721710859226*^9, 3.692721891101317*^9}, {3.692721999255456*^9, 
   3.6927220312163744`*^9}, {3.692722125473054*^9, 3.69272212624108*^9}, {
   3.6927227222522526`*^9, 3.6927227279049325`*^9}, 3.692724339867446*^9, {
   3.6928276824988422`*^9, 3.692827801956851*^9}, {3.6928278679834003`*^9, 
   3.692827986097909*^9}, {3.6928280178811693`*^9, 3.692828388682796*^9}, {
   3.6934047102452927`*^9, 3.693404760693283*^9}, {3.6943852169476624`*^9, 
   3.6943852530667763`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateDraw", "[", 
  RowBox[{"taggednodal", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6930343013506875`*^9, 3.693034306169037*^9}, {
  3.693404747789618*^9, 3.693404752220251*^9}, {3.694385133392758*^9, 
  3.6943851342454753`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFkTsKwkAQhgcrSwsLywgiYuWjEBFx0UZFBBPwgShRjJ2m8AJzlBwlR8kR
PIKvar4iLizLx7//7D+z1XPsRwUR6b/35/yt5+h76NIZlodlPUAfWA5v0H3o
F8suRP0J+AR/nJ/Hu1tO98jTBnfBC/iR321xvwj2wB1wPb/fhPNrgafwr6GP
oc+QH/OWGrhhOcP8Ff3rCn4y8koFPAT3LKfsr2k5idAf/kuP0IM/75dxf4N6
8OvccnZFPf4f57MDl9wLQKZybg==
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQDQUOEMrOAYXfkI7KT0hAk/dE5TNEofHRzQtG5R9I
RpN3RuMHoZmnhsb/YI/Cf5CBpt8Vzb5ENP2mqPwLRaj8BDT3KVSg8h2CCPDR
3OOAFn4OSWh8NPcdCEdzrxGa+mg0eT9UPnp4KqDbH4GmXwRNfyyavB4aHz2+
vNHkfdD4Wmh89PgpRZN3QjPfA5U/odYBAPbjM7A=
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx9kk0KwjAQhYeuPILLuhNxY/3bjhbcWBALKi6U2J+dYFHcexSPkqP0KCpd
zSc0EMLHm7yXTNLLbmkZiEj0nb+1GR1t1kQt78Bjy68YvLHsrtC38BuBFTy0
/M7hd0DepV33BfxxP3+EvrIcPixXT+ShXtAPmYMX8Hft55Mp8s7QQ9xnj3r2
t2vZlZZr9FMz7Ec/+L5/eX3wBP4p9DUYfh55ekI9/osMcL4l9Bn87voBNRM4
Xw==
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQECDmDqQY4DCt8hBJW/oACVfyAelc/gjcY3xi/f
gK7+gz0qnwNN3gSNb+iAV71DFpq8Eio/IRHNPU5o/HQ0/fao/APBaOpD8ZvH
4IymPxK/PEMKGl8DlW9QjmYfenyh+R89vhoyUPkKmWj2oaWHBg9U/odaNPls
ND56+KCFZ0MSmn3otJ0DACzkNFQ=
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJyFkzsKwkAURS+uwMLSYrRwDYqFjyhYCCpREWyMITY2flaQpcxSZikuwSX4
q96xMBCGw7x73y/plOf82JDUf73v8/u07HOkpTkOhed67lk9z7bG/QR63Mcb
+AB9Bm56vpfw3yOe9c7+5BP84K8t9CfUA7+0g595tgr+XcRPwRniHyPPmI82
YJ4B/ti35ehn5ZnfR2Q/6LfAvCL0aiM/8nGeP/sdgwfQsz7OD/FaoB7sX0PP
Nf6fhPlfrtAHewJF0kTE
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdksEKgkAQhoeewUNHu3susMsQeAmsUE9BumZ6CMKlJ9hH8dF8lLJO8y0s
w8f/DzOzs5v7WPQrEUm+d4n/s9ZfmFo1HCrL2lieHPxn+J/QC8tSg/fgFPkd
OIP/BL0EH8GK/C30HDrmDwfL8wN+5Ps38m/gAYx5lfu4oB7ey7Ef7Cdc0T/q
yQ71sC/v4X+BI8sx/HMPP2LA/5LYshv0AyRBOJM=
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQEyDhBawQGV74LGz0LjC6DyF5Sjyfug8hPS8etn
YEDlFxSiydug8Q1Q+QdSUfkOJWjyaHyHWDTzvFD5Dej+90WTj0KT10DlP8hB
4yejqddB43Og8hWS0OTR/MtghGZ+Chq/AJXvEIjGR3cPevgqofIPhKDyCypQ
+Q1o4YkRfmjxq5CNJu+G5r5QBwCWJjKs
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAWIQDQEKDhA6ygGVn4LGl0DjG6LyG/LR5GVQ+Q7haPIc
aHw9VL5BASo/AI3PoITKv4Amv6EIzf5gNPei+bfBBc38OPx8hxxU/oEwVP6C
dDT9Xmj2oZm3IBNNPTptg6Y/AM09oWjq1dDUe6PJ26HxfdD4jmh8DVT+hXI0
eWP87mVIQnNvLir/QRqaevTwRvNvQ5ADAAUqNXQ=
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQFKDhDa0gGVb4jKbwhGk/dF5R9IR+U7ZKCp50Az
LwtN/oM9qrwHmnovNL47mn25aObpoPGtUPkXitHkBdD4Jmh8czT7Q9HkXdH4
6OFpispfkIwmr4VmPrp/XQiY34imPhaVfyAIle+A7n+08GGwRjMvBk2+CM18
NPuANqDah55+bND0h6Dxo9Hs90fje6Opj0IzH009unkK2WjmOaK5N9wBAHpr
P2Y=
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJx9kj0KwkAQhQcrS0tLBWtJY8RCMgSj4E+hqBFU0AVNIUHBC+zRcpQcwSOo
pJpPcGFZPt7M4+3stt19damJSPjZ37NaHa3OgVqOLRdPy373v17XqN9CP8D/
Zrl08H9F1m8JvQG/I/QF9DPypaifQ1fofcst5NUcvEd/jP7M8umKvJjPT94Z
uAkegutgAUfIj/fzeD8JkR/z1Q36R+ifWi5x/+CB+h78+R+Q309Qz/lhHn4M
PUE//rd0LRdO3xjFQ7o=
          "]]}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"# of times bound\"", TraditionalForm], 
        FormBox["\"How long? (# of \[Delta]t bound)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Large,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox[
        "\"number of times ligand bound vs how long it remained bound\"", {
         Bold, FontSize -> 12, 
          GrayLevel[0]}, StripOnInput -> False], TraditionalForm],
      PlotRange->{{0, 10.}, {0, 386.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {409.5, -189.86004134396768`}, 
     ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[{
           {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
            EdgeForm[{Opacity[0.623], Thickness[Small]}], {}, 
            {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
             EdgeForm[{Opacity[0.623], Thickness[Small]}], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{0., 0}, {50., 184}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{38.814650908224124`, 
                   66.78372900857265}, {-198.0236946373933, \
-16.614414892908712`}}]},
                StatusArea[#, 184]& ,
                TagBoxNote->"184"],
               StyleBox["184", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[184, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{50., 0}, {100., 119}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{66.28372900857265, 
                   94.25280710892116}, {-134.1155251624395, \
-16.614414892908712`}}]},
                StatusArea[#, 119]& ,
                TagBoxNote->"119"],
               StyleBox["119", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[119, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{100., 0}, {150., 74}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{93.75280710892116, 
                   121.72188520926969`}, {-89.87140783362534, \
-16.614414892908712`}}]},
                StatusArea[#, 74]& ,
                TagBoxNote->"74"],
               StyleBox["74", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[74, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{150., 0}, {200., 44}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{121.22188520926969`, 
                   149.1909633096182}, {-60.375329614415875`, \
-16.614414892908712`}}]},
                StatusArea[#, 44]& ,
                TagBoxNote->"44"],
               StyleBox["44", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[44, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{200., 0}, {250., 26}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{148.6909633096182, 
                   176.66004140996674`}, {-42.677682682890236`, \
-16.614414892908712`}}]},
                StatusArea[#, 26]& ,
                TagBoxNote->"26"],
               StyleBox["26", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[26, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{250., 0}, {300., 17}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{176.16004140996674`, 
                   204.12911951031523`}, {-33.82885921712739, \
-16.614414892908712`}}]},
                StatusArea[#, 17]& ,
                TagBoxNote->"17"],
               StyleBox["17", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[17, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{300., 0}, {350., 11}, "RoundingRadius" -> 0]},
                  ImageSizeCache->{{203.62911951031523`, 
                   231.5981976106638}, {-27.92964357328549, \
-16.614414892908712`}}]},
                StatusArea[#, 11]& ,
                TagBoxNote->"11"],
               StyleBox["11", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[11, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{350., 0}, {400., 5}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{231.0981976106638, 
                   259.06727571101226`}, {-22.030427929443647`, \
-16.614414892908712`}}]},
                StatusArea[#, 5]& ,
                TagBoxNote->"5"],
               StyleBox["5", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[5, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{450., 0}, {500., 2}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{286.03635381136075`, 
                   314.00543191170937`}, {-19.080820107522698`, \
-16.614414892908712`}}]},
                StatusArea[#, 2]& ,
                TagBoxNote->"2"],
               StyleBox["2", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[2, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{500., 0}, {550., 1}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{313.50543191170937`, 
                   341.47451001205786`}, {-18.097617500215677`, \
-16.614414892908712`}}]},
                StatusArea[#, 1]& ,
                TagBoxNote->"1"],
               StyleBox["1", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[1, {}], 
               "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{-11., 0},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->Medium,
          PlotLabel->FormBox[
            StyleBox["\"counts of stay\"", {Bold, FontSize -> 12, 
              GrayLevel[0]}, StripOnInput -> False], TraditionalForm],
          PlotRange->{{0., 550.}, {All, All}},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
         ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
         GraphicsBox[{
           {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
            EdgeForm[{Opacity[0.623], Thickness[Small]}], {}, 
            {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
             EdgeForm[{Opacity[0.623], Thickness[Small]}], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{0., 0}, {50., 0.38095238095238093`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{41.54875307509201, 
                   68.74863541429579}, {-192.9578292806147, \
-16.614414892908712`}}]},
                StatusArea[#, 0.38095238095238093`]& ,
                TagBoxNote->"0.38095238095238093"],
               StyleBox["0.38095238095238093`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.38095238095238093`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{50., 0}, {100., 0.2463768115942029}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{68.24863541429579, 
                   95.44851775349957}, {-130.83923180669683`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.2463768115942029]& ,
                TagBoxNote->"0.2463768115942029"],
               StyleBox["0.2463768115942029`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.2463768115942029, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{100., 0}, {150., 0.15320910973084886`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{94.94851775349957, 
                   122.14840009270335`}, {-87.8340489401383, \
-16.614414892908712`}}]},
                StatusArea[#, 0.15320910973084886`]& ,
                TagBoxNote->"0.15320910973084886"],
               StyleBox["0.15320910973084886`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.15320910973084886`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{150., 0}, {200., 0.09109730848861283}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{121.64840009270335`, 
                   148.84828243190725`}, {-59.163927029099284`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.09109730848861283]& ,
                TagBoxNote->"0.09109730848861283"],
               StyleBox["0.09109730848861283`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.09109730848861283, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{200., 0}, {250., 0.053830227743271224`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{148.34828243190725`, 
                   175.54816477111103`}, {-41.96185388247585, \
-16.614414892908712`}}]},
                StatusArea[#, 0.053830227743271224`]& ,
                TagBoxNote->"0.053830227743271224"],
               StyleBox["0.053830227743271224`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.053830227743271224`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{250., 0}, {300., 0.035196687370600416`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{175.04816477111103`, 
                   202.24804711031481`}, {-33.36081730916413, \
-16.614414892908712`}}]},
                StatusArea[#, 0.035196687370600416`]& ,
                TagBoxNote->"0.035196687370600416"],
               StyleBox["0.035196687370600416`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.035196687370600416`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{300., 0}, {350., 0.022774327122153208`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{201.74804711031481`, 
                   228.9479294495186}, {-27.62679292695634, \
-16.614414892908712`}}]},
                StatusArea[#, 0.022774327122153208`]& ,
                TagBoxNote->"0.022774327122153208"],
               StyleBox["0.022774327122153208`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.022774327122153208`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{350., 0}, {400., 0.010351966873706004`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{228.4479294495186, 
                   255.64781178872238`}, {-21.89276854474855, \
-16.614414892908712`}}]},
                StatusArea[#, 0.010351966873706004`]& ,
                TagBoxNote->"0.010351966873706004"],
               StyleBox["0.010351966873706004`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.010351966873706004`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{450., 0}, {500., 0.004140786749482402}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{281.8476941279263, 
                   309.04757646712994`}, {-19.025756353644624`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.004140786749482402]& ,
                TagBoxNote->"0.004140786749482402"],
               StyleBox["0.004140786749482402`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.004140786749482402, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{500., 0}, {550., 0.002070393374741201}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{308.54757646712994`, 
                   335.74745880633384`}, {-18.07008562327667, \
-16.614414892908712`}}]},
                StatusArea[#, 0.002070393374741201]& ,
                TagBoxNote->"0.002070393374741201"],
               StyleBox["0.002070393374741201`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.002070393374741201, {}], 
               "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{-11., 0},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->Medium,
          PlotLabel->FormBox[
            StyleBox["\"probability of stay\"", {Bold, FontSize -> 12, 
              GrayLevel[0]}, StripOnInput -> False], TraditionalForm],
          PlotRange->{{0., 550.}, {All, All}},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], {576., -116.80842387373012`}, 
         ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}]}, {}},
      ContentSelectable->True,
      ImageSize->{780., 245.61684774746024`},
      PlotRangePadding->{6, 5}], {409.5, -569.5801240319031}, 
     ImageScaled[{0.5, 0.5}], {780., 245.61684774746024`}]}, {}},
  ContentSelectable->True,
  ImageSize->{831., 771.4401653758707},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.693034307014161*^9, 3.6930343437099276`*^9, 
  3.693093249976672*^9, 3.6930991325182858`*^9, 3.693099217393944*^9, 
  3.6931341352458754`*^9, 3.693142061279255*^9, 3.693250968872059*^9, 
  3.693405432854132*^9, 3.6935014516492763`*^9, 3.693502855368466*^9, 
  3.6936489145704107`*^9, 3.69364957437955*^9, 3.6936503693749914`*^9, 
  3.6936530339267488`*^9, 3.6943851355986753`*^9, 3.694385197265744*^9, 
  3.6943852586821012`*^9, 3.6947896128042717`*^9, 3.6948618108030505`*^9, 
  3.694862182475065*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stateDraw", "[", 
  RowBox[{"taggedlefty", ",", "10", ",", "Red"}], "]"}]], "Input",
 CellChangeTimes->{{3.6943851409642344`*^9, 3.694385148711252*^9}, {
  3.694385263096159*^9, 3.694385263743103*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQEf7MGUQ7QDCr/BFY3vh8p3iEHjh6PyGZTQ+Nao
/IRMVL5COho/EU1/Cpp9IWjyAWh8BTQ+mn8YdND8h2Z+gzsq/0EWmnwYKv8A
mnseoPmPQQ2NL4DKX1CAJo8WXujudwhEk0cP/2xUvkIumntj0fjo+p3Q+Gjx
zeBIwH9odAOa+Q2RaP5Bi+8D6Q4ApPFW5A==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQUOYLLB1wGFz+CKym9wQOU7RKKpt0RT74GmvpyA
eidUfkABKv9AIJp+GTT9FWjqk1H5Crlo+o3x288QgcZ3Q+PboPE50PhaaOaj
h2c6Gt8dv/kNcWj8UFT+ATR5DPe5oPHRwxNN/4ZqNHk09y9IRJMXQOMbOwAA
Wcop6w==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEcDhA6wgGVz4DKLyhBkxdA5Tc4o8nbofIV0lH5
DtFo6k3QzEtFk7dH5QsUoakPR+M3ovIT8lD5D5LRzEenP9ijmuePKm9Qieae
YlS+Qzyae1zR7M9Cs88azb0ZaPK+aPaj2cdg6QAAKIYiMQ==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQECDhBaxwGFvyALla+QjMp3CEHlM9ii8f3R1Ifh
1+8QjMovKEflN6SimY+mPyETTX0EmnoZNPlcAuaj0Q2RaOIqaO4PQFPviaY+
DY2PJo8evgweaOah6cewLwZNvwgq/0IjmrwEGt8KlX8ALTwZ4h0AgEYpNw==

          "]]}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEiDmCqwd8BlR+HymewROOHoqkPQOUr1KKpN0bj
m6LxGVD5G0rxm38gGE1/IJo8mnoM+73R+K5ofCc0+0PQ+G5o/CA0/VFo8mjh
eyAcle8Qg6Y/Ho2PLp+AyhcoRjM/D42fjaZfD42vhKYe3b/JaHwvND56evlg
jyofiCEPAAoKMlE=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQESDmCqIdwBle+IymcIReOHofIXFKLJe6LJJ6HJ
C6DyHTLR7I9FU2+FxjdH46OZfyAFlZ+AzkdXH4DKD6hE5T9A09/ggyZfhCYf
g8YPRHOvGSpfoQZNXgRNP1p4fyhG05/uAAC1tSdD
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQEyDhDawgGF35CDyndIRuUzJKLxzdH4aOYxWKHy
FySh2eeO3/6GcDTzUtD4aHRDOho/Ho0fiMaPQjNHA43vhaY+DJWvgObeB5lo
+mNQ+QvQ3e+HZn4BmrwZKt8hEs0+9PhB849CKir/QB6aeQlo+j3R1KO794M9
fv8oOQAAVMsxRg==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEKDhBaxQGV74/KdwhHk7dH5R9IRZO3QuU3oOk3
qEST90DTL4DG10Djo9M2aPxoAuajuY/BGo2vhMo/EIRmXigqf0Eamn4n/O5x
iEQzD03/gSg0/YlofGc089DjRwZNPhDNPnf86tHD2yELTb8jmvoIND5a+mhA
948RGj8AjR+Hxg9D45uimY8WHujxxWBAQF4EzTwvBwB1JTmw
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQFKDmBqQqUDCp/BEpWfkIkmr4XGN0PlN3ij8h3C
0dSjyR8oQ5NnQDPPAc09eWjyKWj6XdH4RmjqXdDsj0aT90DTL4PKx/CPBSp/
QTqa+go09RoEzI9Ec48fmnoFVP6HUjT1vmjmJaLJJ6GZp4cm74Mm747GV0Pl
H8hyAABO5y7W
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBWIQDQEqDmCqIcABhe8Qj8pvyETlHwhFk3fHz2cIRpP3
RzMvCs1+NPUMjmh8D1T+g3Q082PR+H5ofHTz1dDsRwsPBgk0viEaX4aAels0
PjrtieafNDR5ATT3haDyD6Sg8hvQwqvBGc08B1R+QDV++wzK0MxLReOjuacB
Lf0woIXngTA0eXT3eqHx0eKTwRVNPsYBAG/qOf4=
          "]]}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"# of times bound\"", TraditionalForm], 
        FormBox["\"How long? (# of \[Delta]t bound)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Large,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox[
        "\"number of times ligand bound vs how long it remained bound\"", {
         Bold, FontSize -> 12, 
          GrayLevel[0]}, StripOnInput -> False], TraditionalForm],
      PlotRange->{{0, 10.}, {0, 408.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {409.5, -189.86004134396768`}, 
     ImageScaled[{0.5, 0.5}], {576, 355.9875775199394}], InsetBox[
     GraphicsBox[{{}, {InsetBox[
         GraphicsBox[{
           {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
            EdgeForm[{Opacity[0.616], Thickness[Small]}], {}, 
            {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
             EdgeForm[{Opacity[0.616], Thickness[Small]}], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{0., 0}, {50., 144}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{37.71214944055575, 
                   63.39213769920856}, {-198.0236946373933, \
-16.614414892908712`}}]},
                StatusArea[#, 144]& ,
                TagBoxNote->"144"],
               StyleBox["144", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[144, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{50., 0}, {100., 93}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{62.89213769920856, 
                   88.57212595786137}, {-133.95165806122168`, \
-16.614414892908712`}}]},
                StatusArea[#, 93]& ,
                TagBoxNote->"93"],
               StyleBox["93", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[93, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{100., 0}, {150., 54}, "RoundingRadius" -> 0]},
                  ImageSizeCache->{{88.07212595786137, 
                   113.7521142165142}, {-84.95539479709043, \
-16.614414892908712`}}]},
                StatusArea[#, 54]& ,
                TagBoxNote->"54"],
               StyleBox["54", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[54, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{150., 0}, {200., 38}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{113.2521142165142, 
                   138.932102475167}, {-64.85436371436992, \
-16.614414892908712`}}]},
                StatusArea[#, 38]& ,
                TagBoxNote->"38"],
               StyleBox["38", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[38, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{200., 0}, {250., 25}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{138.432102475167, 
                   164.1120907338198}, {-48.52227595965951, \
-16.614414892908712`}}]},
                StatusArea[#, 25]& ,
                TagBoxNote->"25"],
               StyleBox["25", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[25, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{250., 0}, {300., 5}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{163.6120907338198, 
                   189.29207899247263`}, {-23.395987106258872`, \
-16.614414892908712`}}]},
                StatusArea[#, 5]& ,
                TagBoxNote->"5"],
               StyleBox["5", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[5, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{300., 0}, {350., 7}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{188.79207899247263`, 
                   214.47206725112545`}, {-25.908615991598936`, \
-16.614414892908712`}}]},
                StatusArea[#, 7]& ,
                TagBoxNote->"7"],
               StyleBox["7", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[7, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{350., 0}, {400., 7}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{213.97206725112545`, 
                   239.65205550977822`}, {-25.908615991598936`, \
-16.614414892908712`}}]},
                StatusArea[#, 7]& ,
                TagBoxNote->"7"],
               StyleBox["7", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[7, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{400., 0}, {450., 6}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{239.15205550977822`, 
                   264.8320437684311}, {-24.652301548928904`, \
-16.614414892908712`}}]},
                StatusArea[#, 6]& ,
                TagBoxNote->"6"],
               StyleBox["6", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[6, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{450., 0}, {500., 2}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{264.3320437684311, 
                   290.0120320270839}, {-19.627043778248776`, \
-16.614414892908712`}}]},
                StatusArea[#, 2]& ,
                TagBoxNote->"2"],
               StyleBox["2", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[2, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{550., 0}, {600., 2}, "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{314.69202028573665`, 
                   340.37200854438953`}, {-19.627043778248776`, \
-16.614414892908712`}}]},
                StatusArea[#, 2]& ,
                TagBoxNote->"2"],
               StyleBox["2", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[2, {}], 
               "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{-12., 0},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->Medium,
          PlotLabel->FormBox[
            StyleBox["\"counts of stay\"", {Bold, FontSize -> 12, 
              GrayLevel[0]}, StripOnInput -> False], TraditionalForm],
          PlotRange->{{0., 600.}, {All, All}},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
         ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
         GraphicsBox[{
           {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
            EdgeForm[{Opacity[0.616], Thickness[Small]}], {}, 
            {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
             EdgeForm[{Opacity[0.616], Thickness[Small]}], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{0., 0}, {50., 0.37597911227154046`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{36.21214944055572, 
                   61.89213769920855}, {-198.0236946373933, \
-16.614414892908712`}}]},
                StatusArea[#, 0.37597911227154046`]& ,
                TagBoxNote->"0.37597911227154046"],
               StyleBox["0.37597911227154046`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.37597911227154046`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{50., 0}, {100., 0.24281984334203655`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{61.39213769920855, 
                   87.07212595786132}, {-133.95165806122168`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.24281984334203655`]& ,
                TagBoxNote->"0.24281984334203655"],
               StyleBox["0.24281984334203655`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.24281984334203655`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{100., 0}, {150., 0.1409921671018277}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{86.57212595786132, 
                   112.25211421651409`}, {-84.95539479709043, \
-16.614414892908712`}}]},
                StatusArea[#, 0.1409921671018277]& ,
                TagBoxNote->"0.1409921671018277"],
               StyleBox["0.1409921671018277`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.1409921671018277, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   RectangleBox[{150., 0}, {200., 0.09921671018276762}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{111.75211421651409`, 
                   137.43210247516697`}, {-64.85436371436992, \
-16.614414892908712`}}]},
                StatusArea[#, 0.09921671018276762]& ,
                TagBoxNote->"0.09921671018276762"],
               StyleBox["0.09921671018276762`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.09921671018276762, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{200., 0}, {250., 0.06527415143603134}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{136.93210247516697`, 
                   162.61209073381974`}, {-48.52227595965951, \
-16.614414892908712`}}]},
                StatusArea[#, 0.06527415143603134]& ,
                TagBoxNote->"0.06527415143603134"],
               StyleBox["0.06527415143603134`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.06527415143603134, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{250., 0}, {300., 0.013054830287206266`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{162.11209073381974`, 
                   187.7920789924725}, {-23.395987106258872`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.013054830287206266`]& ,
                TagBoxNote->"0.013054830287206266"],
               StyleBox["0.013054830287206266`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.013054830287206266`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{300., 0}, {350., 0.018276762402088774`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{187.2920789924725, 
                   212.9720672511254}, {-25.908615991598936`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.018276762402088774`]& ,
                TagBoxNote->"0.018276762402088774"],
               StyleBox["0.018276762402088774`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.018276762402088774`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{350., 0}, {400., 0.018276762402088774`}, 
                    "RoundingRadius" -> 0]},
                  ImageSizeCache->{{212.4720672511254, 
                   238.15205550977817`}, {-25.908615991598936`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.018276762402088774`]& ,
                TagBoxNote->"0.018276762402088774"],
               StyleBox["0.018276762402088774`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.018276762402088774`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{400., 0}, {450., 0.015665796344647518`}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{237.65205550977817`, 
                   263.33204376843094`}, {-24.652301548928904`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.015665796344647518`]& ,
                TagBoxNote->"0.015665796344647518"],
               StyleBox["0.015665796344647518`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.015665796344647518`, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{450., 0}, {500., 0.005221932114882507}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{262.83204376843094`, 
                   
                   288.5120320270838}, {-19.627043778248776`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.005221932114882507]& ,
                TagBoxNote->"0.005221932114882507"],
               StyleBox["0.005221932114882507`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.005221932114882507, {}], "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               TagBox[
                {XYZColor[0, 0, 5], Opacity[0.2], 
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   RectangleBox[{550., 0}, {600., 0.005221932114882507}, 
                    "RoundingRadius" -> 0]},
                  
                  ImageSizeCache->{{313.1920202857366, 
                   338.87200854438936`}, {-19.627043778248776`, \
-16.614414892908712`}}]},
                StatusArea[#, 0.005221932114882507]& ,
                TagBoxNote->"0.005221932114882507"],
               StyleBox["0.005221932114882507`", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[0.005221932114882507, {}], 
               "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
          AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
          Axes->{True, True},
          AxesLabel->{None, None},
          AxesOrigin->{-12., 0},
          FrameLabel->{{None, None}, {None, None}},
          FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
          GridLines->{None, None},
          GridLinesStyle->Directive[
            GrayLevel[0.5, 0.4]],
          ImageSize->Medium,
          PlotLabel->FormBox[
            StyleBox["\"probability of stay\"", {Bold, FontSize -> 12, 
              GrayLevel[0]}, StripOnInput -> False], TraditionalForm],
          PlotRange->{{0., 600.}, {All, All}},
          PlotRangePadding->{{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}},
          Ticks->{Automatic, Automatic}], {576., -116.80842387373012`}, 
         ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}]}, {}},
      ContentSelectable->True,
      ImageSize->{780., 245.61684774746024`},
      PlotRangePadding->{6, 5}], {409.5, -569.5801240319031}, 
     ImageScaled[{0.5, 0.5}], {780., 245.61684774746024`}]}, {}},
  ContentSelectable->True,
  ImageSize->{831., 771.4401653758707},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.694385149280899*^9, 3.694385193827309*^9, 
  3.6943852643119855`*^9, 3.6943859501091146`*^9, 3.694789613415718*^9, 
  3.6948618111039066`*^9, 3.6948621827979836`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MSD", "[", "tagged_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"parnum", "=", "10"}], ",", 
       RowBox[{"timesteps", "=", "500"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"transposedlist", ",", "length"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"transposedlist", "=", 
         RowBox[{"Transpose", "@", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Thread", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"tagged", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"RotateLeft", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"tagged", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "i"}], 
                 "]"}]}], "}"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{"i", "+", "1"}], ")"}]}]}], "]"}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "parnum"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "timesteps"}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"length", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dimensions", "/@", "transposedlist"}], ")"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Mean", "/@", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"listreshape", ",", "lr"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"listreshape", "=", 
               RowBox[{"ArrayReshape", "[", 
                RowBox[{
                 RowBox[{"transposedlist", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"parnum", "*", 
                    RowBox[{"length", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "2", ",", "2"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"lr", "=", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{"Function", "[", 
                  RowBox[{"x", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Power", "[", 
                    RowBox[{"#", ",", "2"}], "]"}], "&"}], "@", 
                    RowBox[{"(", 
                    RowBox[{"Norm", "@", 
                    RowBox[{"(", 
                    RowBox[{"Subtract", "@@", 
                    RowBox[{"Reverse", "@", "x"}]}], ")"}]}], ")"}]}]}], 
                  "]"}], ",", 
                 RowBox[{"listreshape", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "All"}], "]"}], "]"}]}], "]"}]}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "timesteps"}], "}"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6930096040235357`*^9, 3.693009643150816*^9}, {
   3.6930097569656754`*^9, 3.693009809481352*^9}, {3.6930098540655823`*^9, 
   3.6930098604495587`*^9}, {3.693009921881322*^9, 3.6930099314123244`*^9}, {
   3.6930099760062704`*^9, 3.6930100153818283`*^9}, {3.693010084209181*^9, 
   3.6930101499269266`*^9}, {3.693010224561942*^9, 3.693010235295597*^9}, {
   3.6930105860953035`*^9, 3.693010790447581*^9}, {3.693010871795672*^9, 
   3.6930108720645533`*^9}, {3.6930109035574636`*^9, 
   3.6930109044752035`*^9}, {3.693010935251322*^9, 3.6930109640126143`*^9}, {
   3.6930109967236414`*^9, 3.6930110211919036`*^9}, {3.693011063505679*^9, 
   3.693011263373604*^9}, {3.693011325391219*^9, 3.6930113608444242`*^9}, {
   3.6930116852597923`*^9, 3.693011708453594*^9}, 3.6930117759324512`*^9, {
   3.6930959786927366`*^9, 3.693095979791855*^9}, {3.693096094186618*^9, 
   3.693096101804694*^9}, 3.693096192123958*^9, {3.6930963377654934`*^9, 
   3.6930963386339097`*^9}, {3.6930998379174967`*^9, 
   3.6930998808890114`*^9}, {3.6931000953777943`*^9, 
   3.6931001023951015`*^9}, {3.693100141428638*^9, 3.6931001552587767`*^9}, {
   3.6931002487722464`*^9, 3.6931002493005075`*^9}, {3.693100291770465*^9, 
   3.693100379475423*^9}, {3.693100453636366*^9, 3.6931004635088987`*^9}, {
   3.693100704238857*^9, 3.6931007047304487`*^9}, {3.69310145240107*^9, 
   3.6931014525885057`*^9}, {3.6931022951174707`*^9, 3.69310229580369*^9}, {
   3.693236746731045*^9, 3.6932367468312407`*^9}, {3.693242696929364*^9, 
   3.693242701060197*^9}, 3.6932442011639013`*^9, {3.6932456578522406`*^9, 
   3.6932456621140924`*^9}, {3.693245702140744*^9, 3.6932457318795033`*^9}, {
   3.6932470117142324`*^9, 3.6932470331009955`*^9}, {3.693247091688962*^9, 
   3.6932471353006024`*^9}, {3.693247863997639*^9, 3.6932478842929125`*^9}, {
   3.6932490917333093`*^9, 3.693249216513241*^9}, {3.6932508859589233`*^9, 
   3.6932508861745424`*^9}, {3.6932509328150787`*^9, 3.693250936513275*^9}, {
   3.694385320726934*^9, 3.6943853761936145`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dr", "=", 
   RowBox[{"MSD", "[", "taggednodal", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.694385388911417*^9, 3.6943854053715296`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"dr", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"XYZColor", "[", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0.2"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.693249221934126*^9, 3.6932492395008497`*^9}, {
  3.6934059441793065`*^9, 3.6934059559809575`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {XYZColor[0, 0, 1], PointSize[0.007333333333333334], AbsoluteThickness[
     1.6], Opacity[0.2], PointBox[CompressedData["
1:eJw113tczPn/BfCPy5YUchfJuBTbiiIhlw6KojTRXZfpfq9pamZqmhlDWhst
ueYSO+63pVYuizCsXVmrbxaR65B7i9jknp/fY4/5Zx7PeX1e7/M+j/nr0z86
Y1Zca0EQmloJwv9///dpdNsxpE1A76IXE/kD2otW7Es9+Zluh9kdp/wwqcbU
7T9bInrhkRVLqzrR3aC/FnBvU+dudC9UF+xTmnv2oq1xrO6Td36+NS3CylW/
XjwfKqIHIGvqh7e9EwfQg1D2vrNhdOog2g5brjYZ8lPt6CF4vTF05p7oIbQ9
jJUu97cE29NDMaCo7sYR/6H0MDz0sr02JHgY7YgLLu0nDRvmSDshzevB2BNO
TvQIbP/pzNJNY0fQI3FAKnrxB0bSzpB+423xytOZHoVdW/sqt4pH0S7Yd+rQ
5X+CXejRWP8ktq5P9Gh6DA6f2+trlzqGHovVRdurapVjaVfkvGp4l77AlR4H
88Qttv2XjaPHY01DdtTUjePpCYj7d1Xq9zsm0BORrF4cePeXibQb8re+L/v2
hBsNiFo2nvOKx3/WAesrTZefeUYLk7Dpku2NifJJnE+CSeqoBYUfaWEyKkp7
ebrnT+Z8MmJ+73D7nfkUzqfgvqPfn+Yrad0UiPLnWHtbu3Pujrri+W3XbqV1
7pjgc7RHxlAPzj3wQ4Mhxb2C1nnAkFJi1851KudT0cbPzcTJQOum4uTTcO8r
HtM4n4Yws1s+b/+kddNga/WXz0CxJ+ee6Gy4uPjeZVrniWNtV8WIQ7w494Lt
96/Wvb1F67zg//pMn3tR0zmfjtiSYvfSB7RuOpxNnDW9E2dwPgOVSR77dz6h
dTMgvuaxuiDFm3NvVP5vfbn6Oa3zRtWaQVb1mT6c+2DbyvX3l7+mdT7olSc0
hKpmcj4TQcGHpX+00LqZ8A/4ude9+b6c+6JozjX/pLZizn1xu03sBbtptCBG
eFNog/MiGmJ0H9l3veHC1+fFUKVrl6zq7PefDWLIy9426ANowQ8H5KsO9llL
ww8Lig6+cLxJ6/yw4vWR4002s7jvh3ZFb/YXRtHCLPQzK9jTYxuNWXhRcXbq
5se0bhbM5rzxr/5uNvdnIbbqm1ET0mlhNr7/3DzNs5zGbOze93ixyytaNxuT
vEo+z3f25/5sjOmJ05sUtOCPB6lTN/ofoeGPGTmrHQM/0jp/WDg6+v7mFsB9
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
vKhz+z8hHy7N
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 500.}, {0, 0.008211983794145176}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.694385627530996*^9, 3.694386009262594*^9, 
  3.6947897827936115`*^9, 3.694861960893495*^9, 3.694862351735312*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pr", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"dr", ",", 
    RowBox[{"{", "x", "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.693245363017334*^9, 3.693245368787552*^9}, {
   3.6932454109875765`*^9, 3.6932454110526333`*^9}, {3.693246714195263*^9, 
   3.693246731895787*^9}, {3.6932472087794867`*^9, 3.6932472232271285`*^9}, {
   3.6932505494227667`*^9, 3.6932505522585115`*^9}, {3.6932513787676907`*^9, 
   3.6932513788989105`*^9}, {3.693405997255772*^9, 3.6934060072053204`*^9}, 
   3.6936492795210824`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.00006544466261407735`"}], "+", 
       RowBox[{"0.00001632864100739378`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-0.00006544466261407735, 
     0.00001632864100739378}, {{$CellContext`x}, {1, $CellContext`x}}, {0, 
     0}}, CompressedData["
1:eJztxTENACEURMEPTlCCBySQUGOdAgHAmbhmNnk7pc82ckSk2373bVWSJEmS
JPmfB5/bUow=
    "], CompressedData["
1:eJwNVWk4FAoAVIpEhw6lXOWopygRpTLkFrnWmWvtunYde+/ay+aolJeUUlE5
uxQVKiXk1bMdvE5RIVc5kg6khOfPzPfNzDffN79mVWicR9gMGRmZ4Wm4sFbW
a0XakMVcrWMl0TVTFp7zrQ9YPZNH6P7KY+nSBcht9urMU16CxpQSrqLDctxt
mXBOSlJD5vHbz5/4a4FpNz62InI1Sn8r15pF66DgzXBtUrQeRs767y4OXYsP
VabdBb76WJ3W8q6SsB4fHXWb1/oaosF0rpWh4UbEOPZsrTYywvlzD9Lztm5C
OU1r6F9LY9BmOyt9dzDBpUJ1bqHbZpTcv/nqs68psvvILStDzXDr0VVXvegt
OJF2XtrE3Qre94FfscnmUIws0F2VsQ0nB1hEu7PbEfbjePS+CztAER7y7rhu
gaTC36V/VQNak2cfOYZbIrtK/uiDQUvkvdR9Z8G2glz05uTUP1Yoy1nuYJO0
E6SH89p+KVqje6P7Y8VMa2gl7VFzVrNBy5HEWacKbbDD5Y5K3HpbHBiopdqU
2aKWmqU3x9wOsu6QM6q1Q01/oPNrW3sEKLS6jD22h67qUxdtNwco1z4/1PnK
AXdnHSe5+TlCd9/302OtjiCMPFjZSXQCOeuITU6PE0zkTEQrInehKsr2xsW+
XXBrtj2RQnVG1X/Z14RfnCE9qaPaRXdBUWZ299ERFywXyAz483fDx/cW7d/J
3SB4XVnemeiKtD3NhKhZbmiTJTfo2bshcNh/wOSgG5Yaq2fXNriBHys+fFzZ
HezSsYFcL3eUs49XrDzljuS0iqGN791xbKTy3rCGB+ak/byRSvSApkJKsUqR
B4bK6u3yez2gsOcnoXGdJ8jS2Zt3xHpi39SovcM1T1wu6T1k+t0TVo5ZU4km
BGxZZlmXxyGgJ9ruLKGSgF28Exu9/xCgtHGj6z/wQun8C3sJSV7oF3DTifVe
MFu16CtL0RsrR59e3uLqDY+cYpmso95YkLwjcE2TNzq6zJxfq/pg1KT7T1Gg
D9685Kba5PkgOkb77IduH+yq9iyasdYXhOayZe8pvjD1OS+ZuOILc0oV99qQ
LxI54vfbN/nBamG4mjzbD0sXZy9h3PKDrxbtUcUvP6iEJK0z2O6Pa3FeL4LE
/ni/erysrNYf+o1dnoqye6BmTvr+02YPimX67Fj79uDg6BIvsXQPXNaoqSbP
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
    "], CompressedData["
1:eJxtzTcO6EQUBdAHFaULCgoKgxBCCCGTMww5g/nkPOQMJmf+LMFLmCV4CbME
L2GW4IIFIETlI17zdHR1da96/5sLH10aEX9fEvHv/++OB/7/Rzr7Mjzgy/EV
+Eo84qvxNfhafB2+Ht+Ab8QTvgnfjG/Bt+Lb8O34Dnwnvgvfje/B9+L78P34
AZzOLjgeJMfxEDmOh8lxPEKO41FyHI+R43icHMcT5DieJMfxFDmOp8lxPEOO
41lyHM+R43ieHMd8dsIFNxwv0McFNxwX6OOCG44X6eOCG46X6OOCG46X6eOC
G45X6OOCG45X6eOCG47X6OOCG47X6eOCG4436OOCG4436eOCG4636OOCG463
6eOCG4536OOCG4536eOCG4589ogTzrjgihvuON5jHyecccEVN9xxvM8+Tjjj
gituuOP4gH2ccMYFV9xwx/Eh+zjhjAuuuOGO4yP2ccIZF1xxwx3Hx+zjhDMu
uOKGO45P2McJZ1xwxQ13HJ+yjxPOuOCKG+44PmMfJ5xxwRU33HF8zj5OOOOC
K2644/iCfZxwxgVX3HDH8SX7OOGMC6644Y7jK/ZxwhkXXHHDHcfX7OOEMy64
4oY7jm/YxwlnXHDFDXccy9kDHvGEE55xxgsueMUVb7jhHXd84Pj27AGPeMIJ
zzjjBRe84oo33PCOOz5wfHf2gEc84YRnnPGCC15xxRtueMcdHzi+P3vAI55w
wjPOeMEFr7jiDTe8444PHD+cPeARTzjhGWe84IJXXPGGG95xxweOH88e8Ign
nPCMM15wwSuueMMN77jjA8dPZw94xBNOeMYZL7jgFVe84YZ33PGB4+ezBzzi
CSc844wXXPCKK95wwzvu+MDxy9kDHvGEE55xxgsueMUVb7jhHXd84Pj17AGP
eMIJzzjjBRe84oo33PCOOz5w/Hb2gEc84YRnnPGCC15xxRtueMcdHzh+P3vA
I55wwjPOeMEFr7jiDTe8444PHH+cPeARTzjhGWe84IJXXPGGG95xxweOP88e
8IgnnPCMM15wwSuueMMN77jjA8dfZw94xBNOeMYZL7jgFVe84YZ33PGB4+LZ
Ax7xhNPF9A8n92Nl
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.69324537853836*^9, {3.6932454114521837`*^9, 3.693245432616923*^9}, 
   3.6932466476399994`*^9, 3.69324673217437*^9, 3.6932497598748903`*^9, 
   3.6932501081315327`*^9, 3.6932505528431616`*^9, 3.6932513429650908`*^9, {
   3.693251391310832*^9, 3.693251392895627*^9}, 3.6934057545493813`*^9, {
   3.6934059994777937`*^9, 3.6934060075898595`*^9}, 3.6935018980404444`*^9, 
   3.693503338626378*^9, 3.6936492537943716`*^9, {3.693649429155443*^9, 
   3.6936494530059795`*^9}, 3.6936499907420797`*^9, 3.693650764188283*^9, 
   3.6936534919118423`*^9, 3.694385654091667*^9, 3.694789782873784*^9, 
   3.6948619609615154`*^9, 3.69486235176033*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gradr", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"First", "@", "pr"}], ")"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.69309787415283*^9, 3.6930979585361*^9}, {
  3.693104526613788*^9, 3.6931045272602053`*^9}, {3.6932467046833253`*^9, 
  3.693246752838655*^9}, {3.6932472334580173`*^9, 3.6932472466955185`*^9}}],

Cell[BoxData["0.00001632864100739378`"], "Output",
 CellChangeTimes->{
  3.69340575456501*^9, {3.6934060015929003`*^9, 3.693406009220516*^9}, 
   3.6935018980469494`*^9, 3.6935033386353855`*^9, 3.6936492537943716`*^9, 
   3.6936494551203284`*^9, 3.6936499907420797`*^9, 3.693650764203909*^9, 
   3.6936534919118423`*^9, 3.69438565734227*^9, 3.694789782873784*^9, 
   3.694861960962517*^9, 3.694862351767335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<\!\(\*SubscriptBox[\(D\), \(simulated\)]\) with 10 particles \
for 500 \[Delta]t steps: \>\"", " ", "<>", " ", 
  RowBox[{"ToString", "@", 
   RowBox[{"(", 
    RowBox[{"gradr", "/", 
     RowBox[{"(", 
      RowBox[{"4", "*", " ", "1", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "6"}]}]}], ")"}]}], ")"}]}], " ", "<>", 
  "\"\< um^2/s\>\"", " ", "<>", " ", 
  "\"\<\\nfree \!\(\*SubscriptBox[\(D\), \(coefficient\)]\) assumed: \>\"", 
  " ", "<>", " ", 
  RowBox[{"ToString", "@", "60"}], " ", "<>", "\"\< um^2/s\>\""}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQbfhgjytby2vHqA/7vEB0lpFsAIhW0taOANEd71ni
QbSm1rk0EK1zZmIWiPYznJEPojm4AmtBtIldNpiuuPkkiR1IG3XuTAbRZpqK
vRxA+tTlzKkguipJOZoTSFcGeoJpt4P8fSDaaLssmO7z1doHot9KJD0E0QWT
rpX5AmmuozfBtJy9TzWIvlzoD6ZnyRWL+wFpj9IyMD1nupYtiH7mrQumL2gc
lPQH0g3f70qB6P2vXDVA9LEdS8D0skmGSSBabPuDNBD9xql5bgCQzm6fOQ9E
b/koeBJE+22dfRZE//sw+0kQkJ7KtRRMAwD/FJZB
  "]],

Cell[BoxData["\<\"\\!\\(\\*SubscriptBox[\\(D\\), \\(simulated\\)]\\) with 10 \
particles for 500 \[Delta]t steps: 4.08216 um^2/s\\nfree \
\\!\\(\\*SubscriptBox[\\(D\\), \\(coefficient\\)]\\) assumed: 60 \
um^2/s\"\>"], "Output",
 CellChangeTimes->{{3.6932467749848056`*^9, 3.693246797963235*^9}, {
   3.6932497653497458`*^9, 3.693249781344422*^9}, {3.693250125811946*^9, 
   3.693250157534745*^9}, 3.693250557558091*^9, 3.6932513429807158`*^9, 
   3.693251397431863*^9, 3.6932544386414866`*^9, 3.693405754580637*^9, {
   3.6934060035230317`*^9, 3.693406011850498*^9}, 3.6935018980469494`*^9, 
   3.6935033386433907`*^9, 3.6936492537943716`*^9, 3.693649458673196*^9, 
   3.6936499907420797`*^9, 3.693650764203909*^9, 3.6936534919274673`*^9, 
   3.6943856610110817`*^9, 3.6947897828893967`*^9, 3.694861960962517*^9, 
   3.6948623517743397`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"drlefty", "=", 
   RowBox[{"MSD", "[", "taggedlefty", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.694385388911417*^9, 3.6943854053715296`*^9}, {
  3.6943856967094064`*^9, 3.6943856983776217`*^9}, {3.694386026230198*^9, 
  3.6943860275147457`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"drlefty", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Darker", "@", "Green"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.693249221934126*^9, 3.6932492395008497`*^9}, {
  3.6934059441793065`*^9, 3.6934059559809575`*^9}, {3.6943856821591597`*^9, 
  3.6943857090444355`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
BT50WERGCu7fTa/KcC60+j8dYG++
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 500.}, {0, 0.023748468288395806`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.694385627530996*^9, 3.6943858695520287`*^9, 
  3.694385903901516*^9, 3.694386210103693*^9, 3.694789983425607*^9, 
  3.6948621426139646`*^9, 3.6948625427434697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pr", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"drlefty", ",", 
    RowBox[{"{", "x", "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.693245363017334*^9, 3.693245368787552*^9}, {
   3.6932454109875765`*^9, 3.6932454110526333`*^9}, {3.693246714195263*^9, 
   3.693246731895787*^9}, {3.6932472087794867`*^9, 3.6932472232271285`*^9}, {
   3.6932505494227667`*^9, 3.6932505522585115`*^9}, {3.6932513787676907`*^9, 
   3.6932513788989105`*^9}, {3.693405997255772*^9, 3.6934060072053204`*^9}, 
   3.6936492795210824`*^9, {3.6943859091725826`*^9, 3.6943859103252783`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.00047015755817624564`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.000047415199010838434`", " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {0.00047015755817624564`, 
     0.000047415199010838434`}, {{$CellContext`x}, {1, $CellContext`x}}, {0, 
     0}}, CompressedData["
1:eJztxTENACEURMEPTlCCBySQUGOdAgHAmbhmNnk7pc82ckSk2373bVWSJEmS
JPmfB5/bUow=
    "], CompressedData["
1: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
    "], CompressedData["
1:eJxtzTcO6EQUBdAHFaULCgoKgxBCCCGTMww5g/nkPOQMJmf+LMFLmCV4CbME
L2GW4IIFIETlI17zdHR1da96/5sLH10aEX9fEvHv/++OB/7/Rzr7Mjzgy/EV
+Eo84qvxNfhafB2+Ht+Ab8QTvgnfjG/Bt+Lb8O34Dnwnvgvfje/B9+L78P34
AZzOLjgeJMfxEDmOh8lxPEKO41FyHI+R43icHMcT5DieJMfxFDmOp8lxPEOO
41lyHM+R43ieHMd8dsIFNxwv0McFNxwX6OOCG44X6eOCG46X6OOCG46X6eOC
G45X6OOCG45X6eOCG47X6OOCG47X6eOCG4436OOCG4436eOCG4636OOCG463
6eOCG4536OOCG4536eOCG4589ogTzrjgihvuON5jHyecccEVN9xxvM8+Tjjj
gituuOP4gH2ccMYFV9xwx/Eh+zjhjAuuuOGO4yP2ccIZF1xxwx3Hx+zjhDMu
uOKGO45P2McJZ1xwxQ13HJ+yjxPOuOCKG+44PmMfJ5xxwRU33HF8zj5OOOOC
K2644/iCfZxwxgVX3HDH8SX7OOGMC6644Y7jK/ZxwhkXXHHDHcfX7OOEMy64
4oY7jm/YxwlnXHDFDXccy9kDHvGEE55xxgsueMUVb7jhHXd84Pj27AGPeMIJ
zzjjBRe84oo33PCOOz5wfHf2gEc84YRnnPGCC15xxRtueMcdHzi+P3vAI55w
wjPOeMEFr7jiDTe8444PHD+cPeARTzjhGWe84IJXXPGGG95xxweOH88e8Ign
nPCMM15wwSuueMMN77jjA8dPZw94xBNOeMYZL7jgFVe84YZ33PGB4+ezBzzi
CSc844wXXPCKK95wwzvu+MDxy9kDHvGEE55xxgsueMUVb7jhHXd84Pj17AGP
eMIJzzjjBRe84oo33PCOOz5w/Hb2gEc84YRnnPGCC15xxRtueMcdHzh+P3vA
I55wwjPOeMEFr7jiDTe8444PHH+cPeARTzjhGWe84IJXXPGGG95xxweOP88e
8IgnnPCMM15wwSuueMMN77jjA8dfZw94xBNOeMYZL7jgFVe84YZ33PGB4+LZ
Ax7xhNPF9A8n92Nl
    "], 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.69324537853836*^9, {3.6932454114521837`*^9, 3.693245432616923*^9}, 
   3.6932466476399994`*^9, 3.69324673217437*^9, 3.6932497598748903`*^9, 
   3.6932501081315327`*^9, 3.6932505528431616`*^9, 3.6932513429650908`*^9, {
   3.693251391310832*^9, 3.693251392895627*^9}, 3.6934057545493813`*^9, {
   3.6934059994777937`*^9, 3.6934060075898595`*^9}, 3.6935018980404444`*^9, 
   3.693503338626378*^9, 3.6936492537943716`*^9, {3.693649429155443*^9, 
   3.6936494530059795`*^9}, 3.6936499907420797`*^9, 3.693650764188283*^9, 
   3.6936534919118423`*^9, 3.694385654091667*^9, {3.694385881820684*^9, 
   3.6943859113097305`*^9}, 3.6943862101354218`*^9, 3.6947899834416037`*^9, 
   3.6948621426295996`*^9, 3.694862542754979*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gradr", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"First", "@", "pr"}], ")"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.69309787415283*^9, 3.6930979585361*^9}, {
  3.693104526613788*^9, 3.6931045272602053`*^9}, {3.6932467046833253`*^9, 
  3.693246752838655*^9}, {3.6932472334580173`*^9, 3.6932472466955185`*^9}}],

Cell[BoxData["0.000047415199010838434`"], "Output",
 CellChangeTimes->{
  3.69340575456501*^9, {3.6934060015929003`*^9, 3.693406009220516*^9}, 
   3.6935018980469494`*^9, 3.6935033386353855`*^9, 3.6936492537943716`*^9, 
   3.6936494551203284`*^9, 3.6936499907420797`*^9, 3.693650764203909*^9, 
   3.6936534919118423`*^9, 3.69438565734227*^9, 3.6943859222030306`*^9, 
   3.694386210166656*^9, 3.6947899834536066`*^9, 3.6948621426452136`*^9, 
   3.6948625427619843`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<\!\(\*SubscriptBox[\(D\), \(simulated\)]\) with 10 particles \
for 500 \[Delta]t steps: \>\"", " ", "<>", " ", 
  RowBox[{"ToString", "@", 
   RowBox[{"(", 
    RowBox[{"gradr", "/", 
     RowBox[{"(", 
      RowBox[{"4", "*", " ", "1", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "6"}]}]}], ")"}]}], ")"}]}], " ", "<>", 
  "\"\< um^2/s\>\"", " ", "<>", " ", 
  "\"\<\\nfree \!\(\*SubscriptBox[\(D\), \(coefficient\)]\) assumed: \>\"", 
  " ", "<>", " ", 
  RowBox[{"ToString", "@", "60"}], " ", "<>", "\"\< um^2/s\>\""}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQbfhgjytby2vHqA/7vEB0lpFsAIhW0taOANEd71ni
QbSm1rk0EK1zZmIWiPYznJEPojm4AmtBtIldNpiuuPkkiR1IG3XuTAbRZpqK
vRxA+tTlzKkguipJOZoTSFcGeoJpt4P8fSDaaLssmO7z1doHot9KJD0E0QWT
rpX5AmmuozfBtJy9TzWIvlzoD6ZnyRWL+wFpj9IyMD1nupYtiH7mrQumL2gc
lPQH0g3f70qB6P2vXDVA9LEdS8D0skmGSSBabPuDNBD9xql5bgCQzm6fOQ9E
b/koeBJE+22dfRZE//sw+0kQkJ7KtRRMAwD/FJZB
  "]],

Cell[BoxData["\<\"\\!\\(\\*SubscriptBox[\\(D\\), \\(simulated\\)]\\) with 10 \
particles for 500 \[Delta]t steps: 11.8538 um^2/s\\nfree \
\\!\\(\\*SubscriptBox[\\(D\\), \\(coefficient\\)]\\) assumed: 60 \
um^2/s\"\>"], "Output",
 CellChangeTimes->{{3.6932467749848056`*^9, 3.693246797963235*^9}, {
   3.6932497653497458`*^9, 3.693249781344422*^9}, {3.693250125811946*^9, 
   3.693250157534745*^9}, 3.693250557558091*^9, 3.6932513429807158`*^9, 
   3.693251397431863*^9, 3.6932544386414866`*^9, 3.693405754580637*^9, {
   3.6934060035230317`*^9, 3.693406011850498*^9}, 3.6935018980469494`*^9, 
   3.6935033386433907`*^9, 3.6936492537943716`*^9, 3.693649458673196*^9, 
   3.6936499907420797`*^9, 3.693650764203909*^9, 3.6936534919274673`*^9, 
   3.6943856610110817`*^9, 3.694385937004234*^9, 3.6943862102044554`*^9, 
   3.6947899834656177`*^9, 3.6948621426452136`*^9, 3.6948625427699904`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 817},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 108, 1, 70, "Section"],
Cell[691, 25, 186, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[902, 33, 1023, 25, 72, "Input"],
Cell[1928, 60, 2669, 37, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4634, 102, 692, 17, 31, "Input"],
Cell[5329, 121, 3132, 51, 23, "Print"]
}, Open  ]],
Cell[8476, 175, 374, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[8875, 186, 1078, 30, 52, "Input"],
Cell[9956, 218, 3222, 54, 23, "Print"]
}, Open  ]],
Cell[13193, 275, 278, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[13496, 285, 1360, 36, 92, "Input"],
Cell[14859, 323, 3011, 49, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17907, 377, 1289, 36, 92, "Input"],
Cell[19199, 415, 3072, 50, 23, "Print"]
}, Open  ]],
Cell[22286, 468, 264, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[22575, 477, 991, 23, 31, "Input"],
Cell[23569, 502, 3081, 50, 23, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26687, 557, 898, 22, 31, "Input"],
Cell[27588, 581, 3115, 50, 23, "Print"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[30752, 637, 105, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[30882, 642, 107, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[31014, 647, 767, 15, 47, "Input"],
Cell[31784, 664, 2812, 37, 31, "Output"]
}, Open  ]],
Cell[34611, 704, 1790, 39, 108, "Input"],
Cell[36404, 745, 514, 10, 47, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36955, 760, 281, 3, 49, "Subsection"],
Cell[37239, 765, 3457, 79, 188, "Input"],
Cell[40699, 846, 5541, 110, 268, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46277, 961, 387, 5, 49, "Subsection"],
Cell[46667, 968, 5939, 128, 268, "Input"],
Cell[52609, 1098, 3255, 81, 248, "Input"],
Cell[55867, 1181, 1578, 41, 128, "Input"],
Cell[57448, 1224, 3729, 95, 188, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61214, 1324, 417, 5, 49, "Subsection"],
Cell[61634, 1331, 1468, 26, 88, "Input"],
Cell[CellGroupData[{
Cell[63127, 1361, 277, 8, 31, "Input"],
Cell[63407, 1371, 1418, 20, 31, "Output"]
}, Open  ]],
Cell[64840, 1394, 11334, 215, 328, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76223, 1615, 92, 1, 70, "Section"],
Cell[76318, 1618, 10433, 238, 508, "Input"],
Cell[CellGroupData[{
Cell[86776, 1860, 101, 1, 49, "Subsection"],
Cell[86880, 1863, 3285, 62, 108, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90214, 1931, 205, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[90444, 1938, 30374, 580, 1248, "Input"],
Cell[120821, 2520, 3825, 63, 583, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124695, 2589, 178, 2, 70, "Section"],
Cell[124876, 2593, 1514, 38, 128, "Input"],
Cell[CellGroupData[{
Cell[126415, 2635, 464, 12, 47, "Input"],
Cell[126882, 2649, 1942, 55, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128861, 2709, 580, 15, 31, "Input"],
Cell[129444, 2726, 13563, 331, 131, "Output"]
}, Open  ]],
Cell[143022, 3060, 1237, 36, 68, "Input"],
Cell[CellGroupData[{
Cell[144284, 3100, 1496, 34, 47, "Input"],
Cell[145783, 3136, 81081, 1434, 594, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226901, 4575, 1329, 30, 108, "Input"],
Cell[228233, 4607, 232318, 3934, 581, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[460600, 8547, 199, 3, 70, "Section"],
Cell[460802, 8552, 8816, 214, 748, "Input"],
Cell[CellGroupData[{
Cell[469643, 8770, 305, 6, 47, "Input"],
Cell[469951, 8778, 27198, 626, 786, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497186, 9409, 225, 4, 31, "Input"],
Cell[497414, 9415, 28222, 657, 786, "Output"]
}, Open  ]],
Cell[525651, 10075, 5902, 126, 328, "Input"],
Cell[531556, 10203, 177, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[531758, 10211, 329, 7, 31, "Input"],
Cell[532090, 10220, 7995, 143, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540122, 10368, 555, 10, 31, "Input"],
Cell[540680, 10380, 7725, 140, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548442, 10525, 450, 11, 31, "Input"],
Cell[548895, 10538, 411, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549343, 10549, 959, 21, 31, "Input"],
Cell[550305, 10572, 842, 12, 52, "Output"]
}, Open  ]],
Cell[551162, 10587, 286, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[551473, 10597, 336, 7, 31, "Input"],
Cell[551812, 10606, 8105, 146, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559954, 10757, 610, 10, 31, "Input"],
Cell[560567, 10769, 7800, 140, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568404, 10914, 450, 11, 31, "Input"],
Cell[568857, 10927, 468, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569362, 10939, 959, 21, 31, "Input"],
Cell[570324, 10962, 890, 12, 52, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)


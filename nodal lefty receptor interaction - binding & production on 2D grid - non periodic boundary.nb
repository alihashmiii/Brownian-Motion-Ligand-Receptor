(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    242307,       4597]
NotebookOptionsPosition[    239359,       4494]
NotebookOutlinePosition[    239702,       4509]
CellTagsIndexPosition[    239659,       4506]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["supported calculation", "Section",
 CellChangeTimes->{{3.692710048442594*^9, 3.6927100584955626`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"calculating", " ", 
   SubscriptBox["k", "on"]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.692887151137433*^9, 3.6928871575655737`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["k", "off"], "=", "10000"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["k", "d"], " ", "=", " ", 
   RowBox[{"6", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\n", 
 RowBox[{
  SubscriptBox["k", "on"], "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "off"], "/", 
    SubscriptBox["k", "d"]}], " ", "*", " ", "1.7", " ", 
   RowBox[{"10", "^", 
    RowBox[{"-", "9"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.692710073921119*^9, 3.692710107332156*^9}, {
   3.692711023705613*^9, 3.6927110243549013`*^9}, 3.692881473367372*^9, {
   3.694875731157749*^9, 3.6948757312784505`*^9}, {3.694875980893984*^9, 
   3.6948759811129274`*^9}, {3.6948781044668026`*^9, 
   3.6948781283883286`*^9}, {3.694878231969035*^9, 3.6948782340986137`*^9}, {
   3.6948783249394684`*^9, 3.6948783333082476`*^9}, {3.6948788701249046`*^9, 
   3.694878882271979*^9}, {3.694885961533452*^9, 3.6948859642847013`*^9}, {
   3.694886538462638*^9, 3.694886568396744*^9}}],

Cell[BoxData["2.8333333333333335`"], "Output",
 CellChangeTimes->{
  3.6929942254693804`*^9, {3.6929942686869574`*^9, 3.6929942982195425`*^9}, 
   3.6929947141214085`*^9, 3.6929952455870504`*^9, 3.6929953412215004`*^9, 
   3.692995473488533*^9, 3.692995992348239*^9, {3.692996164343705*^9, 
   3.692996193321867*^9}, 3.69299631169238*^9, 3.692996437270002*^9, 
   3.6929964819995456`*^9, 3.692997167164383*^9, 3.6929972007790704`*^9, {
   3.6929973059349055`*^9, 3.6929973273588147`*^9}, 3.692997893898347*^9, 
   3.6929979253059936`*^9, 3.6929985212583165`*^9, 3.6930000500913897`*^9, 
   3.693000277242405*^9, 3.6930060763330493`*^9, {3.6930103159392467`*^9, 
   3.693010341449346*^9}, 3.6930118882790456`*^9, 3.693012818999174*^9, 
   3.693013270191829*^9, 3.693013425059982*^9, 3.6930333546657963`*^9, 
   3.693034310500084*^9, 3.6930932196127434`*^9, 3.693099090533434*^9, 
   3.6930991860983315`*^9, 3.69313221822503*^9, 3.693134105550932*^9, 
   3.693142030809531*^9, 3.6932509377969794`*^9, 3.69340540094311*^9, 
   3.693501421035223*^9, 3.6935028234238544`*^9, 3.693648879797309*^9, 
   3.693649541906487*^9, 3.693650340518631*^9, 3.693653000850402*^9, {
   3.694367770618132*^9, 3.694367805331377*^9}, 3.6943678876780457`*^9, {
   3.6943681763191614`*^9, 3.6943681818561225`*^9}, 3.69436936574749*^9, 
   3.694369502645015*^9, 3.694369975406074*^9, {3.694370325320769*^9, 
   3.6943703323894067`*^9}, 3.694370519178075*^9, {3.694370715940236*^9, 
   3.6943707452955837`*^9}, {3.694370828158185*^9, 3.694370859966648*^9}, {
   3.694371652147362*^9, 3.6943716618085756`*^9}, {3.694371801270335*^9, 
   3.694371851548834*^9}, 3.694371948282657*^9, 3.694371996960949*^9, 
   3.6943720535211377`*^9, 3.6943720961561637`*^9, 3.694372224886566*^9, 
   3.694372264438302*^9, 3.6943722977180586`*^9, 3.694373554862007*^9, 
   3.694373619047101*^9, 3.69437368669514*^9, 3.6943737456228266`*^9, 
   3.694373793526683*^9, 3.694373825450734*^9, {3.6943738749945498`*^9, 
   3.694373905373704*^9}, 3.694374004761176*^9, 3.6943752581847873`*^9, {
   3.6943821278550377`*^9, 3.694382151136492*^9}, 3.6943821939248686`*^9, 
   3.6943822986803436`*^9, 3.694382511802*^9, 3.6947895846789007`*^9, 
   3.6948617840456676`*^9, 3.6948621570201855`*^9, 3.6948757364764357`*^9, 
   3.6948757984745693`*^9, {3.6948759598458033`*^9, 3.6948759818317423`*^9}, {
   3.694878105571041*^9, 3.6948781287720313`*^9}, {3.694878223263674*^9, 
   3.694878240801365*^9}, {3.6948783254314165`*^9, 3.6948783338561573`*^9}, {
   3.6948788711870785`*^9, 3.6948788827720165`*^9}, 3.694880298265092*^9, 
   3.6948859819226503`*^9, {3.694886539760246*^9, 3.694886568897235*^9}, 
   3.694889176225047*^9, 3.6949547306801577`*^9, {3.6949638562111645`*^9, 
   3.694963917785539*^9}, {3.694963952555391*^9, 3.694963960910441*^9}, 
   3.69496401266721*^9, 3.694964075245859*^9, {3.69496420607121*^9, 
   3.6949642129378777`*^9}, 3.694964320355693*^9, 3.694965988045385*^9, {
   3.6949721013909817`*^9, 3.6949721241494493`*^9}, 3.6949722724753485`*^9, 
   3.6949725461879463`*^9, 3.6949728316370025`*^9, 3.694973400647729*^9, {
   3.6949741676759763`*^9, 3.694974189679281*^9}, 3.694974222676967*^9, 
   3.6949742946377764`*^9, 3.694974378162687*^9, 3.6949745715038776`*^9, 
   3.6949753955680885`*^9, 3.6949758452554593`*^9, 3.6949762828716536`*^9, 
   3.6949767289911547`*^9, 3.694977553828264*^9, 3.694978115174549*^9, 
   3.694978229935066*^9, 3.694978606139081*^9, {3.694979109969575*^9, 
   3.6949791433126497`*^9}, 3.694979244608358*^9, 3.694979285670931*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Bold", ",", 
          RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], "]"}], "&"}], 
     "@", "\"\<\!\(\*SubscriptBox[\(K\), \(on\)]\):\>\""}], ",", 
    SubscriptBox["k", "on"], ",", 
    "\"\< ... this is used to compute binding radius\>\""}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.692881771489852*^9, 3.6928817717190914`*^9}, {
  3.692882041584479*^9, 3.692882069698986*^9}, {3.6928821041691637`*^9, 
  3.6928821280101085`*^9}, {3.6928871641331434`*^9, 3.6928871655326643`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(on\\)]\\):\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->16,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "2.8333333333333335`",
    "\[InvisibleSpace]", "\<\" ... this is used to compute binding \
radius\"\>"}],
  SequenceForm[
   Style["\!\(\*SubscriptBox[\(K\), \(on\)]\):", {
     RGBColor[0, 0, 1], Bold, FontSize -> 16}], 2.8333333333333335`, 
   " ... this is used to compute binding radius"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.692882053240155*^9, 3.6928820701341763`*^9}, {
   3.6928821155352573`*^9, 3.6928821233271313`*^9}, 3.692887165795101*^9, 
   3.6929942254708853`*^9, {3.692994268702587*^9, 3.6929942982195425`*^9}, 
   3.692994714137034*^9, 3.6929952455870504`*^9, 3.6929953412371197`*^9, 
   3.692995473488533*^9, 3.692995992363869*^9, {3.69299616435933*^9, 
   3.692996193337508*^9}, 3.6929963117080145`*^9, 3.692996437270002*^9, 
   3.6929964820216784`*^9, 3.6929971671800084`*^9, 3.6929972007790704`*^9, {
   3.692997305950531*^9, 3.6929973273588147`*^9}, 3.6929978939139614`*^9, 
   3.6929979253059936`*^9, 3.692998521280468*^9, 3.6930000500993953`*^9, 
   3.6930002772504063`*^9, 3.6930060763330493`*^9, {3.693010315954856*^9, 
   3.6930103414649715`*^9}, 3.6930118883006964`*^9, 3.6930128190148015`*^9, 
   3.693013270191829*^9, 3.6930134250912333`*^9, 3.693033354680334*^9, 
   3.6930343105131073`*^9, 3.6930932196352606`*^9, 3.6930990905524797`*^9, 
   3.69309918610935*^9, 3.6931322182520485`*^9, 3.6931341055599413`*^9, 
   3.693142030831031*^9, 3.6932509378126044`*^9, 3.693405400979154*^9, 
   3.6935014210508485`*^9, 3.693502823432372*^9, 3.693648879812923*^9, 
   3.693649541906487*^9, 3.693650340518631*^9, 3.693653000850402*^9, {
   3.6943677706337595`*^9, 3.694367805331377*^9}, 3.6943678876780457`*^9, {
   3.6943681763347816`*^9, 3.6943681818717513`*^9}, 3.694369365763115*^9, 
   3.694369502645015*^9, 3.694369975406074*^9, {3.694370325320769*^9, 
   3.6943703323894067`*^9}, 3.694370519178075*^9, {3.694370715940236*^9, 
   3.6943707453112087`*^9}, {3.694370828161691*^9, 3.694370859982274*^9}, {
   3.694371652147362*^9, 3.6943716618241873`*^9}, {3.694371801285982*^9, 
   3.694371851548834*^9}, 3.69437194830281*^9, 3.6943719969765863`*^9, 
   3.694372053536742*^9, 3.6943720961762886`*^9, 3.694372224886566*^9, 
   3.694372264453909*^9, 3.6943722977336903`*^9, 3.694373554862007*^9, 
   3.694373619062725*^9, 3.6943736867107754`*^9, 3.6943737456384497`*^9, 
   3.6943737935423098`*^9, 3.694373825450734*^9, {3.6943738750101748`*^9, 
   3.694373905373704*^9}, 3.6943740047833176`*^9, 3.6943752582004256`*^9, {
   3.694382127870674*^9, 3.694382151136492*^9}, 3.69438219394051*^9, 
   3.694382298688871*^9, 3.6943825118201437`*^9, 3.6947895846945267`*^9, 
   3.6948617840612593`*^9, 3.69486215702769*^9, 3.6948757365004525`*^9, 
   3.694875798482562*^9, 3.694875959851807*^9, 3.694878240809372*^9, 
   3.6949547306886606`*^9, {3.6949638562111645`*^9, 3.694963917785539*^9}, {
   3.694963952555391*^9, 3.694963960910441*^9}, 3.69496401266721*^9, 
   3.694964075261485*^9, {3.694964206086837*^9, 3.694964212940379*^9}, 
   3.6949643203773365`*^9, 3.6949659880610113`*^9, {3.6949721014066167`*^9, 
   3.6949721241604424`*^9}, 3.6949722724753485`*^9, 3.6949725462035713`*^9, 
   3.6949728316424985`*^9, 3.694973400647729*^9, {3.6949741676759763`*^9, 
   3.694974189700932*^9}, 3.6949742226986117`*^9, 3.694974294653386*^9, 
   3.694974378181826*^9, 3.6949745715195026`*^9, 3.6949753955837293`*^9, 
   3.694975845271079*^9, 3.694976282887785*^9, 3.6949767289911547`*^9, 
   3.6949775538479137`*^9, 3.694978115174549*^9, 3.694978229950691*^9, 
   3.6949786061546946`*^9, {3.694979109985216*^9, 3.6949791433285723`*^9}, 
   3.694979244623983*^9, 3.6949792856865735`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "below", " ", "is", " ", "probability", " ", "generated", " ", "for", " ", 
   "a", " ", "1", "st", " ", "order", " ", "reaction"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.692881793139111*^9, 3.6928818036665516`*^9}, {
  3.6928819190874567`*^9, 3.69288191924772*^9}, {3.6928822128565345`*^9, 
  3.6928822259619985`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]t", " ", "=", " ", 
    RowBox[{"1", " ", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"1", " ", "us", " ", "time"}], "-", "step"}], " ", "*)"}]}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}], "]"}], "&"}], "@", 
    "\"\<\!\(\*SubscriptBox[\(P\), \(dissociation\)]\):\>\""}], ",", 
   RowBox[{"1.", " ", "-", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["k", "off"], " ", "\[Delta]t"}], ")"}]}], "]"}]}], ",", 
   "\"\< ... if random number is less than this ligand/receptor complex \
dissociates\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.69288186072154*^9, 3.692882019867095*^9}, {
  3.6928820737404437`*^9, 3.692882074829219*^9}, {3.692882151368919*^9, 
  3.6928821949295187`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(dissociation\\)]\\):\"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->16,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", 
   "0.009950166250831893`", 
   "\[InvisibleSpace]", "\<\" ... if random number is less than this \
ligand/receptor complex dissociates\"\>"}],
  SequenceForm[
   Style["\!\(\*SubscriptBox[\(P\), \(dissociation\)]\):", {
     RGBColor[0, 0, 1], Bold, FontSize -> 16}], 0.009950166250831893, 
   " ... if random number is less than this ligand/receptor complex \
dissociates"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.692881976453435*^9, 3.692882020111357*^9}, 
   3.6928820750010605`*^9, 3.6928821641550355`*^9, 3.692882195635066*^9, 
   3.692994225486988*^9, {3.692994268702587*^9, 3.692994298241678*^9}, 
   3.6929947141591673`*^9, 3.6929952456026545`*^9, 3.6929953412527456`*^9, 
   3.692995473504159*^9, 3.692995992379489*^9, {3.6929961643749557`*^9, 
   3.6929961933531337`*^9}, 3.6929963117080145`*^9, 3.6929964372856216`*^9, 
   3.692996482037306*^9, 3.692997167195634*^9, 3.692997200794713*^9, {
   3.692997305966152*^9, 3.692997327374434*^9}, 3.6929978939361296`*^9, 
   3.692997925321638*^9, 3.692998521280468*^9, 3.693000050111904*^9, 
   3.693000277263421*^9, 3.6930060763551784`*^9, {3.6930103159704924`*^9, 
   3.693010341480596*^9}, 3.6930118883006964`*^9, 3.6930128190148015`*^9, 
   3.6930132702074585`*^9, 3.6930134251068583`*^9, 3.69303335470569*^9, 
   3.693034310535513*^9, 3.693093219652272*^9, 3.693099090571545*^9, 
   3.6930991861233797`*^9, 3.693132218274567*^9, 3.6931341055759478`*^9, 
   3.693142030846863*^9, 3.6932509378347406`*^9, 3.6934054010041723`*^9, 
   3.6935014210664735`*^9, 3.6935028234453707`*^9, 3.69364887982856*^9, 
   3.6936495419221125`*^9, 3.693650340534256*^9, 3.693653000866028*^9, {
   3.6943677706493845`*^9, 3.6943678053469877`*^9}, 3.694367887693836*^9, {
   3.6943681763347816`*^9, 3.6943681818717513`*^9}, 3.694369365763115*^9, 
   3.694369502660653*^9, 3.6943699754277105`*^9, {3.694370325336378*^9, 
   3.694370332405031*^9}, 3.6943705191937*^9, {3.69437071595586*^9, 
   3.6943707453112087`*^9}, {3.6943708281773186`*^9, 
   3.6943708599984026`*^9}, {3.6943716521629877`*^9, 
   3.6943716618241873`*^9}, {3.694371801285982*^9, 3.694371851564473*^9}, 
   3.694371948304813*^9, 3.6943719969765863`*^9, 3.694372053536742*^9, 
   3.694372096177789*^9, 3.694372224902383*^9, 3.694372264453909*^9, 
   3.6943722977336903`*^9, 3.694373554877632*^9, 3.694373619078857*^9, 
   3.6943736867107754`*^9, 3.6943737456384497`*^9, 3.6943737935423098`*^9, 
   3.694373825466361*^9, {3.6943738750101748`*^9, 3.6943739053893175`*^9}, 
   3.6943740047833176`*^9, 3.694375258216037*^9, {3.694382127886283*^9, 
   3.6943821511521015`*^9}, 3.69438219395613*^9, 3.694382298700571*^9, 
   3.6943825118241434`*^9, 3.6947895847151823`*^9, 3.694861784076886*^9, 
   3.6948621570396986`*^9, 3.694875736513462*^9, 3.694875798494584*^9, 
   3.6948759598638287`*^9, 3.694878240826383*^9, 3.694954730702157*^9, {
   3.694963856226785*^9, 3.6949639178011456`*^9}, {3.6949639525780272`*^9, 
   3.694963960926054*^9}, 3.694964012682834*^9, 3.69496407527711*^9, {
   3.694964206086837*^9, 3.694964212956008*^9}, 3.694964320393216*^9, 
   3.6949659880796566`*^9, {3.6949721014222307`*^9, 3.694972124170952*^9}, 
   3.694972272497494*^9, 3.6949725462191925`*^9, 3.694972831658603*^9, 
   3.6949734006789756`*^9, {3.694974167697627*^9, 3.694974189700932*^9}, 
   3.6949742226986117`*^9, 3.694974294669013*^9, 3.6949743781848297`*^9, 
   3.6949745715351276`*^9, 3.6949753955993395`*^9, 3.694975845286705*^9, 
   3.6949762828932886`*^9, 3.6949767290132694`*^9, 3.6949775538660107`*^9, 
   3.6949781151902113`*^9, 3.6949782299819493`*^9, 3.69497860617033*^9, {
   3.694979109985216*^9, 3.694979143344198*^9}, 3.6949792446406307`*^9, 
   3.6949792856865735`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "receptor", " ", "concentration", " ", "and", " ", "ligand", " ", 
   "concentration"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.692887044326101*^9, 3.692887052187101*^9}, {
  3.6928871303763194`*^9, 3.6928871325222473`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ligandconc", " ", "=", " ", 
   RowBox[{"100", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "9"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"d", " ", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.", "/", 
       RowBox[{"(", 
        RowBox[{"ligandconc", " ", "*", " ", "6", " ", 
         RowBox[{"10", "^", "23"}]}], ")"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "3"}], ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", "dm", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Bold", ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], "]"}], "&"}], 
     "@", "\"\<spacing between ligands: \>\""}], ",", 
    RowBox[{"d", "*", " ", "1", " ", 
     RowBox[{"10", "^", "8"}]}], ",", "\"\< nm\>\""}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"dm", " ", "\[Rule]", " ", "nm"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6928874842838807`*^9, 3.692887514661765*^9}, {
   3.69288760790053*^9, 3.692887792524851*^9}, {3.6928878398361306`*^9, 
   3.6928878782141647`*^9}, {3.6928879132093325`*^9, 3.6928879229781103`*^9}, 
   3.6928880610682373`*^9, {3.692888769056919*^9, 3.692888769290241*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"spacing between ligands: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->14,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "255.4364774645179`", 
   "\[InvisibleSpace]", "\<\" nm\"\>"}],
  SequenceForm[
   Style["spacing between ligands: ", {
     RGBColor[0, 0, 1], Bold, FontSize -> 14}], 255.4364774645179, " nm"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6928878728452797`*^9, 3.692887878667214*^9}, {
   3.692887920593629*^9, 3.6928879231937747`*^9}, 3.692888066146342*^9, 
   3.6928887694536867`*^9, 3.692994225502619*^9, {3.692994268718193*^9, 
   3.692994298241678*^9}, 3.692994714174797*^9, 3.6929952456182947`*^9, 
   3.6929953412683697`*^9, 3.692995473519783*^9, 3.692995992395152*^9, {
   3.692996164390581*^9, 3.6929961933687587`*^9}, 3.6929963117236423`*^9, 
   3.692996437301248*^9, 3.692996482037306*^9, 3.692997167211259*^9, 
   3.692997200810337*^9, {3.692997305981778*^9, 3.6929973273900585`*^9}, 
   3.692997893951756*^9, 3.6929979253372574`*^9, 3.6929985212961035`*^9, 
   3.6930000501244125`*^9, 3.693000277276924*^9, 3.6930060763551784`*^9, {
   3.6930103159861193`*^9, 3.693010341480596*^9}, 3.6930118883167734`*^9, 
   3.693012819030427*^9, 3.6930132702230887`*^9, 3.6930134251225023`*^9, 
   3.6930333547277184`*^9, 3.693034310558285*^9, 3.6930932196732855`*^9, 
   3.6930990905895824`*^9, 3.6930991861368876`*^9, 3.693132218292082*^9, 
   3.693134105587971*^9, 3.6931420308781*^9, 3.6932509378503666`*^9, 
   3.6934054010381985`*^9, 3.693501421082099*^9, 3.6935028234603744`*^9, 
   3.69364887982856*^9, 3.69364954193775*^9, 3.693650340534256*^9, 
   3.693653000881653*^9, {3.6943677706493845`*^9, 3.6943678053469877`*^9}, 
   3.694367887693836*^9, {3.6943681763504057`*^9, 3.694368181893894*^9}, 
   3.694369365778728*^9, 3.694369502676276*^9, 3.694369975428224*^9, {
   3.694370325352006*^9, 3.6943703324206567`*^9}, 3.6943705192093244`*^9, {
   3.694370715971485*^9, 3.6943707453268337`*^9}, {3.6943708281773186`*^9, 
   3.6943708600049067`*^9}, {3.694371652178613*^9, 3.694371661846319*^9}, {
   3.69437180130159*^9, 3.694371851580098*^9}, 3.6943719483204517`*^9, 
   3.6943719969922104`*^9, 3.6943720535523663`*^9, 3.694372096193489*^9, 
   3.694372224902383*^9, 3.694372264469535*^9, 3.694372297749295*^9, 
   3.694373554877632*^9, 3.6943736867324*^9, 3.6943737456540823`*^9, 
   3.6943737935579348`*^9, 3.694373825481984*^9, {3.6943738750257998`*^9, 
   3.6943739054049373`*^9}, 3.6943740047989445`*^9, 3.694375258216037*^9, {
   3.6943821279019194`*^9, 3.694382151174238*^9}, 3.694382193971755*^9, 
   3.694382298700571*^9, 3.6943825118397846`*^9, 3.6947895847161756`*^9, 
   3.6948617840925107`*^9, 3.6948621570497055`*^9, 3.6948757365270033`*^9, 
   3.6948757985086007`*^9, 3.6948759598758245`*^9, 3.6948782408383913`*^9, 
   3.694954730716175*^9, {3.6949638562479305`*^9, 3.694963917816784*^9}, {
   3.6949639525780272`*^9, 3.6949639609416957`*^9}, 3.6949640126984644`*^9, 
   3.694964075292735*^9, {3.69496420610248*^9, 3.694964212971634*^9}, 
   3.694964320408842*^9, 3.6949659880831604`*^9, {3.6949721014378557`*^9, 
   3.694972124186595*^9}, 3.694972272528748*^9, 3.6949725462348104`*^9, 
   3.6949728316742287`*^9, 3.6949734007011147`*^9, {3.6949741677136436`*^9, 
   3.694974189716853*^9}, 3.694974222714406*^9, 3.6949742946881447`*^9, 
   3.6949743782004685`*^9, 3.6949745715567603`*^9, 3.6949753956149797`*^9, 
   3.69497584530233*^9, 3.6949762829092646`*^9, 3.6949767290288963`*^9, 
   3.694977553881635*^9, 3.6949781152058363`*^9, 3.6949782300197115`*^9, 
   3.694978606185961*^9, {3.6949791100008416`*^9, 3.6949791433598223`*^9}, 
   3.6949792446461306`*^9, 3.6949792857021947`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"receptorconc", " ", "=", " ", 
   RowBox[{"40", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"d", " ", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"receptorconc", " ", "*", " ", "6", " ", 
         RowBox[{"10", "^", "23"}]}], ")"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "3."}], ")"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", "dm", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Bold", ",", 
           RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], "]"}], "&"}], 
      "@", "\"\<spacing between receptors: \>\""}], ",", 
     RowBox[{"d", "*", " ", "1", " ", 
      RowBox[{"10", "^", "8"}]}], ",", "\"\< nm\>\""}], "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"dm", " ", "\[Rule]", " ", "nm"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.692887932360951*^9, 3.6928879718326497`*^9}, 
   3.6928880625303345`*^9, {3.692888132285529*^9, 3.692888186729121*^9}, {
   3.6928887654378185`*^9, 3.692888765623358*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"spacing between receptors: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->14,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "34.668063717531766`",
    "\[InvisibleSpace]", "\<\" nm\"\>"}],
  SequenceForm[
   Style["spacing between receptors: ", {
     RGBColor[0, 0, 1], Bold, FontSize -> 14}], 34.668063717531766`, " nm"],
  Editable->False]], "Print",
 CellChangeTimes->{{3.692887939059952*^9, 3.6928879728696394`*^9}, 
   3.6928880629676304`*^9, {3.692888133289652*^9, 3.692888159475318*^9}, 
   3.692888192816043*^9, 3.6928884290556526`*^9, 3.692888765850331*^9, 
   3.692994225502619*^9, {3.692994268736338*^9, 3.692994298257306*^9}, 
   3.692994714174797*^9, 3.6929952456339235`*^9, 3.6929953412840014`*^9, 
   3.692995473541416*^9, 3.692995992401679*^9, {3.692996164390581*^9, 
   3.6929961933687587`*^9}, 3.6929963117392673`*^9, 3.6929964373219037`*^9, 
   3.6929964820529313`*^9, 3.692997167211259*^9, 3.692997200825968*^9, {
   3.6929973059973984`*^9, 3.692997327410709*^9}, 3.692997893951756*^9, 
   3.6929979253528824`*^9, 3.692998521311721*^9, 3.6930000501314173`*^9, 
   3.693000277283929*^9, 3.693006076370807*^9, {3.6930103159861193`*^9, 
   3.6930103415012407`*^9}, 3.6930118883324156`*^9, 3.6930128190460515`*^9, 
   3.6930132702230887`*^9, 3.6930134251431303`*^9, 3.6930333547417283`*^9, 
   3.693034310566305*^9, 3.693093219682294*^9, 3.6930990905985756`*^9, 
   3.6930991861438913`*^9, 3.6931322183010874`*^9, 3.693134105596966*^9, 
   3.6931420308937435`*^9, 3.6932509378659916`*^9, 3.693405401054209*^9, 
   3.693501421082099*^9, 3.6935028234683943`*^9, 3.6936488798441725`*^9, 
   3.69364954193775*^9, 3.6936503405498943`*^9, 3.693653000881653*^9, {
   3.6943677706650095`*^9, 3.694367805362611*^9}, 3.6943678877094474`*^9, {
   3.6943681763504057`*^9, 3.694368181893894*^9}, 3.694369365778728*^9, 
   3.694369502676276*^9, 3.694369975443886*^9, {3.694370325352006*^9, 
   3.6943703324206567`*^9}, 3.6943705192093244`*^9, {3.694370715971485*^9, 
   3.6943707453424587`*^9}, {3.694370828192944*^9, 3.6943708600049067`*^9}, {
   3.694371652178613*^9, 3.694371661846319*^9}, {3.69437180130159*^9, 
   3.694371851580098*^9}, 3.6943719483204517`*^9, 3.6943719969922104`*^9, 
   3.6943720535523663`*^9, 3.6943720962091117`*^9, 3.694372224918007*^9, 
   3.694372264469535*^9, 3.694372297749295*^9, 3.6943735548932557`*^9, 
   3.6943736867324*^9, 3.6943737456540823`*^9, 3.6943737935579348`*^9, 
   3.694373825481984*^9, {3.6943738750257998`*^9, 3.6943739054049373`*^9}, 
   3.6943740047989445`*^9, 3.694375258235671*^9, {3.69438212792407*^9, 
   3.694382151174238*^9}, 3.694382193971755*^9, 3.6943822987162123`*^9, 
   3.6943825118397846`*^9, 3.694789584732001*^9, 3.6948617840925107`*^9, 
   3.6948621570562105`*^9, 3.6948757365334945`*^9, 3.6948757985154676`*^9, 
   3.694875959882842*^9, 3.694878240845397*^9, 3.694954730718177*^9, {
   3.6949638562479305`*^9, 3.694963917816784*^9}, {3.6949639525936565`*^9, 
   3.694963960957304*^9}, 3.6949640126984644`*^9, 3.694964075292735*^9, {
   3.6949642061180863`*^9, 3.694964212971634*^9}, 3.6949643204244795`*^9, 
   3.6949659880988016`*^9, {3.6949721014595222`*^9, 3.694972124202221*^9}, 
   3.694972272528748*^9, 3.6949725462534733`*^9, 3.694972831689851*^9, 
   3.694973400701615*^9, {3.6949741677136436`*^9, 3.694974189732478*^9}, 
   3.694974222730031*^9, 3.6949742946916485`*^9, 3.694974378216098*^9, 
   3.6949745715727406`*^9, 3.6949753956306047`*^9, 3.69497584530233*^9, 
   3.6949762829248896`*^9, 3.6949767290445213`*^9, 3.694977553881635*^9, 
   3.694978115221467*^9, 3.6949782300197115`*^9, 3.694978606185961*^9, {
   3.694979110016466*^9, 3.6949791433598223`*^9}, 3.6949792446461306`*^9, 
   3.694979285717807*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "how", " ", "many", " ", "ligands", " ", "and", " ", "receptors", " ", "in",
    " ", "the", " ", "simulation", " ", "box"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.692888534449921*^9, 3.6928885480687065`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], "]"}], "&"}], "@", 
    "\"\<simulation box (0.6932 um vs 0.6932 um), ligand num: \>\""}], ",", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.6932", " ", 
       RowBox[{"10", "^", "3"}], " ", "0.6932", " ", 
       RowBox[{"10", "^", "3"}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", "255.436", ")"}], "^", "2"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6928885517374077`*^9, 3.6928886424091234`*^9}, {
  3.6928887808391314`*^9, 3.692888796854644*^9}, {3.692992220263863*^9, 
  3.692992234210222*^9}, {3.692992266431571*^9, 3.692992272536028*^9}, {
  3.694875782318742*^9, 3.6948757862127028`*^9}, {3.6948778284595127`*^9, 
  3.694877844223774*^9}, {3.6948782882304*^9, 3.6948782962667108`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"simulation box (0.6932 um vs 0.6932 um), ligand num: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->14,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "7"}],
  SequenceForm[
   Style["simulation box (0.6932 um vs 0.6932 um), ligand num: ", {
     RGBColor[0, 0, 1], Bold, FontSize -> 14}], 7],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6928886292639313`*^9, 3.692888642651345*^9}, {
   3.692888781220336*^9, 3.692888797231727*^9}, 3.6929922367092*^9, 
   3.6929923465171385`*^9, 3.692994225518238*^9, {3.692994268740342*^9, 
   3.692994298272932*^9}, 3.692994714190422*^9, 3.6929952456545753`*^9, 
   3.6929953412840014`*^9, 3.692995473541416*^9, 3.692995992417323*^9, {
   3.692996164412716*^9, 3.6929961933843784`*^9}, 3.6929963117548933`*^9, 
   3.692996437322897*^9, 3.6929964820685687`*^9, 3.692997167226884*^9, 
   3.6929972008415847`*^9, {3.692997306016286*^9, 3.6929973274116907`*^9}, 
   3.6929978939673953`*^9, 3.6929979253685074`*^9, 3.6929985213273463`*^9, 
   3.693000050143918*^9, 3.693000277296932*^9, 3.6930060763864307`*^9, {
   3.6930103160082655`*^9, 3.693010341502242*^9}, 3.693011888348036*^9, 
   3.6930128190460515`*^9, 3.693013270238722*^9, 3.6930134251441307`*^9, 
   3.693033354765746*^9, 3.693034310589308*^9, 3.6930932196958036`*^9, 
   3.6930990906145864`*^9, 3.693099186156887*^9, 3.6931322183221035`*^9, 
   3.693134105610507*^9, 3.6931420309093695`*^9, 3.6932509378816166`*^9, 
   3.6934054010817485`*^9, 3.693501421097724*^9, 3.693502823483388*^9, 
   3.6936488798597975`*^9, 3.693649541953376*^9, 3.6936503405498943`*^9, 
   3.693653000897278*^9, {3.6943677706650095`*^9, 3.694367805362611*^9}, 
   3.6943678877094474`*^9, {3.6943681763660355`*^9, 3.6943681819095335`*^9}, 
   3.694369365794353*^9, 3.6943695026919017`*^9, 3.6943699754595127`*^9, {
   3.6943703253741446`*^9, 3.694370332436282*^9}, 3.6943705192249527`*^9, {
   3.6943707159931345`*^9, 3.6943707453424587`*^9}, {3.6943708282085695`*^9, 
   3.6943708600205355`*^9}, {3.6943716521942377`*^9, 
   3.6943716618619475`*^9}, {3.6943718013172274`*^9, 3.6943718515957093`*^9}, 
   3.6943719483360767`*^9, 3.6943719970143404`*^9, 3.6943720535744996`*^9, 
   3.6943720962247467`*^9, 3.694372224918007*^9, 3.69437226448516*^9, 
   3.69437229776492*^9, 3.6943735548932557`*^9, 3.694373686748245*^9, 
   3.6943737456762304`*^9, 3.6943737935735607`*^9, 3.6943738254991136`*^9, {
   3.6943738750414248`*^9, 3.6943739054205694`*^9}, 3.69437400481457*^9, 
   3.6943752582381763`*^9, {3.6943821279397097`*^9, 3.694382151189865*^9}, 
   3.694382193993907*^9, 3.694382298731839*^9, 3.6943825118554125`*^9, 
   3.694789584747629*^9, 3.6948617841081524`*^9, 3.694862157065217*^9, 
   3.694875736544781*^9, 3.6948757985274878`*^9, 3.694875959894368*^9, 
   3.694877859601823*^9, 3.6948782408564043`*^9, 3.694878297058049*^9, 
   3.6948803038994355`*^9, 3.6949547307340117`*^9, {3.694963856263655*^9, 
   3.6949639178389373`*^9}, {3.6949639526092825`*^9, 3.6949639609749517`*^9}, 
   3.69496401272011*^9, 3.69496407530836*^9, {3.694964206140256*^9, 
   3.694964212987257*^9}, 3.6949643204401093`*^9, 3.6949659881144266`*^9, {
   3.6949721014755034`*^9, 3.694972124217842*^9}, 3.6949722725600147`*^9, 
   3.6949725462569647`*^9, 3.694972831705474*^9, 3.694973400717245*^9, {
   3.694974167729268*^9, 3.6949741897480907`*^9}, 3.6949742227456565`*^9, 
   3.6949742947072744`*^9, 3.6949743782317057`*^9, 3.6949745715883656`*^9, 
   3.69497539564623*^9, 3.6949758453179417`*^9, 3.6949762829405146`*^9, 
   3.6949767290601635`*^9, 3.694977553912885*^9, 3.6949781152370834`*^9, 
   3.694978230035355*^9, 3.6949786062080965`*^9, {3.6949791100320916`*^9, 
   3.6949791433754473`*^9}, 3.6949792446617713`*^9, 3.694979285733445*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], "]"}], "&"}], "@", 
    "\"\<simulation box (0.6932 um by 0.6932 um), receptor num: \>\""}], ",", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.6932", " ", 
       RowBox[{"10", "^", "3"}], " ", "0.6932", " ", 
       RowBox[{"10", "^", "3"}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", "34.66", ")"}], "^", "2"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.692888660469859*^9, 3.692888760685046*^9}, {
  3.6928888056847916`*^9, 3.6928888093570414`*^9}, {3.6929922559856358`*^9, 
  3.6929923055902576`*^9}, {3.6948757913533707`*^9, 3.694875794518462*^9}, {
  3.694878302265829*^9, 3.6948783092092857`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"simulation box (0.6932 um by 0.6932 um), receptor num: \"\>",
    StripOnInput->False,
    LineColor->RGBColor[0, 0, 1],
    FrontFaceColor->RGBColor[0, 0, 1],
    BackFaceColor->RGBColor[0, 0, 1],
    GraphicsColor->RGBColor[0, 0, 1],
    FontSize->14,
    FontWeight->Bold,
    FontColor->RGBColor[0, 0, 1]], "\[InvisibleSpace]", "400"}],
  SequenceForm[
   Style["simulation box (0.6932 um by 0.6932 um), receptor num: ", {
     RGBColor[0, 0, 1], Bold, FontSize -> 14}], 400],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6928886881402392`*^9, 3.6928887211697645`*^9}, {
   3.6928887515837946`*^9, 3.6928887615244627`*^9}, 3.692888809647401*^9, {
   3.6929922816824265`*^9, 3.692992307473865*^9}, 3.692992348979698*^9, 
   3.692994225518238*^9, {3.692994268755982*^9, 3.692994298272932*^9}, 
   3.692994714190422*^9, 3.6929952456560583`*^9, 3.692995341306145*^9, 
   3.6929954735571775`*^9, 3.692995992417323*^9, {3.692996164412716*^9, 
   3.6929961934045286`*^9}, 3.6929963117548933`*^9, 3.6929964373389707`*^9, 
   3.6929964820685687`*^9, 3.6929971672485323`*^9, 3.6929972008415847`*^9, {
   3.6929973060197906`*^9, 3.6929973274273973`*^9}, 3.692997893983019*^9, 
   3.6929979253685074`*^9, 3.6929985213429756`*^9, 3.693000050151431*^9, 
   3.69300027730593*^9, 3.6930060763864307`*^9, {3.6930103160082655`*^9, 
   3.693010341518042*^9}, 3.693011888348036*^9, 3.693012819061677*^9, 
   3.693013270259345*^9, 3.6930134251601963`*^9, 3.6930333547772417`*^9, 
   3.6930343105983267`*^9, 3.693093219703809*^9, 3.693099090622582*^9, 
   3.6930991861639056`*^9, 3.693132218331109*^9, 3.6931341056175213`*^9, 
   3.693142030930025*^9, 3.693250937897242*^9, 3.693405401094286*^9, 
   3.6935014211173553`*^9, 3.69350282349041*^9, 3.6936488798597975`*^9, 
   3.693649541953376*^9, 3.6936503405655065`*^9, 3.693653000897278*^9, {
   3.694367770680635*^9, 3.6943678053782363`*^9}, 3.6943678877250724`*^9, {
   3.6943681763660355`*^9, 3.6943681819095335`*^9}, 3.694369365794353*^9, 
   3.6943695026919017`*^9, 3.6943699754595127`*^9, {3.6943703253741446`*^9, 
   3.6943703324519067`*^9}, 3.6943705192249527`*^9, {3.6943707159931345`*^9, 
   3.694370745364107*^9}, {3.6943708282085695`*^9, 3.6943708600361605`*^9}, {
   3.6943716521942377`*^9, 3.6943716618619475`*^9}, {3.6943718013328533`*^9, 
   3.6943718515957093`*^9}, 3.6943719483360767`*^9, 3.6943719970143404`*^9, 
   3.6943720535744996`*^9, 3.6943720962247467`*^9, 3.694372224933632*^9, 
   3.69437226448516*^9, 3.69437229776492*^9, 3.6943735549128895`*^9, 
   3.694373686748245*^9, 3.6943737456762304`*^9, 3.6943737935735607`*^9, 
   3.6943738255041313`*^9, {3.6943738750414248`*^9, 3.6943739054205694`*^9}, 
   3.69437400481457*^9, 3.6943752582381763`*^9, {3.6943821279397097`*^9, 
   3.694382151189865*^9}, 3.694382193993907*^9, 3.694382298731839*^9, 
   3.6943825118554125`*^9, 3.694789584747629*^9, 3.6948617841253066`*^9, 
   3.694862157065217*^9, 3.694875736550786*^9, 3.6948757985334864`*^9, 
   3.694875959900868*^9, 3.694878240863409*^9, 3.694878309481771*^9, 
   3.694880302267435*^9, 3.6949547307340117`*^9, {3.694963856263655*^9, 
   3.6949639178389373`*^9}, {3.6949639526092825`*^9, 3.694963960979479*^9}, 
   3.69496401272011*^9, 3.694964075323985*^9, {3.694964206140256*^9, 
   3.694964213002882*^9}, 3.6949643204401093`*^9, 3.6949659881300516`*^9, {
   3.6949721014755034`*^9, 3.694972124233466*^9}, 3.6949722725600147`*^9, 
   3.6949725462725925`*^9, 3.6949728317211*^9, 3.6949734007328773`*^9, {
   3.6949741677448936`*^9, 3.6949741897480907`*^9}, 3.6949742227456565`*^9, 
   3.6949742947072744`*^9, 3.6949743782317057`*^9, 3.69497457160399*^9, 
   3.6949753956683702`*^9, 3.6949758453400745`*^9, 3.6949762829561424`*^9, 
   3.6949767290601635`*^9, 3.694977553912885*^9, 3.6949781152527075`*^9, 
   3.694978230050976*^9, 3.6949786062080965`*^9, {3.6949791100320916`*^9, 
   3.694979143392076*^9}, 3.694979244677395*^9, 3.694979285733445*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["helper functions", "Section",
 CellChangeTimes->{{3.6925384727983055`*^9, 3.6925384789843216`*^9}}],

Cell[CellGroupData[{

Cell["diffuse ligands", "Subsection",
 CellChangeTimes->{{3.6925385256399207`*^9, 3.6925385374507666`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", 
   RowBox[{"2", "*", "60.", "*", "1", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"step", " ", "for", " ", "diffusion"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6926891202747097`*^9, 3.692689137773493*^9}, {
  3.6928262175923233`*^9, 3.6928262262053976`*^9}, {3.693097209978942*^9, 
  3.6930972501607327`*^9}, {3.6930985129839287`*^9, 3.6930985181378746`*^9}, {
  3.693098576744543*^9, 3.6930985806003942`*^9}, {3.6930986136766615`*^9, 
  3.6930986877883873`*^9}, {3.6930988488578997`*^9, 3.693098880921124*^9}, {
  3.693099003781722*^9, 3.6930990069068365`*^9}, {3.693099052184869*^9, 
  3.693099057070119*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["0.010954451150103323`"], "Output",
 CellChangeTimes->{{3.692689135021332*^9, 3.6926891379416776`*^9}, 
   3.692689176933276*^9, 3.6926911945575447`*^9, 3.6927043167484703`*^9, 
   3.692716098581106*^9, {3.692780586169547*^9, 3.692780609394343*^9}, 
   3.6928176626301823`*^9, 3.6929942255494785`*^9, {3.692994268771624*^9, 
   3.6929942983041816`*^9}, 3.6929947142594304`*^9, 3.6929952456717157`*^9, 
   3.692995341321784*^9, 3.6929954735728045`*^9, 3.692995992432943*^9, {
   3.692996164428342*^9, 3.69299619342218*^9}, 3.692996311788662*^9, 
   3.6929964373702326`*^9, 3.6929964820998073`*^9, 3.6929971672643337`*^9, 
   3.69299720085721*^9, {3.6929973060666857`*^9, 3.6929973274430275`*^9}, 
   3.6929975252048683`*^9, 3.6929978940142703`*^9, 3.6929979254062595`*^9, 
   3.6929985213772316`*^9, 3.693000050187608*^9, 3.6930002773399534`*^9, 
   3.6930060764020643`*^9, {3.693010316055163*^9, 3.6930103415493097`*^9}, 
   3.693011888400936*^9, 3.693012819146316*^9, 3.6930132703233733`*^9, 
   3.693013425207072*^9, 3.6930333548564425`*^9, 3.6930343106608605`*^9, 
   3.6930932197816267`*^9, {3.693097210647783*^9, 3.6930972508299603`*^9}, {
   3.693098515303009*^9, 3.6930985186228056`*^9}, {3.6930986139831257`*^9, 
   3.6930986880716558`*^9}, {3.6930988493256044`*^9, 3.693098881660264*^9}, {
   3.6930990072497883`*^9, 3.693099020014923*^9}, {3.6930990542569733`*^9, 
   3.6930990574915376`*^9}, 3.6930990910255413`*^9, 3.693099186218474*^9, 
   3.693132218418662*^9, 3.6931341056485434`*^9, 3.6931420310093575`*^9, 
   3.6932509379975214`*^9, 3.69340540116232*^9, 3.6935014211979866`*^9, 
   3.6935028235563555`*^9, 3.6936488799285836`*^9, 3.693649542006767*^9, 
   3.6936503406186523`*^9, 3.693653000966288*^9, {3.694367770680635*^9, 
   3.6943678053782363`*^9}, 3.6943678877250724`*^9, {3.6943681763660355`*^9, 
   3.6943681819095335`*^9}, 3.6943693658099775`*^9, 3.6943695026919017`*^9, 
   3.6943699754751244`*^9, {3.6943703253897734`*^9, 3.6943703324519067`*^9}, 
   3.6943705192405753`*^9, {3.6943707160090065`*^9, 3.694370745364107*^9}, {
   3.694370828224194*^9, 3.6943708600361605`*^9}, {3.6943716521942377`*^9, 
   3.6943716618619475`*^9}, {3.6943718013328533`*^9, 3.6943718515957093`*^9}, 
   3.6943719483360767`*^9, 3.6943719970143404`*^9, 3.694372053590126*^9, 
   3.6943720962403975`*^9, 3.694372224949258*^9, 3.694372264500785*^9, 
   3.6943722977805567`*^9, 3.694373554915393*^9, 3.6943736867638683`*^9, 
   3.6943737456918697`*^9, 3.6943737935891857`*^9, 3.6943738255041313`*^9, {
   3.6943738750570583`*^9, 3.694373905441208*^9}, 3.694374004830195*^9, 
   3.6943752582538023`*^9, {3.6943821279553223`*^9, 3.694382151205491*^9}, 
   3.6943821940095453`*^9, 3.694382298747449*^9, 3.6943825118710384`*^9, 
   3.6947895847632513`*^9, 3.69486178413031*^9, 3.694862157080845*^9, 
   3.694954730749633*^9, {3.6949638562792654`*^9, 3.694963917854582*^9}, {
   3.6949639526249104`*^9, 3.694963960979479*^9}, 3.694964012736174*^9, 
   3.694964075323985*^9, {3.6949642061558943`*^9, 3.694964213002882*^9}, 
   3.694964320455729*^9, 3.6949659881456776`*^9, {3.694972101506737*^9, 
   3.694972124249092*^9}, 3.694972272597786*^9, 3.6949725463038588`*^9, 
   3.6949728317427564`*^9, 3.6949734007641335`*^9, {3.6949741677605186`*^9, 
   3.694974189763734*^9}, 3.694974222761286*^9, 3.6949742947385416`*^9, 
   3.694974378247332*^9, 3.6949745716196156`*^9, 3.6949753956996355`*^9, 
   3.6949758453557034`*^9, 3.6949762829717665`*^9, 3.694976729091411*^9, 
   3.694977553945758*^9, 3.6949781152527075`*^9, 3.6949782300666056`*^9, 
   3.694978606223735*^9, {3.694979110047715*^9, 3.694979143396079*^9}, 
   3.694979244677395*^9, 3.694979285749071*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"brownianWalk", "[", 
   RowBox[{"index_", ",", "elem_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"oldpos", " ", "=", " ", 
       RowBox[{"elem", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "step", ",", 
      RowBox[{"tag", " ", "=", " ", 
       RowBox[{"elem", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"step", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.0109545"}], "]"}], "]"}], ",", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.0109545"}], "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"index", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"tag", ",", 
        RowBox[{"oldpos", "+", "step"}]}], "}"}]}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.6925535912645836`*^9, 3.6925537135851803`*^9}, {
  3.692553802344427*^9, 3.6925539040190115`*^9}, {3.6925539376754303`*^9, 
  3.6925539423056192`*^9}, {3.692635082301462*^9, 3.6926351269514294`*^9}, {
  3.692684176481155*^9, 3.6926841793403587`*^9}, {3.692688891784646*^9, 
  3.692688908729864*^9}, {3.6929968616603093`*^9, 3.6929968639757366`*^9}, {
  3.6929973559407635`*^9, 3.692997380503375*^9}, {3.6929974195802054`*^9, 
  3.6929974245646276`*^9}, {3.692998237125409*^9, 3.6929982405568557`*^9}, {
  3.6930990387525105`*^9, 3.693099082724209*^9}, {3.6943719444195113`*^9, 
  3.6943719472513685`*^9}, {3.694372260137698*^9, 3.6943722632691813`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BrownianFunc", "[", "assoc_", "]"}], ":=", " ", 
  RowBox[{"Association", "@", 
   RowBox[{"KeyValueMap", "[", 
    RowBox[{"brownianWalk", ",", "assoc"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.692538327636627*^9, 3.6925383342022343`*^9}, {
  3.69255351356741*^9, 3.6925535448084774`*^9}, {3.6925535757429743`*^9, 
  3.692553585926533*^9}, {3.6925539535192537`*^9, 3.69255395875072*^9}, {
  3.692613523171011*^9, 3.692613527917699*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["boundary-condition checks for ligands", "Subsection",
 CellChangeTimes->{{3.6925385256399207`*^9, 3.6925385374507666`*^9}, {
  3.692555091443239*^9, 3.6925551053215413`*^9}, {3.6925551436264367`*^9, 
  3.692555169284423*^9}, {3.6925556585847063`*^9, 3.6925556639533167`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalR]", "2"], "=", " ", 
   RowBox[{"BoundaryMeshRegion", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.6932", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.6932", ",", "0.6932"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.6932"}], "}"}]}], "}"}], ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "1"}], "}"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6949789329374795`*^9, 3.694978949105666*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BCchecks", "[", "ligandstruct_", "]"}], ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"minY", " ", "=", " ", "0"}], ",", " ", 
      RowBox[{"maxY", " ", "=", " ", "0.6932"}], ",", 
      RowBox[{"minX", " ", "=", " ", "0"}], ",", 
      RowBox[{"maxX", " ", "=", " ", "0.6932"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ligandind", ",", " ", "ligandpos", ",", "threadList", ",", "res1", 
        ",", "res2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ligandind", "=", " ", 
        RowBox[{"Keys", "@", "ligandstruct"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ligandpos", " ", "=", " ", 
        RowBox[{"Values", "@", 
         RowBox[{"ligandstruct", " ", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"threadList", "=", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"ligandind", ",", "ligandpos"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"threadList", " ", "=", 
        RowBox[{"threadList", "/.", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x_Integer", ",", "pos_List"}], " ", "}"}], "/;", 
           RowBox[{"pos", "\[NotElement]", 
            SubscriptBox["\[ScriptCapitalR]", "2"]}]}], "\[RuleDelayed]", 
          RowBox[{"Sequence", "[", "]"}]}]}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6925552145240045`*^9, 3.692555230350913*^9}, {
   3.6925556185449915`*^9, 3.6925556198064823`*^9}, {3.692555840539007*^9, 
   3.6925558651990557`*^9}, {3.692557387782487*^9, 3.6925574832142763`*^9}, {
   3.6925575529895477`*^9, 3.692557625610075*^9}, {3.6925577105070524`*^9, 
   3.6925577424528575`*^9}, {3.6925578554704447`*^9, 
   3.6925578600159273`*^9}, {3.6925579654328814`*^9, 3.692557995703847*^9}, {
   3.6925581332626877`*^9, 3.692558212848675*^9}, {3.6925582438412876`*^9, 
   3.692558246908615*^9}, {3.692558747319565*^9, 3.6925587798293176`*^9}, {
   3.692558889761104*^9, 3.6925589506480293`*^9}, {3.6925590610104446`*^9, 
   3.6925590707920485`*^9}, {3.692559135228594*^9, 3.692559135659732*^9}, {
   3.6925593304396753`*^9, 3.692559391901238*^9}, {3.692559453890506*^9, 
   3.6925596318044343`*^9}, {3.6925597562142863`*^9, 
   3.6925597593820205`*^9}, {3.692559805836622*^9, 3.692559806636063*^9}, {
   3.692559843068571*^9, 3.692559849468566*^9}, {3.692559995069833*^9, 
   3.69256002197871*^9}, {3.692605067064335*^9, 3.6926050729627523`*^9}, {
   3.692629995149437*^9, 3.6926299997866497`*^9}, {3.692983505289794*^9, 
   3.692983507709694*^9}, {3.692983556712329*^9, 3.6929836181512055`*^9}, {
   3.6929837654859753`*^9, 3.6929837658640466`*^9}, {3.6929849084956565`*^9, 
   3.6929849252411575`*^9}, {3.6929921625779767`*^9, 3.692992165739616*^9}, {
   3.692993160396469*^9, 3.6929931655110655`*^9}, {3.692993197667737*^9, 
   3.69299320061926*^9}, {3.6929932941511607`*^9, 3.692993309560335*^9}, 
   3.692993573786703*^9, {3.692993763349148*^9, 3.692993793593285*^9}, {
   3.6929938324063225`*^9, 3.692993876419886*^9}, {3.692993943206122*^9, 
   3.692993944353161*^9}, {3.692993983907751*^9, 3.692994034062113*^9}, {
   3.692994068251762*^9, 3.6929940776172113`*^9}, {3.692995237073044*^9, 
   3.6929952401347957`*^9}, {3.6929953297213984`*^9, 3.692995338205862*^9}, {
   3.6929953985868745`*^9, 3.6929954295334225`*^9}, {3.6929954681741705`*^9, 
   3.6929954707734*^9}, 3.692995603294592*^9, 3.6929956728876953`*^9, {
   3.692995905876236*^9, 3.6929959893020334`*^9}, {3.6929971147767467`*^9, 
   3.6929971179758797`*^9}, {3.692997267284112*^9, 3.692997268983782*^9}, {
   3.692998495738387*^9, 3.692998506385577*^9}, {3.6930000376638308`*^9, 
   3.6930000376658163`*^9}, {3.6930002243062267`*^9, 
   3.6930002243077145`*^9}, {3.693000269443513*^9, 3.693000269445013*^9}, {
   3.694970193718317*^9, 3.6949701952333794`*^9}, {3.694970226932207*^9, 
   3.694970243829425*^9}, {3.6949702794750557`*^9, 3.6949702925561714`*^9}, {
   3.6949703929997234`*^9, 3.69497039805331*^9}, {3.694978089940768*^9, 
   3.694978102892646*^9}, {3.6949781790970135`*^9, 3.6949782220768347`*^9}, {
   3.6949785469527617`*^9, 3.694978547399083*^9}, {3.6949785953207035`*^9, 
   3.6949786334942617`*^9}, {3.6949790472445803`*^9, 3.694979098704728*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["interaction between receptors and ligands", "Subsection",
 CellChangeTimes->{{3.6925385256399207`*^9, 3.6925385374507666`*^9}, {
  3.692555091443239*^9, 3.6925551053215413`*^9}, {3.6925551436264367`*^9, 
  3.692555169284423*^9}, {3.6925556585847063`*^9, 3.6925556639533167`*^9}, {
  3.6926060227623353`*^9, 3.6926060242303653`*^9}, {3.692606083982557*^9, 
  3.692606088800552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nearestFunction", "[", 
   RowBox[{
   "ligandList_", ",", "bindingrad_", ",", "membraneIndex_", ",", 
    "membranepts_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "freeReceptors", ",", "receptormap", ",", "interactions", ",", 
       "ligandlist"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ligandlist", " ", "=", " ", "ligandList"}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"free", " ", "ligands"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"freeReceptors", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"membraneIndex", ",", 
         RowBox[{
          RowBox[{"PatternSequence", "[", 
           RowBox[{"x_", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"y_List", ",", "0", ",", "None", ",", "None"}], "}"}]}], 
           "]"}], "\[RuleDelayed]", " ", 
          RowBox[{"y", "\[Rule]", " ", "x"}]}]}], "]"}]}], " ", ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "determine", " ", "free", " ", "receptors", " ", "and", " ", "invert", 
        " ", "the", " ", "index", " ", "and", " ", "positions", " ", "for", 
        " ", "making", " ", "nearest", " ", "function"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"receptormap", " ", "=", " ", 
       RowBox[{"Nearest", "[", "freeReceptors", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "creates", " ", "a", " ", "nearest", " ", "function", " ", "from", " ",
         "the", " ", "freereceptors"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"interactions", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Reap", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", "particle", "}"}], ",", 
               RowBox[{"Sow", "[", 
                RowBox[{
                 RowBox[{"particle", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"receptormap", "[", 
                  RowBox[{
                   RowBox[{"particle", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "bindingrad"}], "}"}]}], "]"}]}], 
                "]"}]}], "]"}], ",", "ligandlist"}], "]"}], ",", "_", ",", 
           "List"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "//", 
        RowBox[{
         RowBox[{"DeleteDuplicatesBy", "[", 
          RowBox[{
           RowBox[{"Replace", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x_Integer", ",", 
                RowBox[{"{", 
                 RowBox[{"y_Integer", ",", "z___Integer"}], "}"}]}], "}"}], 
              "\[RuleDelayed]", " ", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], ",", "2"}], "]"}], ",", 
           "Last"}], "]"}], "&"}]}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "this", " ", "finds", " ", "the", " ", "nearest", " ", "receptor", 
         " ", "to", " ", "a", " ", "ligand", " ", "within", " ", "a", " ", 
         "defined", " ", 
         RowBox[{"radius", ".", " ", "since"}], " ", "many", " ", "ligands", 
         " ", "maybe", " ", "close", " ", "to", " ", "a", " ", "receptor", 
         " ", "we", " ", "can", " ", "use", " ", "replace", " ", "to", " ", 
         "limit", " ", "the", " ", "interaction", " ", "to", " ", "a", " ", 
         "single", " ", "receptor"}], "-", 
        RowBox[{
        "ligand", " ", "pair", " ", "for", " ", "all", " ", "interacting", 
         " ", "receptors"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Reverse", "[", 
       RowBox[{"interactions", ",", "2"}], "]"}]}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"reversing", " ", "the", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"receptor", ",", " ", "ligand"}], "}"}], ".."}], "}"}], " ", 
      "pairs", " ", "and", " ", "exporting", " ", "from", " ", "module"}], 
     " ", "*)"}], " ", "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"membraneIndex", ",", "0", ",", "3"}], "]"}], ">", "0"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Length", "@", "ligandList"}], ">", "0", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "run", " ", "module", " ", "only", " ", "if", " ", "free", " ", 
       "receptors", " ", "are", " ", "present", " ", "as", " ", "well", " ", 
       "as", " ", "free", " ", "ligands"}], " ", "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6926061977974477`*^9, 3.692606199734607*^9}, {
   3.6926065714290447`*^9, 3.692606587160248*^9}, 3.692607113997755*^9, {
   3.69260729372857*^9, 3.69260733268079*^9}, {3.69260736278508*^9, 
   3.6926074097302012`*^9}, {3.6926074755971413`*^9, 
   3.6926075057135625`*^9}, {3.692610702226867*^9, 3.6926107053728037`*^9}, {
   3.692611015364071*^9, 3.692611019797287*^9}, 3.692633710798485*^9, {
   3.692689161412505*^9, 3.6926891657799425`*^9}, {3.6929585741029525`*^9, 
   3.6929585924679947`*^9}, {3.6929790622970977`*^9, 3.692979069747692*^9}, {
   3.6930333500714436`*^9, 3.6930333503850517`*^9}, 3.693099181711131*^9, {
   3.693105225562814*^9, 3.6931052324446697`*^9}, {3.6935027341098766`*^9, 
   3.6935027350880823`*^9}, {3.6936485118857765`*^9, 3.693648515157407*^9}, {
   3.6936495040072117`*^9, 3.6936495069707327`*^9}, {3.6936495395531673`*^9, 
   3.6936495405907793`*^9}, {3.693650332117427*^9, 3.693650337818137*^9}, {
   3.693652989866319*^9, 3.6936529957968636`*^9}, {3.6943750588396044`*^9, 
   3.694375063135931*^9}, {3.69437522385675*^9, 3.694375246535097*^9}, {
   3.6943824907064238`*^9, 3.6943824987435317`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"biasSharedReceptors", "[", 
   RowBox[{"nod_", ",", "left_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nodal", "=", "nod"}], ",", 
       RowBox[{"lefty", "=", "left"}], ",", "union", ",", "probability"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"union", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"nodal", ",", "lefty"}], "]"}], ",", "Last"}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", "x_"}], "}"}], ".."}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "part", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"probability", " ", "=", " ", 
            RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"probability", ">", "0.5"}], ",", "\[IndentingNewLine]", 
             RowBox[{"lefty", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Delete", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Position", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{"part", ",", "#"}], "]"}]}]}], "]"}]}]}], "]"}], 
                "&"}], "@", "lefty"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"nodal", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Delete", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Position", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{"part", ",", "#"}], "]"}]}]}], "]"}]}]}], "]"}], 
                "&"}], "@", "nodal"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], ",", "union"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "@", 
       RowBox[{"{", 
        RowBox[{"nodal", ",", "lefty"}], "}"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"nod", "=!=", 
      RowBox[{"{", "}"}]}], " ", "&&", " ", 
     RowBox[{"left", " ", "=!=", 
      RowBox[{"{", "}"}]}]}], ")"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "If", " ", "a", " ", "receptor", " ", "is", " ", "interacting", " ", 
      "with", " ", "ligands", " ", "of", " ", "different", " ", "types", " ", 
      "at", " ", "the", " ", "same", " ", "time"}], ",", " ", 
     RowBox[{
     "bias", " ", "the", " ", "system", " ", "to", " ", "choose", " ", 
      "one"}]}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6926107581052628`*^9, 3.692610770267556*^9}, {
  3.6926108812095747`*^9, 3.6926109074846373`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindingEvent", "[", 
   RowBox[{"membraneIndex_", ",", 
    RowBox[{"{", 
     RowBox[{"ligandpos_", ",", "receptorpos_"}], "}"}], ",", "ligandnom_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "coord", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coord", " ", "=", " ", 
      RowBox[{
       RowBox[{"membraneIndex", "[", 
        RowBox[{"[", "receptorpos", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"membraneIndex", ",", 
       RowBox[{"receptorpos", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{"receptorpos", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"coord", ",", "1", ",", "ligandpos", ",", "ligandnom"}], 
           "}"}]}], ")"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "for", " ", "successful", " ", "interactions", " ", "make", " ", "the", 
      " ", "receptor", " ", "unavailable", " ", "for", " ", "further", " ", 
      "binding"}], ";", " ", 
     RowBox[{
     "associate", " ", "the", " ", "unavailability", " ", "index", " ", "of", 
      " ", "1"}]}], ",", " ", 
    RowBox[{"ligand", "-", 
     RowBox[{"type", " ", "and", " ", "ligand", " ", "index"}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.69261100406603*^9, {3.69263318079735*^9, 3.6926331813651733`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"interAct", "[", 
   RowBox[{"specie_", ",", "membraneind_", ",", 
    RowBox[{"interactingspecies", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_", ",", "_"}], "}"}], ".."}], "}"}]}], ",", "ligandname_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"membraneIndUpdate", ",", "successligand", ",", 
       RowBox[{"specielist", " ", "=", " ", "specie"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"membraneIndUpdate", " ", "=", " ", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"bindingEvent", "[", 
           RowBox[{"#1", ",", "#2", ",", "ligandname"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"membraneind", ",", 
           RowBox[{
            RowBox[{"##", "&"}], "@@", "interactingspecies"}]}], "}"}]}], 
        "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "run", " ", "bindingEvent", " ", "module", " ", "for", " ", 
        "successful", " ", "interactions"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"successligand", " ", "=", " ", 
       RowBox[{
        RowBox[{"#", "&"}], "@@@", "interactingspecies"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "all", " ", "the", " ", "ligands", " ", "that", " ", "have", " ", 
        "successfully", " ", "interacted"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"specielist", " ", "=", " ", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"list", ",", "index"}], "}"}], ",", 
           RowBox[{"list", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"y_", ",", 
                RowBox[{"{", 
                 RowBox[{"_", ",", "_"}], "}"}]}], "}"}], "/;", 
              RowBox[{"y", "\[Equal]", "index"}]}], "\[RuleDelayed]", " ", 
             RowBox[{"Sequence", "[", "]"}]}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"specielist", ",", 
           RowBox[{
            RowBox[{"##", "&"}], "@@", "successligand"}]}], "}"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "deleting", " ", "successful", " ", "ligands", " ", "from", " ", "the",
         " ", "ligandlist"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"specielist", ",", "membraneIndUpdate"}], "}"}]}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "sending", " ", "the", " ", "list", " ", "of", " ", "updated", " ", 
       "ligandlist"}], ",", " ", 
      RowBox[{
      "ligandindex", " ", "and", " ", "membraneindex", " ", "out", " ", "of", 
       " ", "module"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"membraneind", ",", "0", ",", "3"}], "]"}], ">", "0"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Length", "@", "specie"}], ">", "0", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "execute", " ", "the", " ", "module", " ", "only", " ", "if", " ", "a", 
       " ", "free", " ", "receptor", " ", "is", " ", "present"}], " ", 
      "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{
  3.692610868151718*^9, {3.69261099371515*^9, 3.6926110090655384`*^9}, {
   3.692611436393853*^9, 3.6926114523398943`*^9}, {3.692611485143824*^9, 
   3.6926115261144056`*^9}, {3.6926116006693816`*^9, 
   3.6926116030893426`*^9}, {3.6926117009398565`*^9, 
   3.6926117033864546`*^9}, {3.6926334401884527`*^9, 3.6926334405514097`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["dissociation of complex", "Subsection",
 CellChangeTimes->{{3.6925385256399207`*^9, 3.6925385374507666`*^9}, {
  3.692555091443239*^9, 3.6925551053215413`*^9}, {3.6925551436264367`*^9, 
  3.692555169284423*^9}, {3.6925556585847063`*^9, 3.6925556639533167`*^9}, {
  3.6926060227623353`*^9, 3.6926060242303653`*^9}, {3.692606083982557*^9, 
  3.692606088800552*^9}, {3.692995553848465*^9, 3.6929955615319157`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dissociateCoord", "[", 
   RowBox[{"pt_List", ",", "unbindrad_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "newpt", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"newpt", " ", "=", 
     RowBox[{"RandomPoint", "[", 
      RowBox[{"Circle", "[", 
       RowBox[{"pt", ",", "unbindrad"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6929790903505344`*^9, 3.692979112412551*^9}, {
   3.6929820102900305`*^9, 3.692982015889056*^9}, {3.692982578131987*^9, 
   3.692982616198657*^9}, {3.692982646634972*^9, 3.692982650150549*^9}, {
   3.692983047801795*^9, 3.6929830804397016`*^9}, {3.6929831207164183`*^9, 
   3.6929831217323785`*^9}, {3.6929831742206016`*^9, 
   3.6929832242522154`*^9}, {3.692983274775627*^9, 3.6929833305147305`*^9}, {
   3.6929840548273783`*^9, 3.692984080014231*^9}, {3.6929841906952333`*^9, 
   3.692984258817082*^9}, 3.6929854893371677`*^9, {3.6929859927435455`*^9, 
   3.6929859928122377`*^9}, {3.6929863275274363`*^9, 
   3.6929863291591625`*^9}, {3.6929963039077063`*^9, 3.692996307439376*^9}, {
   3.693502699478309*^9, 3.693502699707592*^9}, {3.6936486492235003`*^9, 
   3.6936486504763803`*^9}, {3.693648779621256*^9, 3.6936487921683483`*^9}, {
   3.6936488520159407`*^9, 3.6936488690121317`*^9}, {3.694374280465412*^9, 
   3.6943742928787327`*^9}, {3.6943751665544605`*^9, 3.694375175298436*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.", "-", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", "10000"}], "*", "1", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.693132256502735*^9, 3.693132271941482*^9}, 
   3.693133579551417*^9}],

Cell[BoxData["0.009950166250831893`"], "Output",
 CellChangeTimes->{
  3.6931335800043507`*^9, 3.6931341057217236`*^9, 3.6931420311092553`*^9, 
   3.6931506886724806`*^9, 3.69325093808216*^9, 3.693405401255432*^9, 
   3.6935014212670116`*^9, 3.6935028236164*^9, 3.693648879992607*^9, 
   3.6936495420536375`*^9, 3.693650340665533*^9, 3.6936530010131645`*^9, {
   3.694367770734023*^9, 3.6943678054472513`*^9}, 3.694367887777958*^9, {
   3.694368176435051*^9, 3.69436818197202*^9}, 3.6943693658632803`*^9, 
   3.6943695027453012`*^9, 3.694369975544669*^9, {3.694370325452273*^9, 
   3.6943703325361614`*^9}, 3.6943705193092585`*^9, {3.6943707160715094`*^9, 
   3.694370745442695*^9}, {3.6943708282932067`*^9, 3.694370860104669*^9}, {
   3.6943716522476263`*^9, 3.694371661924448*^9}, {3.6943718013861756`*^9, 
   3.6943718516647234`*^9}, 3.6943719484025745`*^9, 3.694371997076841*^9, 
   3.6943720536370144`*^9, 3.694372096293788*^9, 3.694372225002923*^9, 
   3.6943722645541267`*^9, 3.694372297849336*^9, 3.694373554977898*^9, 
   3.6943736868288765`*^9, 3.6943737457543707`*^9, 3.694373793658199*^9, 
   3.6943738255666513`*^9, {3.694373875126072*^9, 3.694373905489205*^9}, 
   3.694374004899207*^9, 3.6943752583329334`*^9, {3.69438212802437*^9, 
   3.6943821512745*^9}, 3.6943821940720453`*^9, 3.6943822988008633`*^9, 
   3.694382511924431*^9, 3.694789584816142*^9, 3.694861784192825*^9, 
   3.6948621571277204`*^9, 3.694954730796509*^9, {3.6949638563417788`*^9, 
   3.694963917917082*^9}, {3.69496395269392*^9, 3.694963961041998*^9}, 
   3.6949640127986746`*^9, 3.6949640753929996`*^9, {3.694964206218383*^9, 
   3.6949642130718956`*^9}, 3.694964320524352*^9, 3.694965988230344*^9, {
   3.694972101622656*^9, 3.6949721243493876`*^9}, 3.6949722726950555`*^9, 
   3.694972546404153*^9, 3.6949728318424315`*^9, 3.694973400848813*^9, {
   3.6949741678294086`*^9, 3.6949741898327312`*^9}, 3.6949742228302813`*^9, 
   3.694974294807542*^9, 3.6949743783163424`*^9, 3.694974571719894*^9, 
   3.694975395784301*^9, 3.6949758454182043`*^9, 3.6949762830407777`*^9, 
   3.694976729160489*^9, 3.6949775540281143`*^9, 3.694978115322248*^9, 
   3.6949782301664*^9, 3.694978606286235*^9, {3.6949791101167464`*^9, 
   3.694979143457174*^9}, 3.694979244745415*^9, 3.6949792858022337`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"unbindingMechanics", "[", 
   RowBox[{"membraneind_", ",", "ligandlist_", ",", 
    RowBox[{"ligandname_", "?", "StringQ"}], ",", "unbindingrad_"}], "]"}], ":=",
   " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"membraneInd", "=", "membraneind"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ligandList", "=", "ligandlist"}], ",", "boundSpecies", ",", 
       " ", "probability", ",", "position", ",", "dissocligand"}], "}"}], ",",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"boundSpecies", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"membraneInd", ",", 
         RowBox[{
          RowBox[{"PatternSequence", "[", 
           RowBox[{"_Integer", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p1_", ",", "p2_"}], "}"}], ",", "1", ",", "y_", ",", 
              "ligandname"}], "}"}]}], "]"}], "\[RuleDelayed]", " ", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"{", 
             RowBox[{"p1", ",", "p2"}], "}"}]}], "}"}]}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "finding", " ", "all", " ", "the", " ", "bound", " ", "ligands", " ", 
        "from", " ", "membraneindex", " ", "and", " ", "placing", " ", 
        "their", " ", "index", " ", "together", " ", "with", " ", "receptor", 
        " ", "position"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"probability", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], ",", 
         RowBox[{"Length", "@", "boundSpecies"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "lets", " ", "generate", " ", "probabilities", " ", "equal", " ", "to",
         " ", "the", " ", "number", " ", "of", " ", "bound", " ", "species"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"position", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"probability", ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "\[LessEqual]", "0.00995017"}], "&"}], ")"}]}]}], 
        "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"find", " ", "positions", " ", "of", " ", "successful", " ", 
         RowBox[{"dissociations", ".", " ", "Prob"}]}], " ", "=", " ", 
        RowBox[{"1", " ", "-", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"koff", " ", "*", " ", "\[Delta]t"}], ")"}]}], "]"}]}]}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dissocligand", " ", "=", " ", 
       RowBox[{
        RowBox[{"boundSpecies", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"Flatten", "@", "position"}], "]"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "find", " ", "all", " ", "the", " ", "ligands", " ", "that", " ", 
        "have", " ", "been", " ", "dissociated"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"membraneInd", " ", "=", " ", 
       RowBox[{"Replace", "[", 
        RowBox[{"membraneInd", ",", 
         RowBox[{
          RowBox[{"PatternSequence", "[", 
           RowBox[{"x_Integer", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p1_", ",", "p2_"}], "}"}], ",", "1", ",", 
              RowBox[{"Alternatives", "@@", "dissocligand"}], ",", 
              "ligandname"}], "}"}]}], "]"}], "\[RuleDelayed]", " ", 
          RowBox[{"(", 
           RowBox[{"x", " ", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p1", ",", "p2"}], "}"}], ",", "0", ",", "None", ",", 
              "None"}], "}"}]}], ")"}]}], ",", "1"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "freeing", " ", "up", " ", "the", " ", "membrane", " ", "receptors", 
        " ", "available", " ", "for", " ", "successful", " ", 
        "dissociations"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ligandList", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Fold", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Insert", "[", 
             RowBox[{"#1", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"dissociateCoord", "[", 
                 RowBox[{
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", "unbindingrad"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"-", "1"}]}], "]"}], "&"}], ",", "ligandList", ",", 
           RowBox[{"boundSpecies", "[", 
            RowBox[{"[", 
             RowBox[{"Flatten", "@", "position"}], "]"}], "]"}]}], "]"}], " ",
          ",", "First"}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "adding", " ", "the", " ", "ligand", " ", "back", " ", "to", " ", 
        "the", " ", "ligand", " ", "list", " ", "together", " ", "with", " ", 
        "its", " ", "position"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"membraneInd", ",", "ligandList"}], "}"}]}]}], "  ", 
    RowBox[{"(*", " ", 
     RowBox[{"sending", " ", "the", " ", "updated", " ", 
      RowBox[{"{", 
       RowBox[{"membraneindex", ",", " ", "ligandlist", ",", "ligandindex"}], 
       "}"}], " ", "out", " ", "of", " ", "module"}], " ", "*)"}], 
    "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"membraneind", ",", "ligandname", ",", "3"}], "]"}], ">", "0", 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "run", " ", "only", " ", "if", " ", "the", " ", "particular", " ", 
      "ligand", " ", "bound"}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6890830883834543`*^9, 3.6890831001258383`*^9}, {
   3.6890831706657286`*^9, 3.6890831833609395`*^9}, {3.689083221744999*^9, 
   3.6890832295241947`*^9}, {3.6890832598370175`*^9, 
   3.6890832698017197`*^9}, {3.6890833012590075`*^9, 3.689083323788252*^9}, {
   3.689084263735565*^9, 3.689084280145955*^9}, {3.6890843135472455`*^9, 
   3.689084353675317*^9}, {3.689085041735279*^9, 3.689085296869334*^9}, {
   3.689085334046743*^9, 3.689085529068557*^9}, {3.689085590444647*^9, 
   3.6890856589065037`*^9}, {3.689085712558285*^9, 3.6890857489007025`*^9}, {
   3.6890859593516293`*^9, 3.689086007900046*^9}, {3.689086071289113*^9, 
   3.6890860732043705`*^9}, {3.68910647229241*^9, 3.6891064804452186`*^9}, {
   3.6891065219700513`*^9, 3.689106526406112*^9}, {3.689106675885251*^9, 
   3.6891067924882827`*^9}, {3.6891068398619323`*^9, 3.6891068439583006`*^9}, 
   3.6891069003403883`*^9, {3.6891070205771694`*^9, 3.6891070332311926`*^9}, {
   3.6891072671550283`*^9, 3.689107274423048*^9}, {3.689108155773509*^9, 
   3.689108155873389*^9}, {3.689110871763006*^9, 3.6891108739318347`*^9}, 
   3.689110904075761*^9, {3.6891110388358746`*^9, 3.689111039534438*^9}, {
   3.6891115704124002`*^9, 3.6891115944524803`*^9}, {3.689111711411474*^9, 
   3.6891117344221096`*^9}, 3.6891122596695023`*^9, {3.6891659584656277`*^9, 
   3.6891659677991996`*^9}, {3.6891667643983765`*^9, 3.6891668179212065`*^9}, 
   3.689166889727294*^9, {3.6891692473443937`*^9, 3.6891692556676292`*^9}, 
   3.689169946528355*^9, {3.689264957756592*^9, 3.6892649579035716`*^9}, {
   3.6892654906759377`*^9, 3.6892654919444504`*^9}, 3.689374713783906*^9, {
   3.689375028495329*^9, 3.6893750295874863`*^9}, {3.6893751348974*^9, 
   3.6893751353185616`*^9}, {3.6893753307354407`*^9, 3.689375340704048*^9}, {
   3.689375414271017*^9, 3.689375414370969*^9}, {3.6893756328965096`*^9, 
   3.6893756419398003`*^9}, 3.6895113878635263`*^9, {3.6895131154063387`*^9, 
   3.6895131216715446`*^9}, {3.689513684043231*^9, 3.68951370567029*^9}, {
   3.689513769021243*^9, 3.6895137714501243`*^9}, 3.6895139873434205`*^9, 
   3.689515841975286*^9, {3.6895158789517193`*^9, 3.6895158888342886`*^9}, {
   3.6895168544718795`*^9, 3.6895169003781624`*^9}, {3.689519518615824*^9, 
   3.689519519599579*^9}, {3.689520942898498*^9, 3.6895209440136604`*^9}, {
   3.6895316409722867`*^9, 3.689531643155753*^9}, {3.6895414833629184`*^9, 
   3.6895414842630234`*^9}, {3.6895417346518493`*^9, 
   3.6895417396976795`*^9}, {3.689542012119665*^9, 3.689542016118353*^9}, {
   3.6895421267650194`*^9, 3.689542129427148*^9}, {3.6895539138379655`*^9, 
   3.689553915853386*^9}, {3.689554465053569*^9, 3.689554484012016*^9}, {
   3.68955722677054*^9, 3.689557227023576*^9}, {3.6895580605307856`*^9, 
   3.6895580897273393`*^9}, {3.6895581500083947`*^9, 3.689558151776163*^9}, {
   3.6896101689151077`*^9, 3.6896101795946455`*^9}, {3.6896102138194375`*^9, 
   3.68961021587121*^9}, {3.6896107980335283`*^9, 3.6896108599111614`*^9}, {
   3.68970874520971*^9, 3.6897087465063457`*^9}, {3.689709840924893*^9, 
   3.689709864426357*^9}, {3.689710387375425*^9, 3.689710390307808*^9}, {
   3.6897127388475204`*^9, 3.6897127509861155`*^9}, {3.6897128661032777`*^9, 
   3.689712878542594*^9}, {3.689713376513117*^9, 3.689713383543293*^9}, {
   3.6897134225593367`*^9, 3.6897134255278053`*^9}, {3.6897135653166428`*^9, 
   3.6897135993431635`*^9}, 3.689713727109234*^9, {3.689719094914816*^9, 
   3.6897191012813954`*^9}, 3.689719337817085*^9, 3.6897212130802336`*^9, {
   3.689721451440507*^9, 3.6897214550562124`*^9}, {3.6897215431300197`*^9, 
   3.689721556042739*^9}, {3.689753610511204*^9, 3.689753615225629*^9}, {
   3.6897562965171022`*^9, 3.689756314512783*^9}, {3.689761711566434*^9, 
   3.68976182176138*^9}, {3.689762219403458*^9, 3.6897624617484474`*^9}, {
   3.689762588967354*^9, 3.689762608846407*^9}, 3.690109635614379*^9, {
   3.6901960777619605`*^9, 3.690196091289353*^9}, {3.6902142554747276`*^9, 
   3.6902142565752144`*^9}, 3.690376630314475*^9, 3.6903796513228884`*^9, 
   3.690379819459612*^9, 3.690452424282899*^9, {3.6921816588911304`*^9, 
   3.692181660075794*^9}, {3.6921818304944153`*^9, 3.6921818419435697`*^9}, {
   3.6921818771156797`*^9, 3.692181942727373*^9}, {3.6921820605471954`*^9, 
   3.6921820873922434`*^9}, {3.6921824064141984`*^9, 3.692182407882794*^9}, {
   3.692611968421336*^9, 3.692611982865757*^9}, {3.692612013712931*^9, 
   3.692612048863812*^9}, {3.6926209973697343`*^9, 3.692621000884308*^9}, {
   3.692633312246311*^9, 3.6926333133769774`*^9}, {3.692634145938246*^9, 
   3.6926341463880544`*^9}, {3.692634301850299*^9, 3.692634331312028*^9}, {
   3.692692884755207*^9, 3.692692889206979*^9}, {3.692704291223631*^9, 
   3.6927043019754477`*^9}, {3.692978969561159*^9, 3.6929790539664955`*^9}, {
   3.6929826004013367`*^9, 3.69298263466637*^9}, {3.692996435101632*^9, 
   3.6929964358701057`*^9}, 3.6929991160744457`*^9, 3.6930118852325597`*^9, 
   3.6930128152142344`*^9, 3.693097281466355*^9, {3.693105326622604*^9, 
   3.693105360214017*^9}, {3.693132303031089*^9, 3.693132319920803*^9}, 
   3.693133595164405*^9, 3.6931503659091144`*^9, 3.693502680981826*^9, {
   3.6943743258489757`*^9, 3.6943743613303285`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["production of ligands", "Subsection",
 CellChangeTimes->{{3.6925385256399207`*^9, 3.6925385374507666`*^9}, {
  3.692555091443239*^9, 3.6925551053215413`*^9}, {3.6925551436264367`*^9, 
  3.692555169284423*^9}, {3.6925556585847063`*^9, 3.6925556639533167`*^9}, {
  3.6926060227623353`*^9, 3.6926060242303653`*^9}, {3.692606083982557*^9, 
  3.692606088800552*^9}, {3.692995553848465*^9, 3.6929955615319157`*^9}, {
  3.694946190992381*^9, 3.694946197243766*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"produceParticles", "[", 
   RowBox[{
   "nodInteracting_", ",", "receptorList_", ",", "nodalList_", ",", 
    "leftyList_", ",", "countNod_", ",", "countLeft_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "receptorsInterActing", ",", "newLigandPos", ",", " ", "newLigandnum", 
       ",", " ", "cN", " ", ",", "cL", " ", ",", "NodalList", ",", 
       "LeftyList", ",", "cBCN", ",", "cBCL"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<ligand-receptor in produceParticles: \>\"", ",", 
         "nodInteracting"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"receptorsInterActing", " ", "=", " ", 
       RowBox[{"nodInteracting", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newLigandnum", " ", "=", " ", 
       RowBox[{"Length", "@", "receptorsInterActing"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newLigandPos", "=", 
       RowBox[{
        RowBox[{"receptorList", "[", 
         RowBox[{"[", "receptorsInterActing", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cN", " ", "=", " ", 
       RowBox[{"countNod", " ", "+", " ", "newLigandnum"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cL", " ", "=", " ", 
       RowBox[{"countLeft", " ", "+", " ", "newLigandnum"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"cN", ",", "\"\< : \>\"", ",", "receptorsInterActing"}], 
         "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"NodalList", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"nodalList", ",", 
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"countNod", "+", "1"}], ",", "cN"}], "]"}], ",", 
            "newLigandPos"}], "}"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LeftyList", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"leftyList", ",", 
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"countLeft", "+", "1"}], ",", "cL"}], "]"}], ",", " ", 
            "newLigandPos"}], "}"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"NodalList", ",", "LeftyList", ",", "cN", ",", "cL"}], 
       "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "@", "nodInteracting"}], ">", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.690093543913889*^9, 3.6900935743389874`*^9}, {
   3.6900936516171227`*^9, 3.6900936756301956`*^9}, {3.690093715704155*^9, 
   3.6900937601431756`*^9}, {3.6900937952058477`*^9, 
   3.6900938018902483`*^9}, {3.6900940473508005`*^9, 3.690094097339385*^9}, {
   3.690094139177047*^9, 3.690094153844398*^9}, {3.69009436772394*^9, 
   3.69009439445253*^9}, {3.690094425345738*^9, 3.690094444791791*^9}, {
   3.6900944854824758`*^9, 3.690094519176199*^9}, {3.6900963954439373`*^9, 
   3.690096425730215*^9}, {3.6900964655561333`*^9, 3.6900964660028024`*^9}, {
   3.690096601350859*^9, 3.6900966356819706`*^9}, {3.6900967679366927`*^9, 
   3.69009684822643*^9}, {3.690096900722103*^9, 3.690096933907445*^9}, {
   3.690096985627864*^9, 3.690096998360712*^9}, {3.6900970640437126`*^9, 
   3.690097093649246*^9}, {3.690097128829703*^9, 3.690097188027073*^9}, {
   3.6900972539243174`*^9, 3.690097319929702*^9}, {3.6900973543607097`*^9, 
   3.6900975306398983`*^9}, {3.6900975790626497`*^9, 
   3.6900977034979258`*^9}, {3.6900977643492775`*^9, 
   3.6900978999034643`*^9}, {3.6901031985112467`*^9, 3.690103220054453*^9}, {
   3.690103313150947*^9, 3.69010331385071*^9}, {3.690103538010497*^9, 
   3.6901035695977*^9}, {3.690103894008129*^9, 3.6901038948551807`*^9}, {
   3.6901041585361156`*^9, 3.6901041681503425`*^9}, 3.690104275050495*^9, 
   3.6901044137173347`*^9, {3.6901049010785275`*^9, 3.6901049633632126`*^9}, {
   3.690105280924305*^9, 3.6901052947524214`*^9}, {3.6901057996460953`*^9, 
   3.6901058045966263`*^9}, {3.690106359888359*^9, 3.6901063854626107`*^9}, {
   3.6901065614620934`*^9, 3.6901065617149887`*^9}, {3.6901082466214256`*^9, 
   3.690108249469488*^9}, {3.6901084972779636`*^9, 3.69010849866226*^9}, 
   3.6901092468086305`*^9, {3.6901122966424894`*^9, 3.6901123180377893`*^9}, {
   3.69011241312984*^9, 3.6901125086801653`*^9}, {3.6901126322204742`*^9, 
   3.6901126891798944`*^9}, {3.690114271854701*^9, 3.690114311859515*^9}, {
   3.690115239241167*^9, 3.690115245370191*^9}, {3.690115285191497*^9, 
   3.6901153002553077`*^9}, {3.690115499653105*^9, 3.6901155020370216`*^9}, {
   3.6901155499684334`*^9, 3.6901155734669914`*^9}, {3.6901158204311333`*^9, 
   3.690115822829733*^9}, {3.6901391420844655`*^9, 3.6901391471296444`*^9}, {
   3.6901417749053073`*^9, 3.690141797402643*^9}, {3.6902295320999465`*^9, 
   3.690229567194776*^9}, {3.690292673056202*^9, 3.690292674371603*^9}, {
   3.6902927826626496`*^9, 3.6902927830311694`*^9}, {3.6902928610199056`*^9, 
   3.690292899265313*^9}, {3.6902929598127937`*^9, 3.690292974339944*^9}, {
   3.690293197653469*^9, 3.690293199900116*^9}, 3.6902932562216234`*^9, {
   3.690293293822583*^9, 3.690293306824442*^9}, {3.690293433773181*^9, 
   3.690293434808448*^9}, 3.6903766303301177`*^9, 3.6903796513348885`*^9, {
   3.690379819464627*^9, 3.6903798720458097`*^9}, {3.6903956690452766`*^9, 
   3.690395687624586*^9}, {3.690396375050191*^9, 3.690396408745453*^9}, {
   3.6904522642063704`*^9, 3.690452279567745*^9}, {3.69045233427613*^9, 
   3.690452354217494*^9}, {3.6904523842616253`*^9, 3.690452457171006*^9}, {
   3.6904581124267836`*^9, 3.690458116051732*^9}, {3.6904657764044094`*^9, 
   3.6904659428111305`*^9}, {3.6949493785947943`*^9, 3.694949389296722*^9}, {
   3.69494956245576*^9, 3.6949495802949333`*^9}, {3.6949498074581385`*^9, 
   3.6949499590234966`*^9}, {3.6949499970554256`*^9, 
   3.6949500094061184`*^9}, {3.6949503281157217`*^9, 3.694950341012196*^9}, {
   3.694950780520563*^9, 3.6949507904323263`*^9}, {3.6949514802862854`*^9, 
   3.694951501117722*^9}, {3.6949546198955307`*^9, 3.6949546321603518`*^9}, {
   3.694954671095537*^9, 3.694954691856137*^9}, {3.694954797136718*^9, 
   3.694954798237123*^9}, {3.6949548888479013`*^9, 3.6949549597233825`*^9}, {
   3.694956786354193*^9, 3.694956811595123*^9}, {3.6949568802875757`*^9, 
   3.6949568824556656`*^9}, {3.694956938317823*^9, 3.694956970558071*^9}, {
   3.694957176078762*^9, 3.694957210491496*^9}, {3.6949605452094145`*^9, 
   3.69496054547794*^9}, {3.6949610182166405`*^9, 3.694961071029101*^9}, {
   3.694961356763517*^9, 3.69496136516228*^9}, {3.694961402911203*^9, 
   3.694961420542437*^9}, {3.6949617012159853`*^9, 3.694961742496498*^9}, {
   3.694963324166787*^9, 3.6949633271514597`*^9}, {3.694963545534069*^9, 
   3.694963578423185*^9}, {3.694963627969321*^9, 3.6949637125085754`*^9}, {
   3.6949637501428566`*^9, 3.69496383897429*^9}, {3.6949641320780087`*^9, 
   3.6949641546575413`*^9}, {3.694964260486452*^9, 3.694964261691197*^9}, {
   3.694964617059304*^9, 3.6949646210569515`*^9}, {3.6949647046203847`*^9, 
   3.6949647289264207`*^9}, {3.6949648910391607`*^9, 3.694964897710081*^9}, {
   3.694965198993515*^9, 3.694965200924507*^9}, {3.6949652675428257`*^9, 
   3.694965271236272*^9}, 3.6949666955174675`*^9, {3.6949668012395115`*^9, 
   3.694966974768814*^9}, 3.694967167061554*^9, {3.694967228849798*^9, 
   3.694967243935793*^9}, {3.6949700289962783`*^9, 3.6949700337608457`*^9}, {
   3.6949722424947844`*^9, 3.694972242689791*^9}, {3.6949741482157617`*^9, 
   3.694974161875228*^9}, {3.694974208145934*^9, 3.69497422099849*^9}, {
   3.6949742840085874`*^9, 3.694974319425973*^9}, {3.6949743603214364`*^9, 
   3.694974368885522*^9}, {3.69497527437127*^9, 3.6949753687352686`*^9}, {
   3.6949760494040856`*^9, 3.694976052124832*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["core ", "Section",
 CellChangeTimes->{{3.692538489329556*^9, 3.6925384939428205`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BrownianSimulation", "[", 
   RowBox[{
   "receptors_", ",", "receptorpts_", ",", "ligandsnod_", ",", "ligandsleft_",
     ",", "maxindexnod_", ",", "maxindexleft_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"receptorstruct", "=", " ", "receptors"}], ",", "interactions", 
      ",", " ", 
      RowBox[{"nodal", " ", "=", " ", "ligandsnod"}], ",", 
      RowBox[{"lefty", " ", "=", " ", "ligandsleft"}], ",", "nodalthread", 
      ",", "leftythread", ",", "interactingNodalReceptor", ",", 
      "interactingLeftyReceptor", ",", "maxindexN", " ", ",", "maxindexL"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"diffuse", " ", "the", " ", "particles"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nodal", ",", "lefty"}], "}"}], " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "#"}], "\[NotEqual]", " ", "0"}], ",", 
           RowBox[{"BrownianFunc", "[", "#", "]"}], ",", "#"}], "]"}], "&"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"nodal", ",", "lefty"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"check", " ", "the", " ", "boundary", " ", "conditions"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nodalthread", ",", "leftythread"}], "}"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"BCchecks", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"nodal", ",", "lefty"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", " ", "interacting"}]}], " ", "pairs", " ", "of", " ", 
       "nodal", " ", "and", " ", 
       RowBox[{"lefty", " ", "--"}], 
       RowBox[{"--", "--"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interactingNodalReceptor", ",", "interactingLeftyReceptor"}], 
       "}"}], "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nearestFunction", "[", 
            RowBox[{
            "#1", ",", "#2", ",", "receptorstruct", ",", "receptorpts"}], 
            "]"}], "/.", 
           RowBox[{
            RowBox[{"nearestFunction", "[", 
             RowBox[{"x_", ",", "__"}], "]"}], "\[RuleDelayed]", " ", 
            RowBox[{"{", "}"}]}]}], ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"nodalthread", ",", "leftythread"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.00892", ",", "0.00390717"}], "}"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "biasing", " ", "a", " ", "receptor", " ", "shared", " ", "by", " ", 
       "both", " ", "ligands"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"interactingNodalReceptor", ",", "interactingLeftyReceptor"}], 
       "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"biasSharedReceptors", "[", 
         RowBox[{
         "interactingNodalReceptor", ",", "interactingLeftyReceptor"}], "]"}],
         ")"}], "/.", 
       RowBox[{
        RowBox[{"biasSharedReceptors", "[", "pattern__", "]"}], 
        "\[RuleDelayed]", " ", 
        RowBox[{"{", "pattern", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", " ", "binding"}]}]}], " ", 
       RowBox[{
        RowBox[{
         RowBox[{"mechanics", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nodalthread", ",", "receptorstruct"}], "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"interAct", "[", "##", "]"}], "&"}], "@@", 
         RowBox[{"{", 
          RowBox[{
          "nodalthread", ",", "receptorstruct", ",", 
           "interactingNodalReceptor", ",", "\"\<nodal\>\""}], "}"}]}], ")"}],
        "/.", 
       RowBox[{
        RowBox[{"interAct", "[", 
         RowBox[{"patt__", ",", "y_", ",", "z_"}], "]"}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"leftythread", ",", "receptorstruct"}], "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"interAct", "[", "##", "]"}], "&"}], "@@", 
         RowBox[{"{", 
          RowBox[{
          "leftythread", ",", "receptorstruct", ",", 
           "interactingLeftyReceptor", ",", "\"\<lefty\>\""}], "}"}]}], ")"}],
        "/.", 
       RowBox[{
        RowBox[{"interAct", "[", 
         RowBox[{"patt__", ",", "y_", ",", "z_"}], "]"}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", " ", "unbinding"}]}]}], " ", 
       RowBox[{
        RowBox[{
         RowBox[{"mechanics", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"receptorstruct", ",", "nodalthread"}], "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"unbindingMechanics", "[", 
         RowBox[{
         "receptorstruct", ",", "nodalthread", ",", "\"\<nodal\>\"", ",", 
          "0.01264"}], "]"}], ")"}], "/.", 
       RowBox[{
        RowBox[{"unbindingMechanics", "[", 
         RowBox[{"patt__", ",", "x_", ",", "y_"}], "]"}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"receptorstruct", ",", "leftythread"}], "}"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"unbindingMechanics", "[", 
         RowBox[{
         "receptorstruct", ",", "leftythread", ",", "\"\<lefty\>\"", ",", 
          "0.0001"}], "]"}], ")"}], "/.", 
       RowBox[{
        RowBox[{"unbindingMechanics", "[", 
         RowBox[{"patt__", ",", "x_", ",", "y_"}], "]"}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", " ", "ligand"}]}]}], " ", "production", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"event", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nodalthread", ",", "leftythread", ",", "maxindexN", ",", 
        "maxindexL"}], "}"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"produceParticles", "[", 
        RowBox[{
        "interactingNodalReceptor", ",", "receptorstruct", ",", "nodalthread",
          ",", "leftythread", ",", "maxindexnod", ",", "maxindexleft"}], 
        "]"}], "/.", 
       RowBox[{
        RowBox[{"produceParticles", "[", 
         RowBox[{"x_", ",", "y_", ",", "patt__"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"{", "patt", "}"}]}]}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "receptorstruct", ",", "receptorpts", ",", "nodalthread", ",", 
       "leftythread", ",", "maxindexN", ",", "maxindexL"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6925543112045727`*^9, 3.692554434763664*^9}, {
   3.692554647722584*^9, 3.692554684131895*^9}, 3.692554774133947*^9, {
   3.6925548893760033`*^9, 3.6925549067871966`*^9}, {3.6925550257007017`*^9, 
   3.6925550321146603`*^9}, 3.6925550732450724`*^9, {3.6925574919878955`*^9, 
   3.692557502640121*^9}, 3.692566807928445*^9, {3.692605614613536*^9, 
   3.69260568062059*^9}, 3.692605877566945*^9, {3.6926123839090242`*^9, 
   3.6926123914385524`*^9}, {3.6926124236132355`*^9, 
   3.6926124520512533`*^9}, {3.692612503010207*^9, 3.692612512790715*^9}, {
   3.6926125558095355`*^9, 3.6926125715958204`*^9}, {3.6926126959949627`*^9, 
   3.6926127123432817`*^9}, {3.6926128814030256`*^9, 
   3.6926130594121847`*^9}, {3.692613117540797*^9, 3.692613121155347*^9}, {
   3.6926131525621777`*^9, 3.692613169359136*^9}, {3.6926132278481426`*^9, 
   3.692613228716658*^9}, {3.692613301963354*^9, 3.6926133064422183`*^9}, {
   3.692613345536278*^9, 3.6926134301335945`*^9}, {3.6926135096653247`*^9, 
   3.69261351126933*^9}, {3.6926135706169896`*^9, 3.6926136096159744`*^9}, {
   3.6926136437387657`*^9, 3.692613670006584*^9}, {3.6926137410817823`*^9, 
   3.692613789687171*^9}, {3.692613872500772*^9, 3.6926141140330653`*^9}, {
   3.6926142128698196`*^9, 3.692614289836226*^9}, {3.692614416502389*^9, 
   3.6926144169802647`*^9}, {3.692614467919347*^9, 3.69261450422009*^9}, {
   3.6926146099994564`*^9, 3.69261464780755*^9}, {3.6926146836342735`*^9, 
   3.6926146859341216`*^9}, {3.692616457171949*^9, 3.6926164678390293`*^9}, {
   3.692616524252694*^9, 3.692616530414781*^9}, {3.69261968946215*^9, 
   3.6926196994301596`*^9}, {3.6926198637651825`*^9, 
   3.6926198663491077`*^9}, {3.692621390338344*^9, 3.6926214259462085`*^9}, {
   3.692621543172521*^9, 3.692621545888688*^9}, {3.6926215920482388`*^9, 
   3.692621597585388*^9}, {3.6926299184529715`*^9, 3.692629920837669*^9}, {
   3.692630099686372*^9, 3.692630103363843*^9}, {3.6926304515883484`*^9, 
   3.6926304545350447`*^9}, {3.6926305623857946`*^9, 
   3.6926305702469625`*^9}, {3.692630628486269*^9, 3.6926306781841145`*^9}, {
   3.692631591302009*^9, 3.692631652378191*^9}, {3.6926322707559834`*^9, 
   3.692632336294444*^9}, {3.692713056408431*^9, 3.692713057329753*^9}, {
   3.6927136220197706`*^9, 3.692713623567093*^9}, {3.6927147051476955`*^9, 
   3.6927148646514025`*^9}, {3.6927148990150967`*^9, 
   3.6927149329858484`*^9}, {3.6927149835036135`*^9, 
   3.6927150020713696`*^9}, {3.692715103665228*^9, 3.692715179053672*^9}, {
   3.692715323344327*^9, 3.692715327012861*^9}, {3.6927154621434345`*^9, 
   3.6927154771439724`*^9}, {3.692992923957551*^9, 3.692992954331413*^9}, {
   3.692993007566157*^9, 3.6929930646965885`*^9}, 3.692993099837758*^9, {
   3.6929941437286725`*^9, 3.6929941965739255`*^9}, 3.694368076091062*^9, {
   3.694368159769758*^9, 3.6943681659678392`*^9}, {3.6943708378389854`*^9, 
   3.6943708423149595`*^9}, {3.694372187093089*^9, 3.694372218003498*^9}, {
   3.694374398645754*^9, 3.694374444686632*^9}, {3.6943745878130426`*^9, 
   3.694374590590721*^9}, {3.6943746783087397`*^9, 3.6943746829870114`*^9}, {
   3.6943747958261347`*^9, 3.694374812278696*^9}, {3.6943748542180424`*^9, 
   3.6943748808994927`*^9}, {3.694374975137148*^9, 3.6943749950348825`*^9}, 
   3.694375027394891*^9, {3.6943822282394266`*^9, 3.6943822309754086`*^9}, {
   3.694382275290746*^9, 3.694382286038867*^9}, {3.6948620473265142`*^9, 
   3.6948620549000473`*^9}, {3.694949167522067*^9, 3.694949189951583*^9}, {
   3.694950018908913*^9, 3.694950024810338*^9}, {3.69495085455282*^9, 
   3.6949509380550632`*^9}, {3.6949510706592216`*^9, 
   3.6949510894602747`*^9}, {3.694951234796729*^9, 3.6949512429433365`*^9}, {
   3.694951532451686*^9, 3.694951554012546*^9}, {3.69495471159906*^9, 
   3.6949547175203133`*^9}, 3.694954784358685*^9, {3.6949567762150517`*^9, 
   3.6949567806546707`*^9}, {3.6949605685641108`*^9, 3.694960588312335*^9}, 
   3.6949606208152637`*^9, {3.6949607028076797`*^9, 3.6949607635388875`*^9}, {
   3.6949608361230125`*^9, 3.6949608554516745`*^9}, {3.6949629814688716`*^9, 
   3.6949629861312714`*^9}, {3.6949630285248065`*^9, 3.694963171028064*^9}, {
   3.6949632048437386`*^9, 3.6949634821149473`*^9}, {3.694964050266223*^9, 
   3.6949640672449813`*^9}, {3.6949641886910334`*^9, 3.69496419701836*^9}, 
   3.6949643778645267`*^9, {3.6949651822841425`*^9, 3.6949651915269184`*^9}, {
   3.694965277542889*^9, 3.6949652793745394`*^9}, {3.694966455930684*^9, 
   3.694966484692197*^9}, {3.6949665233223815`*^9, 3.6949665292890997`*^9}, {
   3.694969996192626*^9, 3.6949700206751604`*^9}, {3.6949700590386467`*^9, 
   3.6949700973913345`*^9}, {3.6949703753824005`*^9, 
   3.6949703792827115`*^9}, {3.694975827251136*^9, 3.6949758414547715`*^9}, {
   3.694976249899232*^9, 3.6949762768741674`*^9}, {3.694976453272896*^9, 
   3.694976455389518*^9}, 3.6949767088651857`*^9, {3.694976952618206*^9, 
   3.6949769599323483`*^9}, {3.6949786403626986`*^9, 3.6949786423304834`*^9}, 
   3.6949791414130373`*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell["graph state", "Subsection",
 CellChangeTimes->{{3.6926122295401745`*^9, 3.692612231593137*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphState", "[", 
   RowBox[{
   "receptors_", ",", "nodal_", ",", "lefty_", ",", "boundnod_", ",", 
    "boundleft_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nodalpts", " ", "=", " ", "nodal"}], ",", 
      RowBox[{"leftypts", "=", "lefty"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6932", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.6932", ",", "0.6932"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.6932"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"PointSize", "[", "0.007", "]"}], ",", 
        RowBox[{"Darker", "@", "Green"}], ",", 
        RowBox[{"Point", "@", "leftypts"}], ",", 
        RowBox[{"Darker", "@", "Blue"}], ",", 
        RowBox[{"Point", "@", "nodalpts"}], ",", "Red", ",", 
        RowBox[{"Point", "@", "receptors"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PointSize", "[", "0.009", "]"}], ",", "Purple", ",", 
        RowBox[{"Point", "@", "boundnod"}], ",", "Orange", ",", 
        RowBox[{"Point", "@", "boundleft"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.692612240671135*^9, 3.6926122468801823`*^9}, {
   3.692612306997155*^9, 3.69261230912786*^9}, 3.6926174343389316`*^9, {
   3.6926174722077174`*^9, 3.6926174733448534`*^9}, {3.6926206846682744`*^9, 
   3.692620685968135*^9}, {3.6926221982670064`*^9, 3.6926222032380085`*^9}, 
   3.6926225304017763`*^9, {3.6926225642151456`*^9, 3.692622566176902*^9}, {
   3.692629111997639*^9, 3.692629124325635*^9}, {3.6926308821785574`*^9, 
   3.69263091858292*^9}, {3.692630998798727*^9, 3.6926310062274523`*^9}, {
   3.692631043372387*^9, 3.692631084549396*^9}, {3.692632516329062*^9, 
   3.692632550125393*^9}, {3.69299218715532*^9, 3.6929921962886033`*^9}, {
   3.6929963376437073`*^9, 3.692996357655407*^9}, {3.692997092804805*^9, 
   3.692997102524169*^9}, {3.6929972814785857`*^9, 3.692997286359871*^9}, {
   3.6930000376708193`*^9, 3.693000037674331*^9}, {3.693000224312718*^9, 
   3.6930002243162203`*^9}, {3.693000269446515*^9, 3.6930002694495163`*^9}, {
   3.6943703115368667`*^9, 3.6943703155519114`*^9}, {3.6943706813901715`*^9, 
   3.6943707135252647`*^9}, {3.694371779493271*^9, 3.6943717998175344`*^9}, {
   3.6943719891453247`*^9, 3.694371995445811*^9}, {3.694372042389436*^9, 
   3.6943720524527864`*^9}, {3.6943735198311577`*^9, 3.69437355119293*^9}, 
   3.694373608201269*^9, {3.694373684079381*^9, 3.6943736857107773`*^9}, {
   3.6943737410931063`*^9, 3.694373744338677*^9}, {3.6943737825080414`*^9, 
   3.6943737903428774`*^9}, {3.6943738237991133`*^9, 3.694373824303668*^9}, {
   3.6943738689591947`*^9, 3.6943739042212768`*^9}, {3.6943739966540136`*^9, 
   3.6943739968228116`*^9}, {3.6943740506481094`*^9, 3.694374050995171*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["code execution", "Section",
 CellChangeTimes->{{3.6925384994099603`*^9, 3.6925385087393465`*^9}, {
  3.6926060745389824`*^9, 3.692606076653994*^9}, {3.6926148649774942`*^9, 
  3.692614873941062*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sim", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"particlenum", " ", "=", " ", "19"}], ",", " ", 
       RowBox[{"receptornum", " ", "=", " ", "400"}], ",", 
       RowBox[{"receptordist", " ", "=", " ", "0.03466"}], ",", " ", 
       RowBox[{"nSteps", "=", "5000"}], ",", 
       RowBox[{"widthsim", " ", "=", " ", "0.6932"}], ",", 
       RowBox[{"heightsim", " ", "=", " ", "0.6932"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "receptors", ",", " ", "nodalligand", ",", "leftyligand", ",", 
         "nodalstruct", ",", "leftystruct", ",", "receptorstruct", ",", " ", 
         "temp", ",", " ", "boundn", ",", "boundl", ",", "g", ",", 
         "lefttracklist", ",", "nodtracklist", ",", "nodinlist", ",", 
         "leftinlist", ",", "clistnod", ",", "clistleft", ",", "clistn", ",", 
         "clistl", ",", "posn", ",", "posl", ",", "countN", ",", "countL"}], 
        "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[ScriptCapitalR]", "2"], "=", " ", 
         RowBox[{"BoundaryMeshRegion", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"widthsim", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"widthsim", ",", "heightsim"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "heightsim"}], "}"}]}], "}"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "1"}], "}"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"receptors", "=", 
         RowBox[{"RandomPoint", "[", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalR]", "2"], ",", "receptornum"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nodalligand", "=", "  ", 
         RowBox[{"RandomPoint", "[", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalR]", "2"], ",", "particlenum"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"leftyligand", "=", "  ", 
         RowBox[{"RandomPoint", "[", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalR]", "2"], ",", "particlenum"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"countN", " ", "=", " ", 
         RowBox[{"Length", "@", "nodalligand"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"countL", " ", "=", " ", 
         RowBox[{"Length", "@", "leftyligand"}]}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"Print", "@", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"widthsim", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"widthsim", ",", "heightsim"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "heightsim"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"PointSize", "[", "0.007", "]"}], ",", 
             RowBox[{"Darker", "@", "Blue"}], ",", 
             RowBox[{"Point", "@", "nodalligand"}], ",", 
             RowBox[{"Darker", "@", "Green"}], ",", 
             RowBox[{"Point", "@", "leftyligand"}], ",", "Red", ",", 
             RowBox[{"Point", "@", "receptors"}]}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"nodalstruct", " ", "=", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<nodal\>\"", ",", "#1"}], "}"}]}], "&"}], ",", 
            "nodalligand"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"leftystruct", " ", "=", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<lefty\>\"", ",", "#1"}], "}"}]}], "&"}], ",", 
            "leftyligand"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"receptorstruct", " ", "=", " ", 
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{"#1", ",", "0", ",", "None", ",", "None"}], "}"}]}], 
            "&"}], ",", "receptors"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Monitor", "[", 
          RowBox[{
           RowBox[{"Reap", "[", "\[IndentingNewLine]", 
            RowBox[{"Nest", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"temp", " ", "=", " ", 
                  RowBox[{"BrownianSimulation", "@@", "#"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"boundn", " ", "=", " ", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"patt", ":", 
                    RowBox[{"PatternSequence", "[", 
                    RowBox[{"_", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", "_", ",", "_", ",", 
                    "\"\<nodal\>\""}], " ", "}"}]}], "]"}]}], 
                    "\[RuleDelayed]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ",", 
                    "2"}], "]"}]}], ";", 
                 RowBox[{"boundl", " ", "=", " ", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"patt", ":", 
                    RowBox[{"PatternSequence", "[", 
                    RowBox[{"_", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", "_", ",", "_", ",", 
                    "\"\<lefty\>\""}], " ", "}"}]}], "]"}]}], 
                    "\[RuleDelayed]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "3"}], "]"}], "]"}], ",", 
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], ",", 
                    "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"nodinlist", "=", 
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"leftinlist", " ", "=", " ", 
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "4", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"Sow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Length", "@", "nodinlist"}], ",", 
                    RowBox[{"Length", "@", "leftinlist"}], ",", 
                    RowBox[{"Length", "@", "boundn"}], ",", 
                    RowBox[{"Length", "@", "boundl"}]}], "}"}], "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"g", " ", "=", 
                  RowBox[{"graphState", "[", 
                   RowBox[{"receptors", ",", 
                    RowBox[{"nodinlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"leftinlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"boundn", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"boundl", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"Association", "@", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"\<nodal\>\"", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"Association", "@", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"\<lefty\>\"", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", "temp"}], ")"}], "&"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "receptorstruct", ",", "receptors", ",", "nodalstruct", ",", 
                "leftystruct", ",", "countN", ",", "countL"}], "}"}], ",", 
              "nSteps"}], "]"}], "]"}], "\[IndentingNewLine]", ",", "g"}], 
          "]"}], "//", "Quiet"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6926176497844334`*^9, 3.6926176724807625`*^9}, {
   3.6926177531104603`*^9, 3.6926179376218414`*^9}, {3.6926179703888884`*^9, 
   3.6926179913271704`*^9}, {3.6926180885535965`*^9, 
   3.6926182058323936`*^9}, {3.6926182655880203`*^9, 3.692618369959688*^9}, {
   3.692618793710271*^9, 3.692618817141079*^9}, {3.692618857390374*^9, 
   3.6926189206859503`*^9}, {3.692618990730153*^9, 3.6926191069086714`*^9}, {
   3.6926192051717777`*^9, 3.6926192291520653`*^9}, {3.692619313260974*^9, 
   3.692619388028164*^9}, {3.6926194460223203`*^9, 3.6926195944798803`*^9}, {
   3.692619651644617*^9, 3.6926196630131826`*^9}, {3.6926197181915207`*^9, 
   3.692619727428636*^9}, {3.692619917785845*^9, 3.6926199199474583`*^9}, {
   3.6926200629688644`*^9, 3.6926201112016783`*^9}, {3.6926202770726223`*^9, 
   3.692620288906313*^9}, {3.6926203295028915`*^9, 3.6926204461265545`*^9}, {
   3.6926206045107822`*^9, 3.6926206078258343`*^9}, {3.692620754927641*^9, 
   3.692620859382726*^9}, {3.692620914182828*^9, 3.692620916120285*^9}, {
   3.692621182342777*^9, 3.692621185611665*^9}, {3.6926212989276447`*^9, 
   3.6926213034453974`*^9}, {3.6926213798075976`*^9, 
   3.6926213837095723`*^9}, {3.6926219253044624`*^9, 
   3.6926219253891287`*^9}, {3.692621989098464*^9, 3.6926220353425813`*^9}, 
   3.692622069505989*^9, {3.6926221588550034`*^9, 3.6926221690849915`*^9}, {
   3.692622258666731*^9, 3.692622351569499*^9}, {3.6926224255203805`*^9, 
   3.6926224255830116`*^9}, {3.692622552832927*^9, 3.6926225543647776`*^9}, {
   3.6926225879727187`*^9, 3.692622624983721*^9}, {3.69262893681231*^9, 
   3.6926289696236362`*^9}, {3.6926293749752903`*^9, 3.6926293750755587`*^9}, 
   3.692629418512741*^9, {3.6926295097370844`*^9, 3.692629564348977*^9}, 
   3.6926299314362097`*^9, 3.6926300212637215`*^9, {3.692630317424904*^9, 
   3.692630320124576*^9}, {3.6926304655007415`*^9, 3.6926304912869296`*^9}, {
   3.6926305220630894`*^9, 3.6926305222004395`*^9}, {3.6926307145020156`*^9, 
   3.692630718018728*^9}, {3.6926307708909435`*^9, 3.6926308035870404`*^9}, {
   3.692630835750159*^9, 3.6926308361191173`*^9}, {3.692630930428837*^9, 
   3.692630976665943*^9}, {3.692631017409693*^9, 3.692631020878921*^9}, 
   3.6926311742647943`*^9, {3.692631209283281*^9, 3.69263120936759*^9}, {
   3.692631946590495*^9, 3.6926319570738735`*^9}, 3.692632200777199*^9, {
   3.692632369117037*^9, 3.6926324142401342`*^9}, {3.6926324463459997`*^9, 
   3.692632447261714*^9}, 3.6926325978257885`*^9, {3.6926329784459114`*^9, 
   3.692633001142372*^9}, {3.6926330545624185`*^9, 3.6926330646970034`*^9}, {
   3.6926333549872403`*^9, 3.692633366552476*^9}, {3.6926334698301277`*^9, 
   3.6926334757616777`*^9}, {3.692634349366013*^9, 3.6926343693631763`*^9}, {
   3.692635544468311*^9, 3.692635546399835*^9}, 3.692684203897884*^9, {
   3.6926842690550866`*^9, 3.6926842829277897`*^9}, {3.6926843833386335`*^9, 
   3.6926844555457706`*^9}, {3.6926891994764605`*^9, 
   3.6926891998762784`*^9}, {3.6926909058946033`*^9, 3.692690913544711*^9}, 
   3.6926909443426275`*^9, {3.6926910411545334`*^9, 3.6926910637230096`*^9}, {
   3.692691187775485*^9, 3.6926911904272904`*^9}, 3.692692551743823*^9, {
   3.692692907515839*^9, 3.6926929551782885`*^9}, {3.6926930192464666`*^9, 
   3.6926931003309317`*^9}, {3.692693164459138*^9, 3.692693199222269*^9}, {
   3.6926932421810026`*^9, 3.692693301506151*^9}, {3.6926934953091483`*^9, 
   3.692693573454054*^9}, {3.6926936650560913`*^9, 3.692693666227481*^9}, {
   3.692693696770446*^9, 3.692693696891245*^9}, {3.6926951665399504`*^9, 
   3.6926951682580256`*^9}, {3.6927070669204063`*^9, 3.692707079468647*^9}, {
   3.692707584107381*^9, 3.6927077261341267`*^9}, {3.692711108653058*^9, 
   3.6927111213912363`*^9}, {3.692711164577978*^9, 3.692711165628812*^9}, {
   3.692711819679804*^9, 3.6927118431536703`*^9}, {3.6927119083568325`*^9, 
   3.692711982453511*^9}, {3.6927120287311325`*^9, 3.692712029447981*^9}, {
   3.692714467217752*^9, 3.6927144989874153`*^9}, 3.6927145538037095`*^9, {
   3.692714591422683*^9, 3.6927146222913475`*^9}, 3.692714662456083*^9, {
   3.6927152294171257`*^9, 3.692715237429813*^9}, {3.6927152738290815`*^9, 
   3.692715303344428*^9}, 3.6927155371147118`*^9, {3.6927156684714594`*^9, 
   3.692715670702652*^9}, {3.692715720766226*^9, 3.6927157279671974`*^9}, {
   3.6927159982874827`*^9, 3.692716028533546*^9}, {3.6927161241078825`*^9, 
   3.6927161689909873`*^9}, {3.692716203780342*^9, 3.6927163250776443`*^9}, 
   3.6927163600104475`*^9, {3.6927207799692016`*^9, 3.6927208092329416`*^9}, {
   3.6927208485590086`*^9, 3.6927209848640146`*^9}, 3.6927211246372943`*^9, {
   3.692721164681935*^9, 3.692721164760174*^9}, {3.6927213006419296`*^9, 
   3.6927213159968004`*^9}, 3.692721701509497*^9, {3.692780606325874*^9, 
   3.692780607125702*^9}, 3.692780700215907*^9, {3.6929850304430532`*^9, 
   3.692985030842952*^9}, {3.692985197796705*^9, 3.6929852000123396`*^9}, {
   3.6929852802275968`*^9, 3.6929852805430846`*^9}, {3.692986923425478*^9, 
   3.692986938927523*^9}, {3.692986980361148*^9, 3.692987015207142*^9}, {
   3.6929871083855066`*^9, 3.6929871340725565`*^9}, {3.692987841518862*^9, 
   3.6929879048794355`*^9}, {3.6929880048524294`*^9, 3.692988019789658*^9}, {
   3.692988060610814*^9, 3.692988060663748*^9}, {3.692988132032321*^9, 
   3.6929881744438705`*^9}, {3.6929883100904517`*^9, 3.6929883269596505`*^9}, 
   3.6929883879074545`*^9, {3.6929884318491125`*^9, 3.692988445651466*^9}, 
   3.6929885429424667`*^9, {3.692989018309513*^9, 3.692989020192781*^9}, {
   3.692989060247015*^9, 3.692989141061593*^9}, {3.692989180594611*^9, 
   3.692989181194382*^9}, {3.6929892492142367`*^9, 3.6929892669794745`*^9}, {
   3.6929892997479563`*^9, 3.6929893486070137`*^9}, {3.6929893988462873`*^9, 
   3.6929894480929995`*^9}, {3.6929895729962273`*^9, 
   3.6929896210515585`*^9}, {3.692989715484589*^9, 3.692989764393735*^9}, {
   3.692989819167025*^9, 3.69298982338253*^9}, {3.6929898593472233`*^9, 
   3.692990232288079*^9}, {3.6929904611358776`*^9, 3.6929905702332993`*^9}, {
   3.6929906829107895`*^9, 3.6929906924669385`*^9}, {3.6929907333824205`*^9, 
   3.6929907748998084`*^9}, {3.692990869261766*^9, 3.692990871192871*^9}, {
   3.692990902609622*^9, 3.6929909069091015`*^9}, {3.692990948376337*^9, 
   3.6929910698135786`*^9}, {3.6929911445954933`*^9, 3.692991194551833*^9}, {
   3.6929912364213*^9, 3.6929912470731983`*^9}, {3.692991319639654*^9, 
   3.692991364246339*^9}, {3.6929914428400126`*^9, 3.6929914912071123`*^9}, {
   3.692991569241938*^9, 3.6929915860081873`*^9}, {3.6929919728352375`*^9, 
   3.692991992429404*^9}, 3.692992454944838*^9, {3.6929927179928207`*^9, 
   3.692992891520774*^9}, {3.6929942161510077`*^9, 3.6929942227718763`*^9}, {
   3.6929944215541353`*^9, 3.692994490149273*^9}, {3.6929945477297544`*^9, 
   3.69299466487716*^9}, {3.692994873717939*^9, 3.6929948928816614`*^9}, {
   3.6929949245084686`*^9, 3.6929949254296*^9}, {3.692994992609305*^9, 
   3.692995028953864*^9}, {3.692995159936841*^9, 3.6929951649871674`*^9}, 
   3.6929953561127996`*^9, {3.6929961925688725`*^9, 3.692996206149725*^9}, {
   3.692996551218215*^9, 3.692996552849167*^9}, 3.692996608308853*^9, 
   3.6929967353585434`*^9, {3.6929967934496756`*^9, 3.6929968028484783`*^9}, 
   3.6929968829435015`*^9, {3.692997052762515*^9, 3.69299706879332*^9}, {
   3.692997181856982*^9, 3.692997225075636*^9}, {3.6929973134438725`*^9, 
   3.6929973263117795`*^9}, 3.6929975902273445`*^9, 3.6929976587310085`*^9, {
   3.6929980191215196`*^9, 3.6929980192214794`*^9}, {3.692998077902752*^9, 
   3.692998078017745*^9}, {3.692998120428904*^9, 3.692998120760408*^9}, {
   3.692998697530004*^9, 3.69299869771432*^9}, {3.692999026562268*^9, 
   3.692999026777856*^9}, 3.692999178176374*^9, 3.692999214079857*^9, 
   3.6929996517161784`*^9, {3.6929997266014028`*^9, 3.692999727085409*^9}, {
   3.6929998000936165`*^9, 3.692999800569786*^9}, {3.6929998670062575`*^9, 
   3.6929998847901535`*^9}, {3.69299991806662*^9, 3.6929999250331354`*^9}, {
   3.693000273434194*^9, 3.6930002759442763`*^9}, {3.6930004136953435`*^9, 
   3.6930004148605967`*^9}, {3.693004154318336*^9, 3.693004170123826*^9}, {
   3.693005552443083*^9, 3.693005588551691*^9}, {3.6930056231879644`*^9, 
   3.69300575344851*^9}, {3.693005794298588*^9, 3.6930058385982523`*^9}, {
   3.6930058799651623`*^9, 3.6930059187339697`*^9}, {3.693005956760109*^9, 
   3.693005963142229*^9}, {3.693006012010195*^9, 3.693006031137537*^9}, {
   3.6930060744181833`*^9, 3.693006074718001*^9}, 3.693006309795155*^9, {
   3.693007143978511*^9, 3.693007145462787*^9}, {3.693011611243023*^9, 
   3.69301162570905*^9}, {3.693013252203422*^9, 3.6930132668330145`*^9}, {
   3.6931506260448313`*^9, 3.6931506322824793`*^9}, {3.6943648522478848`*^9, 
   3.694365071569313*^9}, {3.6943651227191*^9, 3.69436513311633*^9}, {
   3.6943654028702955`*^9, 3.694365405370117*^9}, {3.6943655944158506`*^9, 
   3.69436561518272*^9}, {3.6943665801024323`*^9, 3.694366597263073*^9}, {
   3.6943667446356683`*^9, 3.69436683555281*^9}, {3.694367014121108*^9, 
   3.6943670444377127`*^9}, {3.694367076069852*^9, 3.6943670881515417`*^9}, {
   3.6943671287631016`*^9, 3.694367171106721*^9}, {3.6943672155339794`*^9, 
   3.694367240929409*^9}, {3.694367405552683*^9, 3.6943674471291895`*^9}, {
   3.6943674821254263`*^9, 3.6943675879484897`*^9}, {3.694367680300701*^9, 
   3.694367693212634*^9}, {3.6943677546496134`*^9, 3.694367802646651*^9}, {
   3.694367874880101*^9, 3.6943679065930743`*^9}, {3.694368175088319*^9, 
   3.6943681970972915`*^9}, 3.6943683594701943`*^9, {3.694368687034706*^9, 
   3.694368737814351*^9}, {3.6943688256244917`*^9, 3.694368834893792*^9}, 
   3.6943688754835825`*^9, {3.694369352711873*^9, 3.6943693601312237`*^9}, {
   3.6943693969276953`*^9, 3.6943694117759633`*^9}, {3.694369451864422*^9, 
   3.6943694522645493`*^9}, {3.6943694943789735`*^9, 3.694369560621266*^9}, {
   3.694369839996176*^9, 3.6943698407317867`*^9}, {3.694369893904285*^9, 
   3.694369906670185*^9}, {3.694369949272833*^9, 3.6943699742910604`*^9}, 
   3.6943701561662755`*^9, {3.694370192637459*^9, 3.6943702251690345`*^9}, {
   3.6943703231361713`*^9, 3.6943703312055173`*^9}, 3.69437073949398*^9, {
   3.6943708584829893`*^9, 3.694370902513541*^9}, {3.69437140864534*^9, 
   3.694371450013873*^9}, {3.69437149131397*^9, 3.694371522340184*^9}, {
   3.6943715677906833`*^9, 3.6943715977004457`*^9}, {3.6943716603778715`*^9, 
   3.694371660509109*^9}, {3.6943718501952763`*^9, 3.6943718504480023`*^9}, {
   3.6943722965492077`*^9, 3.6943722966803937`*^9}, {3.6943821430758514`*^9, 
   3.694382143322802*^9}, {3.694954724095867*^9, 3.694954724264531*^9}, {
   3.694955703642226*^9, 3.6949557255070543`*^9}, {3.694960900252147*^9, 
   3.694960993028482*^9}, 3.694963850527877*^9, {3.6949638815441756`*^9, 
   3.6949638819545574`*^9}, {3.694963916116457*^9, 3.694963916738762*^9}, 
   3.694963959978532*^9, {3.694964011198044*^9, 3.6949640343024445`*^9}, {
   3.6949640718455973`*^9, 3.694964073607535*^9}, 3.694964210455759*^9, 
   3.694964335932333*^9, {3.6949644305101995`*^9, 3.6949644713231277`*^9}, {
   3.6949645329454737`*^9, 3.694964544517845*^9}, 3.694964696517518*^9, {
   3.694964766404132*^9, 3.6949648042466345`*^9}, 3.694965020984249*^9, {
   3.6949651951788654`*^9, 3.694965212505314*^9}, {3.6949672694208097`*^9, 
   3.694967293497091*^9}, {3.6949674278427086`*^9, 3.694967428026999*^9}, {
   3.694967564479001*^9, 3.694967570425255*^9}, {3.694969968436037*^9, 
   3.6949699857961316`*^9}, {3.6949703132739143`*^9, 3.694970313620848*^9}, {
   3.694970507120167*^9, 3.6949705478924274`*^9}, {3.6949706615895724`*^9, 
   3.6949706637736893`*^9}, {3.694970725387455*^9, 3.6949707391000576`*^9}, {
   3.6949708311008663`*^9, 3.6949708391332207`*^9}, 3.6949709809302607`*^9, {
   3.6949712338876657`*^9, 3.69497141420385*^9}, {3.69497149411473*^9, 
   3.694971557851045*^9}, 3.6949716081029353`*^9, {3.6949717762213793`*^9, 
   3.694971777390131*^9}, {3.6949721215775323`*^9, 3.6949721418637404`*^9}, {
   3.694972828734209*^9, 3.6949728290344224`*^9}, {3.694973195541749*^9, 
   3.6949731991392536`*^9}, {3.6949769287817116`*^9, 
   3.6949769320130634`*^9}, {3.69497864669144*^9, 3.6949786475596437`*^9}, {
   3.694979126299467*^9, 3.694979126963242*^9}, {3.694979242761709*^9, 
   3.6949792428617015`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{0, 0}, {0.6932, 0}, {0.6932, 0.6932}, {0, 0.6932}, {0, 0}}], 
   {RGBColor[0, 0, 
     NCache[
      Rational[2, 3], 0.6666666666666666]], PointSize[0.007], 
    PointBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAALNf0hzOu2T+EF4pjXyrVP4xoOfOH
LdQ/aLqhlLLG4j9cEzd0iJfRP4qOffp3TeI/dqv+fYfi4D+wEwqNVPPiP+ZI
fl3OguU/mE7WAsB9wz8IkeamrCTWPxaVfkf+rOI/nKN+8T4I3D+AKtrJy52r
P0AJFUgR8IQ/MEk9wNIcxj80bh6cHGDkP0QjFEsOjtU/Why5Sgds4T9whR2H
qmTQP6QlPzcP8t8/4JRMhdnE2j8IyjWN2+vbP0Q14GEY/Nc/UHZv9VMJ0D80
Wd8SfAzGP8ivnV4MPLM/BOU4Khwd0D8s6dF02GfdP4xlRJ1SiNU/NKWH00ey
3z/scwQrRnvZP/TlAvZsXNY/UK+G0OJx2z8gdRpsQXbGP0BOsAsWP8U/+g9c
3Ad30T8gHYqR2ibOPzJBkh0=
     "]], 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAhBiW6/gp5T/wpgz/suWwP0zYgYqJ
/uU/oGb15r34yD+q2Xyngk3iPzwxADo4aME/Jk6iCuYE4T8QYr7Z+wG3PzCh
/WmZeLw/IHOh+XBBzT/wkajfnk21P1xbykxJueI/ZhMxyr8o5D8sUaAOHG7S
P4CIFlvaWpY/+K0RLoFOsj9slQU5VvHXP/rVW4j9V+M/zGqr+tSQ1z9IIVFy
IofNP3jC1bIqENM//P9OV3p/2D9sR7tqJSnCP9AwhR99p7k/EO0A5CV5xD9g
yfSUPsauP6r+9FQVlNE/YM10EoN/lj8OKMDeEXHiP0BprOwPTuM/xHfuulec
4D8ka1DPZOPZP3AolzMv4as/5lOPp8VF4j96SkowQNvgPxQoiSF/Lco/+H/W
9VPzwT/Y/dk7eN3bP7gjnEg=
      "]]}, 
    {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
      "]]}}},
  ImageSize->Large]], "Print",
 CellChangeTimes->{
  3.6949714149568644`*^9, 3.694971558713182*^9, 3.694971611056421*^9, 
   3.694971777974778*^9, {3.6949721017229347`*^9, 3.6949721244340286`*^9}, 
   3.6949722727983203`*^9, 3.694972546504451*^9, 3.6949728319055176`*^9, 
   3.694973213253403*^9, 3.694973400933473*^9, {3.6949741678979344`*^9, 
   3.694974189917412*^9}, 3.6949742228988037`*^9, 3.6949742948700438`*^9, 
   3.6949743783848505`*^9, 3.694974572202921*^9, 3.694975396147673*^9, 
   3.6949758458170643`*^9, 3.6949762841874266`*^9, 3.6949767299933853`*^9, 
   3.6949775543073406`*^9, 3.6949781153751497`*^9, 3.6949782302671885`*^9, 
   3.694978606355275*^9, {3.6949786483441076`*^9, 3.6949786620064325`*^9}, {
   3.6949791101701345`*^9, 3.6949791436343946`*^9}, 3.694979244793293*^9, 
   3.6949792858491163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"#", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Darker", "@", "Green"}], ",", "Purple", ",", "Orange"}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<n time-step\>\"", ",", "\"\<population of molecules\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Nodal\>\"", ",", "\"\<Lefty\>\"", ",", "\"\<N-R\>\"", ",", 
        "\"\<L-R\>\""}], "}"}]}]}], "]"}], "&"}], "@", 
  RowBox[{"(", 
   RowBox[{"Thread", "@", 
    RowBox[{
     RowBox[{"sim", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.694970551461131*^9, 3.6949705559215975`*^9}, {
  3.694970675459021*^9, 3.694970691586583*^9}, {3.694970754196145*^9, 
  3.6949708268372617`*^9}, {3.6949709583019657`*^9, 3.6949709664846992`*^9}, {
  3.6949777316091394`*^9, 3.6949777975622387`*^9}, {3.6949778331830697`*^9, 
  3.6949779319128513`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
BzrAHwYfRDwfEft8q1Ps88GPgg95vos/Ji683wPxfxx8GPn4BNon4d8noX8E
+p+Cf92Qfxrtj8L+85D3QP4Z2D8G/jWxz3d7vT6KPyv2+fFx5Ptz0O+Dvc9D
/wT6/wL870d9fRH1chL8JcyPAdTfl6F/CvPlKxjfQfCvg08jv1+FPIV4vgY+
g/x8HfU4BP4G8nsW+fsmxmfY+5X4W+BzXu/E3/b+LR7x+if+DuTnIf8u5Gn4
8z34fwHxfx/1MYr6/w3wRcT/m7A/Bnu/Bb6E8fhttB9H/n8H/r4Af34X45+B
/Pewfl2G/u9DfwLyP4C/V1B/fwj5JPiPYO8q5sMfY75dgz9/gvivo37+FJwF
/xnq4QbG48/BU+j/LzDeN2HvL9F+GuP5V9C/Jfb9gb/2fi6+7f1c/DeI5w7a
/y3s52Dv76B/F/Pn72F/BvJ/gD/3xH6e+T+CZ9HfP8Gf+9D/Z8jnIP8XsZ/n
+kDs553+q9dbcd71Jf43sZ+/+hD6/w6eR3//IfbzYh9B/p/wd0Hs94v8F+SP
If9vyBeR7//B+DzB+Pwv5KHvPz06/z8gdn6XfD/Y/w9+P9h/EfiH0H4p7P8w
5MWQ/wh4mdjr9Y9+PxhPCfr/MbHHe7nYz8P9cXHh/QPQ/wnwCth/kdj5LoP+
T0J/pdjP1/0pseujHPzTsL8K+foZ5KMC+j+L8VqN/n8O/obBLwavEXt+/Dzk
lWI///gXkN+1aP+LYj+vuErs+fZLYj+veR3kvwx5NfhXxJ6f6zH+vwqOwP+X
wP8N8PeliKcG8peBNyJfL8d410L+CvS/CfJXQl6HeF4F+Wa0fzX6j6JeX4N6
2oJ6ei3yVQ97r0O9bQW/HtwAfgN4G/x5I+ZDI9aDN0F/O/TfjHhjyM9bkM8d
qKe3YnyboP82yHeift8ObkY9vUPs56vvAr8T/bWgv3fB3m7ovxvzJY74noF8
D+w/C/1WxPMe8F6xn/f+HOJpE/v58e+FfB/av0/s5923i/18+veL/f6O/WI/
D/8D4AT6/6DYz6s/gHx8SOzn83eg/YchPyj2+0Y+Au4U+/n8H/X+Jz7k9V78
MXAX7H0c8sOeH+JPQJ6E/JOeP+Ij4E+Buz1fxZ/2eiE+CvnzYr/fpMfz83PR
/wd7b8Kb
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0]], 
        LineBox[CompressedData["
1:eJx1nXF81W1Z/0+0aNGiI05atOiIkxZNOuLEiROPOHEi4hEnTpx4okkTJx5x
4sSJR5w8EyfPCSdOXHTEhRMnHnHRokUnIlq06ESLFq2nE9HTokWnp/W0iOj3
+r34fM7v9X2/Xr/nn/N6c933dV/3dV33dd3f79mzvXjvh3e+f0koFOp7YSj0
fz+f/Fd83ZPPV8T0D/qs12c5OKzPV+mzUp+v1meVPjfrsxocefKZionXiF8v
roF8rT4tr4V8HebXibeI14Oj+jS/HPINkL8CbD+8QZ+v1HzzRn026fNV4AaN
f6P41eBN+nyTPl8jublR3Cx+LXgz+HVg+22b/t38Fn3Kjymx/Zp6q+Rbgmy/
pXZIbj+8Tf8uTsX17/JD7O36d/tFHHoj5OKc5Vv17zv1CS757R36d3HOcvkh
Zbk4Jw69GXJxqEWf9ps4BbYfY+/Uv4tz4tB2yXdJDg7Jr7F3SS7OiUPyc6xV
8h2Q2++eb9b4UDw4P+a4WF88OD4nznn+2zHfcXm35lkudtxiuzXOcRPHxDlx
Ka7v0b9bLnZcY236dJzEjlvovZpnudhxzIljLUF5CvIcOOQ47tF8cEocE+cg
DynOOc93Hng+5Dnnxfv0qbjGxM4Tj09BngM7zqX1W4PyUtw9XxxJaL7imhA7
zhlxShz5Rc0Xh8Qhxbng+c4DyZ0XKc8XZzxfeVAQx8DOm9hezRdnxCHnzS/p
U5wRO49y4hzkzquE54OdR6X5YOdBrl3zHTex8yAhdpwi79d8xSUjjoFTjvM+
zYc8lAjKHdeEOGb5L+vfHSdxyuPFGYzPgQuY7zzIiZ0nkQ6NEyfECXFG7LwI
fUD/Ds6BS3khDu3VOHFEXBA7byL7tb44Jk6JM+JSXn1QesUJccHriUPKg0Sn
1gE7LyPiBDgFdl5mxM6zgrjgvPuQPpVXGXFEHDmg9S0XOw9TYudpQZwRJ8Q5
zC9gfOj9QXZeZz6s9cU5ccJ5m9T64oi4dA7EOXABXMp7cUScEMfEabHPRdbr
+1x5fZ+bj+jfxXFxQZwS+1xkxBGfG7HPSVHsc1YQp3xuDkqPOCb2uUqIC+CQ
zlFa7HOXFMc6guMTGJ8SZ72+OOf1xXmvD/a5DH1U6/scimPghDgp9jlOizNg
n+u42Oc6JQ7p3Oa8vrjg9cXhLq0vznt9cUxy14Gi18f4AvS7Tnh85INBeQxy
15HS+pBnIM9BXvhgcD+hziC7jsTFMdcl71+cFKcw3nUnJc6J82LXoYzX/1CQ
I65LH9P64pg4IU6KU54vdh0rinPWd0jri8PikOuOOAKOiaNi17WUOAV2ncuK
c+Ki1weHVNfCH9e64rg4Jk6JE+K0OAV5BpwDFzDfdTQvDoNdF7PiKOSuoxlx
HOw6WhAnXXe7ZRc4Dc6Iw+Is9LnuRiXPi5Piguu0uAh5SHU0Iw6Lw5948hlx
HRZHxUmx63xGHAcn3AfESfcBcakPHH7ymQZnMD4LzoHzYPeJqPS5j4TFIddh
cdh1X+y+khBHxUmx+0xKHAe7b+TE7isZcUqc9v6xXgb63GeK3j/szWN+AesV
oc99x/aFwe474U8++Yy6jnr/YPeZqMYnMN99KyZOgdPgDDgrTopzYNf9rNh9
pCB2H4j1PPkMuQ6L3Qei4gg4Ko6L3fesz30gJU64b4jdNzJi94m8OC3Oit0X
0uIs5uewXqnPiAviorjo/XxK+1afiIjD4rA4AnkUcvcl64uL4+KE+5LYfSsh
TrnPidPQnwFnxfZX7mPB/eXF9l8BcvdF+8d90frCYPdB+9t90P6Ouc85/pif
OBRcP+m+5/2773r/YvsvI057/9Yvzlm/OG99R7RPcVLsvhsVh9zHxGFwxH1Q
HHUfFMcwPg55Apx0nxSX+ro4Dc5Av/uw95MTF8Xuy4lPP/l0n0yJi15fXOq7
YvdZz4+A3Wc9PyZOiuMYnwC779oe9+W8OO2+Lc5AnhVXpZ585sQN4ry4VlwQ
R8RFjA+5j4vd96PiiPu6OCpuFsfAcXBC3C32vSEtTrmPidNg3yNmxFn3de9f
XPT+xaHPaJy4SlwEu+9HxGFwRLzo/YvLJXff9XpxjC/1Ye9fPOf9Yz3fAxrE
7tut4qzvEWL36W5x3vcK71886P37HuH9fzLI7tMZ7188LnZfL3j/4hnvXxw6
+uQzIQ6L3aerxClxRJwW14oz4max+3pMnBO3ivO+Z4jd91Piorhb7L5vDrsP
iyPiPnEUHAP7XpATu+9nxElwCuPd5yfFGbD72pzYfaf8s08+3XcWJS+Ai5jv
PjQjDoPdl4pi93nPd9+2/jjYfT4s+5LiKnEK7D7n/fjeEBJn3fekPye2f/KQ
F8Tj4iLkoSNBDruPiCOQRyEv9SVxHHL3sYLYfcv+TR0J2pc+EtxPBvqy4Bz0
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
/wAqEEmO
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5]], 
        LineBox[CompressedData["
1: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
Vp3tZQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJxt3X981W1dB/4TES0iWki0iOhIRIuIJiJOJDwi4kTEiUgTEY+IOBFx4sSJ
iEecOBFxIuJEpCMSTkScRLSI6EREi+huEdEiultEd4uIFtHdIrr7Pr6P+3rv
+/g8H9/+Wc/79b7e13V9fpzPztm5b1+44f2r3jUml8t1vCCX+39/Pv9/w69I
/0/h//9nFT+r8WT+eQ3/fBr/PI9n4Jn881m4Fs/Gc/Bc+tbR50V4Hn1fTN/5
+CV4AeNfSl6PX4YXss6Xs85FrPNXWOdi8leQF7L7KOHcK9PPtK8Szi1JP9M+
S+HY56uyLuHc0vQz7buEc68mx7ll6Wc6jiWcew3jw3EcG7Iu4dxr0890nEuv
JV9Ovpz8delnOi8lnFuRfqbzVArHeXp91qVwnKeV6Z8nl8Jxnt6Qfi5J/xzn
GtM/Ty4kx3krRZ5cwbk3JqfzVkiO81qKPJ23SuRxHldl8wIurcrWV8hzb0o/
03kv4FJyXBeVcIxfzfhwuk5KuJI8eh29Of1M100hOa6jUuTpuqmE4zpZk+pS
XliTzUu4Qn3uV7N5IZyus1JyXFcVnGtKP9N1U0gevY4iT9dNJfK4jt6SxqXr
ooBLyXGdVZLjusqtzbqAS7iSHNdh7q1ZF5JHr0vyyluZfx3rxyVcWcf4tyWn
+QrJcZ2XyCvJcZ3n1mfrC+uzeQlXkuO+yb091SUXcOntjE+O+yhXTD/TfZHH
BVzEpWK2Xzk57rtK5MmDOPeObH0+Oe7jwjuYH5eoL+MK/Qffwfwb0s90X+dx
ARc3ZMeXcHkD88f4mJ88985Ul45fHhfema0v4tI7s/srk1fwIPW5jdn15XFh
Y3Y9RfJSclxf5XDMjwdjfLyuvivlcfzflc0L5EVcwmVcSY7X8cHkeB3PbUr1
6XU5nxyv24XkeN0ukpdwORzz48HoF/O/m/nfzfzkxXdn11Oivkx9BQ9Sn2tO
P2P+cHrOFJLjuVRMHn0ORX16rpSjPrlCPohz78k6/57s+EJyPMeK1Jfek11P
mfGVqE/PrcGoj/k3Z/vnNzM/eXFzdnyJ+jJ5JfKYH+fem3U+OZ6zheR4DhfJ
S4wvJ8dzuYIHoz6ey1uyeR4XkuM5XtySHV8iL5NXyAejf3qO596X6mL+92Xr
C5HH/nEJl5PjeFSiXxz/92X3l9uanS+PC7iIS1uz+y1vzfav4MGoj/P//qzz
yXH9FJLj+i2SlxhfxhXqB5NHf69rydZX4zyuw4XkOP6NLdn9FnEL9SXyTvIy
eU9yHP9KrCe5n/GDeBjnPpDtX/2BbJ5PjuNVlzy6f/JG8mL0T26J/nH+yDvp
Vw7H/mN87B/3R790fw3GelI+jHPbsq7G+eQ4PnXkBdyYPHq/bsvupwWXYnzs
n7xMv57IY//U99NvEA/j3AfTz7j+P5jN8+R15AXyxsjjeZEcz4+W5NHzjzvp
V8Y91Ffo308+iIdZX641O74a51uz89eRF1qz/RvJi63Z+VrIS+SduEz/Hlxh
ff0xPs4/+TDz5z6UzatxHtd9KDt/4UPZfo0fyq6/GHn6/aQl+sX+6dfJfGXc
E/3i9R33R7/Yf6wn9k+/3Pbs/NXbs3k+8th/5HH/40bqi9uz87dsz663RH0n
/crkPfSrsN5+8kE8jHMfzo6vxnlclzx6/pNHzz8u4pYYH78/486oj99nY/64
/nElOX4/7488eZB8GOfaUp/0+391W3Z8nrwOF6hvbMv2L5K3kJfIO5NH38/g
nqiP9ze4P/rH+x08TH3uI1lXfyQ7X568jrxA3viR7HxF8pbk0c8RI0/ujPHx
fhb34Arux4MxX3r/Pcx8uR1ZV+M8rsMF3IiLO7Lzt+BScnwe0YnL0S+5J/L4
PCv6JfdTP0j9MM59NOvqj2b75cnrkuPzjgJupL5I3kJeYr7Oj2bXX8Y90S8+
XyHvp98g8w3j3M7s+Oqd2fF58jpcwI2ML5K34BLuxOXk2G9P8ujni+T9MX+c
f+qHyXMfSz/j+sf55Pj8po688LFsv0ZcpL4Fl3Bn8uj9z/w90T/u/xgfr394
MMbH6x/O7cq6GueTR1//cSF59PWf8UXqW3AJd+Iy/XpwJeaP/eNBPBz94/Xv
42kfsf+PZ+vz5HW48PHsehtx8ePZ9bYwvkTeicu4h/EV1tsf88frf9QnD+Nc
KVtfhatL2foanE+O67MW1+H6Una9heiX3EDeyHqayIv0b8YtuA2X6N/B/jpj
vuSuqI/XJ9yNe2K+5F5cob6P9fWzvgE8yHqH8DDrHyHPfSLrqk9k11ONaz6R
7ZdnfC15Ha6nXyE5jkcDeSNuol+RvDnWE8+bqE9uw6UYn55XHeSduIv+ZfJu
+vXgXsZXGN9H3o8H8CD7H8LDeITjl9udzatwdXKcnxqcp742Oa6Hut3Z+epx
ATfgRtzE/EXcHPPH+Sdvi35x/nEH++lkfBcu427m78G9zFeJ+dL10Ufejwfw
IOOH8HCsL3mEPPfJrKs+ma2vTo7fX2twPjn+Hl1LXkdeH/PF37tjvuQG8kby
Jlykvpm8hbwNl2J9yR2Rp7/vd5J3xf6Sy7gb9zC+l/VVcB/uxwMc30GO7xAe
Zr8j9Mu1Z13Vnl1/Na7B+fZs/1pcR/96XMAN7dn1N0ae3BTzx/sL3Ex9C26j
fwl3UN+Ju5ivTN4d+4/Xf+p7ma/C8erD/YwfYPwgHuJ4Dkce55/zl/tUtr4K
V38qW1+THPdHHtfiOlyPC7gh5k9uxE3UF3Ez621hP23kJdxBfWdyHN+uyOP8
x/xx/zO+B/fiCu6jXz/5AB5k/UN4mOMzEvuJ878nW1+1J9u/GtfgPK7dk11/
XfLo63/Ux+cnUZ/cEHn8/hfri9//cDH6x/Mft9C/jbyEO3An6+3CZfp3k/fg
3lh/3P8crz6OZz8e4HgOkg/Rb5j6EfLcp7Ou+nS2vvrT2fXWfDq7nzyupb4O
19O/wPwN5I2MbyIvMr6Z+hbW10Zeol8HeSfuor5M3s18PbiX8RXG95H3s7+B
qI/7Hw/hYcaP4FxHWl+cf1ydHK8fNTifHN/vrI3x8fqP63EhOb5f2UD/xugf
v/9Fffz+R95M/xb6tZGXcAf9O3EXLuNu3MPx7GW9FdzH+H48gAcZP4SH8QjH
I/eZbL+qz2Trq8lrcJ762uTR809ez/gCbsCN0S/OPy7iZtySPPr7f6wn7n/c
QX0n6++KPO2vjLtxD+7l+FTI+2L/yf0xf/IAHox+6fvYQ5EnD5OPkOf2pjx9
37tqb7a+em+2vgbnGV+L66I+7v+92f0VyBuSR+9/6puoL5I3s/4W3Bbj4/vt
7KeD9XeSd5GXybtxD+7FFfbTR97PfAOsf5B8CA/TbwTnPputr/psdj3VyXF8
a6I+Xv9xLa6jXz39CuQNMT6tr5G8CRfp18z8LVEf9z95CXdQ3xn94/5PHr3/
cTfuYX29uMJ++3A/+x1gvYN4CA+znhGc25d1Fa5OjuNRg/PhOP/Jo/d/5Gk/
9bhAfQNupL4JF3EzbmF9bbiUHOejA3fiLlymXzfz9+BeXMF9sf84/3gAD+Ih
+g3jEZz7XNZVn8v2q4487v/k2H8+6uP8U19HfT31BfIG8kbclDz6/h834xbG
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
+1/D+CbytXgdXk//It6ANzLfJtyMNzN+C96KW1jfNvq1km/HbXgH/XeS7yIv
Md9u8nbG78EdjN/L+dyH9+NO7s8D+CD38yHyLnyY9R/BR1l/GR/Dx7kfT+Bu
7t+T+BQ+zetFD/kZfJb5zrG+Xnye+gu8/lzEFXyJ9V1mPVfI+8ivkl/DT+F+
5r9OvxvU38QD+Ba+zfF4muM1iO/gu1w/z+Ah+t8jv48f0H+Y/CF+hJ/FI9x/
j/ET7rfncO5U1mOSRz//x+Nw1ansfOPpNwFPxNV4Ev0mx3zx/Mc1eCrjp9F/
enIcvzzjZ+CZeBb9a+k3G8+hfi6uY33z8Hz6LWA99Xgh9YvIF5MXYr7kJZGn
+2cp45ex/oaoj7//Rx5//+d6WYkb8Sr2v5r51uAmvJb9rGP969l/EW/AG/Em
1teMN+MteCvrbcHbqG/F2znebXgH3ol34RLezflo53zuiTz9vayDfC/eh/fH
fuLv//gAPogPsb4ufJj9HMFHqS/T/xj7O45PxH7i7//4JD4V8yefpl8Px+cM
6z3L+T+He6k/z/4usL+LzFchv8R6L+MruI/9XsXXon/6PsVT5P2x3pRfxzdi
vuSb5APkt+h/m/U+jQfxHXyX8/UMHqL+Hvl98gd4mPqH+BH7eRaPUP+Y/k/w
c9TnvpP1mO9k68eSj0se/e//UT/+O9n1TcATcXX0S+dvUsyXPDn6J0+hvoZ+
U/E01jcd59nPDPKZeBb9a1nfbDyH/czFdXgens9+F+B61rOQ9S7CixlfYL4l
0S95adS/+fmfy6JfcgNeTv2K6J+8kryR+VaRryZfw/FtIl+L1+H1uMh8G8g3
Mt8m3Ez9Zva7hf5bqW+h3zbORyvezvlu4/zuwDvxLsaXyHdzfbQz/x7Gd+C9
eB/995N3cv8diDze//P6c4j6LvLDrP8I8x9l/jL7O4aP4xOcv27O30l8Cp/G
PfgMPst857ieesnP4wv4IuMrXK+XuJ8v4yu4j/FXya+RP8X8/fg69TfwTfoP
xP6Sb+Hb0X/N8z+fZr5BfIfjdZfz/wzXzxDX1z2uv/uczwf0H8YP8SP8LOsd
IX/MfE9Y/3OsP3c6m485nV3/2NPZ+nG4ivrx5BPIJ5JX40l4cnIc3ym4Bk+N
/cTzP+aP53/0j8//yWfgmaxnFq7Fs/EcPBfXcXzm4fnUL8D17H8h+SLyxeQF
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
qb+F/wbfxn9L/6d5HvwdHmT83zP+Dvk/8Py5S79/TB79vhz+pxj/xud/DvH8
+md8j/H/gu9T/6/kD/C/UT8c60/r+Xf8kPX+R/RLfoT/M8bH3+vxf0W/+Ps9
+X/jx8z/P8z3BP8vfi72m/x/9Mudyebfh8fg78djk+N4/UByHO9xUZ/8g7gq
Oa6nH8Lj6ffD5BPIf4T1TMQ/iqsZ/2Psb1LMl/wC8snkP07/KfT/CVwT9ck/
iafinwqn+3Ea/ulYX/J08p/BeepfyPpm4J9lfzPxz+FZnO+f5/jV4l/As/Ev
Rv/4+3+sL+W/RP1czs8vU19H/iLWP4/8xfSfT7+X4AXUvxTX45fhhfjleBH+
FeZfTP4K8gJ+Jftdgl+Fl+JXc/yW4dfgBq6v1+Ll+HWMX8H19XrqV5K/gfup
MfJ4/8/9sAq/ifrV+M14TcwX7/9xE34L49fit1K/Dr8t6tPvU+vJ346L1L+D
fEM45e8Mp9/nNsb45HdRvwm/m/mayd+DN9P/veRb8Pvov5Xj937210L9B8i3
4Q/SrxV/iNfX7fjDuI3xHyHfwfX3Ua7fnfhj1O+i38eZr4Q/gXfT/5O4nefx
p/Ae/Gncwf35GfK9+LPU7yP/HPf/fuo/T97J68kX8AHqv4gP8vr6JXyI18cv
4y7qv4IP8/r8VfIjPA+/Rv1R8l/DZeq/jo8x3zdY/3Hqf53+J8i/ibup/xbz
naT+2/gU9d/h/JzG38U9nO/v4TP4N/BZ/Jtcb+fwb+Fe/Nv4POv9HfIL5L/L
ei7i32N8hfG/T36J++sP8GXq/5D8Cvkf8frRh/+Y16+r+E+ov4b/lPqnWM+f
sd9+1vfn1F/n9fMveH28Qf6X5DfxX+EBxv81vsX+/gbfZv1/y/l+mv3+HR7E
f8/4O/gfuP/v4n+k/hn6/xPrHSL/Z/J7+F+ov4//lfkfsL5/4/VjmNeff+f1
5CH+D/o9wv+Jn2U9/4VH8H+zn8fs/384/0+4Xv8XP4f/j/G538j6+5Lj/hmD
vx+PDafr+QeiX8rH4R+kvgr/UNQnj8c/HPXp97UJkSf/CJ4Y9en3xx+NPLka
/1jUp8+XJzH+BXgy8/0465uCfwLXsL+fJJ/KfD+Fp+GfxtNZ38/gPPUvxDPw
zzJ+Jv456meR/zyuxb/A+ZiNfxHP4Xz9Evlc8l8mr2O9LyKfR/5iPB+/hPEL
yF+K6/HLOB4L8cvpv4jxv8J+F5O/AhfwK/ES5nsVXkr9q7l+l1H/GtyAX4uX
0/91eAV+PeNX4jdQ30j+Ro73Ku7PN7G/1dS/mdezNbz+/Spuwm9h/Fpeb9+K
1+G34fX47cxXZL538DzYgN+JN9LvXXgT87+bvJnj+R68meP/Xta7hfx9jN/K
+Xk/90cL5/8D5NsiT38f/SBuxR+K8en7u9vDKf8weVuMT/4I9TsiT+v5KN6J
P8b6d+GPU1/Cn6B+N/4kx7Od4/0p8j3407jj//P/Aw1Jp78=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 5000.}, {0, 1022.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"n time-step\"", TraditionalForm], 
       FormBox["\"population of molecules\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 5000.}, {0, 1022.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Nodal\"", "\"Lefty\"", "\"N-R\"", "\"L-R\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 2/3, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.694971821801776*^9, {3.694972106116995*^9, 3.6949721278465652`*^9}, 
   3.694972311555274*^9, 3.694972583876983*^9, 3.6949733793077993`*^9, 
   3.694973531213216*^9, {3.694974168562134*^9, 3.694974190565714*^9}, 
   3.6949742235953913`*^9, 3.6949742955093346`*^9, {3.6949745359566283`*^9, 
   3.694974543442511*^9}, 3.694974727430975*^9, 3.6949755871280055`*^9, 
   3.694976006426267*^9, 3.6949763838660326`*^9, {3.6949769033300376`*^9, 
   3.694976912297194*^9}, {3.694977715931432*^9, 3.6949777386936607`*^9}, {
   3.6949778259670663`*^9, 3.6949778559933662`*^9}, {3.694977911117787*^9, 
   3.6949779323963175`*^9}, 3.69497824379469*^9, 3.694979110370702*^9, 
   3.6949792070462785`*^9, 3.6949798074765015`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1599, 817},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 108, 1, 70, "Section"],
Cell[691, 25, 186, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[902, 33, 1023, 25, 72, "Input"],
Cell[1928, 60, 3525, 48, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5490, 113, 692, 17, 31, "Input"],
Cell[6185, 132, 3997, 63, 70, "Print"]
}, Open  ]],
Cell[10197, 198, 374, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[10596, 209, 1078, 30, 52, "Input"],
Cell[11677, 241, 4084, 66, 70, "Print"]
}, Open  ]],
Cell[15776, 310, 278, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[16079, 320, 1360, 36, 92, "Input"],
Cell[17442, 358, 3883, 61, 70, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21362, 424, 1289, 36, 92, "Input"],
Cell[22654, 462, 3935, 62, 70, "Print"]
}, Open  ]],
Cell[26604, 527, 264, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[26893, 536, 991, 23, 31, "Input"],
Cell[27887, 561, 3948, 61, 70, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31872, 627, 898, 22, 31, "Input"],
Cell[32773, 651, 3979, 61, 70, "Print"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[36801, 718, 105, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[36931, 723, 107, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[37063, 728, 767, 15, 47, "Input"],
Cell[37833, 745, 3672, 49, 31, "Output"]
}, Open  ]],
Cell[41520, 797, 1790, 39, 108, "Input"],
Cell[43313, 838, 514, 10, 47, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43864, 853, 281, 3, 49, "Subsection"],
Cell[44148, 858, 695, 20, 31, "Input"],
Cell[44846, 880, 4561, 81, 188, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49444, 966, 387, 5, 49, "Subsection"],
Cell[49834, 973, 5939, 128, 268, "Input"],
Cell[55776, 1103, 3255, 81, 248, "Input"],
Cell[59034, 1186, 1578, 41, 128, "Input"],
Cell[60615, 1229, 3729, 95, 188, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64381, 1329, 417, 5, 49, "Subsection"],
Cell[64801, 1336, 1468, 26, 88, "Input"],
Cell[CellGroupData[{
Cell[66294, 1366, 277, 8, 31, "Input"],
Cell[66574, 1376, 2273, 31, 31, "Output"]
}, Open  ]],
Cell[68862, 1410, 11334, 215, 328, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80233, 1630, 464, 6, 49, "Subsection"],
Cell[80700, 1638, 8349, 147, 368, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89098, 1791, 92, 1, 70, "Section"],
Cell[89193, 1794, 12932, 281, 648, "Input"],
Cell[CellGroupData[{
Cell[102150, 2079, 101, 1, 49, "Subsection"],
Cell[102254, 2082, 3285, 62, 108, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105588, 2150, 205, 3, 70, "Section"],
Cell[CellGroupData[{
Cell[105818, 2157, 24014, 424, 828, "Input"],
Cell[129835, 2583, 10388, 177, 583, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140260, 2765, 1201, 31, 52, "Input"],
Cell[141464, 2798, 97867, 1692, 353, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)


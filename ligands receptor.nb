(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    200496,       4315]
NotebookOptionsPosition[    195158,       4136]
NotebookOutlinePosition[    195683,       4157]
CellTagsIndexPosition[    195640,       4154]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "things", " ", "to", " ", "implement", " ", "and", " ", "modify", " ", 
     "in", " ", "the", " ", "code"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"6.", " ", "Poisson", " ", "process", " ", "for", " ", "death"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "1.", " ", "first", " ", "order", " ", "reactions", " ", "such", " ", 
      "as", " ", "disassociation", " ", "of", " ", 
      RowBox[{"receptor", "/", 
       RowBox[{"ligand", ":", " ", "prob"}]}]}], " ", "=", " ", 
     RowBox[{"1", " ", "-", " ", 
      RowBox[{"Exp", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "k"}], " ", "\[Delta]t"}], ")"}]}]}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
    "5.", " ", "check", " ", "for", " ", "whether", " ", "the", " ", 
     "particle", " ", "actually", " ", "crossed", " ", "the", " ", "cell", 
     " ", "boundary"}], ";", "\[IndentingNewLine]", 
    RowBox[{
    "7.", " ", "does", " ", "the", " ", "order", " ", "of", " ", "zeroth"}]}],
    ",", " ", 
   RowBox[{
   "first", " ", "and", " ", "second", " ", "order", " ", "matter", " ", "in",
     " ", "code", " ", 
    RowBox[{"execution", "?"}]}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.691134210727989*^9, 3.691134222826666*^9}, {
   3.691134266736505*^9, 3.6911345697482295`*^9}, {3.691135969652725*^9, 
   3.691135973474081*^9}, {3.6911360730827494`*^9, 3.691136078572516*^9}, {
   3.691137016314514*^9, 3.6911370261119556`*^9}, {3.691140350291669*^9, 
   3.691140353306332*^9}, {3.691140651539116*^9, 3.6911406558226395`*^9}, {
   3.69114390208565*^9, 3.691143909764504*^9}, {3.6911446150578923`*^9, 
   3.691144619136649*^9}, {3.691145670966162*^9, 3.6911457764403067`*^9}, 
   3.691145912501439*^9, {3.691146825340954*^9, 3.6911468276557083`*^9}, {
   3.691149292048608*^9, 3.6911492951856756`*^9}, {3.6911496165571876`*^9, 
   3.6911496327895565`*^9}, {3.691177532926524*^9, 3.691177533342026*^9}, {
   3.691239909699788*^9, 3.691239930583748*^9}, 3.6914557656125684`*^9, {
   3.692004213822044*^9, 3.692004221720275*^9}, {3.6920047332482786`*^9, 
   3.6920047403606577`*^9}, {3.69210238603211*^9, 3.692102389112632*^9}, {
   3.692196229402611*^9, 3.6921962317707443`*^9}, 3.6921970422521152`*^9, {
   3.692352969886099*^9, 3.692352970363579*^9}},
 Background->RGBColor[1, 1, 0.85]],

Cell[CellGroupData[{

Cell["determining the unbinding and binding radius", "Subsection",
 CellChangeTimes->{{3.691132568923173*^9, 3.6911325835407267`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"bindrad", ",", "unbindrad"}], "}"}], "=", 
   RowBox[{
    RowBox[{
    "NotebookEvaluate", "[", 
     "\"\<C:\\\\Users\\\\Ali Hashmi\\\\Desktop\\\\research\\\\brownian \
simulation of nodal lefty\\\\current version\\\\binding-unbinding radius.nb\>\
\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.691132242059017*^9, 3.691132318604846*^9}, {
  3.6911323593078613`*^9, 3.6911323879495792`*^9}, {3.691132468915664*^9, 
  3.6911324998727083`*^9}, {3.691132617052775*^9, 3.6911326381462584`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["creating regions and constraints", "Subsection",
 CellChangeTimes->{{3.688924512027831*^9, 3.6889245266968737`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalR]", " ", "=", " ", 
    RowBox[{"ImplicitRegion", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], " ", "+", " ", 
        RowBox[{"y", "^", "2"}]}], " ", "\[LessEqual]", " ", 
       RowBox[{"0.25", "^", "2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "defining", " ", "the", " ", "region", " ", "containing", " ", "the", " ", 
    "molecules", " ", "in", " ", "a", " ", "single", " ", "cell"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.688846950368219*^9, 3.6888469989206295`*^9}, {
  3.6888787101371145`*^9, 3.6888787197372417`*^9}, {3.689186628086053*^9, 
  3.689186652831918*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "creating", " ", "necessary", " ", "regions", " ", "and", " ", 
    "constraints"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[ScriptCapitalR]", "2"], "=", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "\[LessEqual]", 
        RowBox[{"0.75", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"creating", " ", "the", " ", "circular", " ", "cell"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[ScriptCapitalR]", 
      RowBox[{"2", "b"}]], "=", 
     RowBox[{"ImplicitRegion", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], "==", 
        RowBox[{"0.75", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[ScriptCapitalR]", "3"], "=", 
     RowBox[{"BoundaryMeshRegion", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "1"}], "}"}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"creating", " ", "the", " ", "bounding", " ", "box"}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.688924633012064*^9, 3.6889246332648277`*^9}, {
  3.6897596589595423`*^9, 3.689759674906705*^9}, {3.691238445678753*^9, 
  3.691238510980364*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["functions to create intial particle configuration", "Subsection",
 CellChangeTimes->{{3.690450054461403*^9, 3.690450072872426*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "setting", " ", "up", " ", "initial", " ", "configuration", " ", "of", " ",
     "ligands"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"initialParticleConfig", "[", 
      RowBox[{"name_String", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x_", "?", "NumberQ"}], ",", 
         RowBox[{"y_", "?", "NumberQ"}]}], "}"}], ",", 
       RowBox[{"number_", "?", "IntegerQ"}]}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "specie", ",", " ", "specieBoundaryIndex", ",", " ", "speciePts"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"specie", " ", "=", " ", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"number", ",", "2"}], "}"}]}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "this", " ", "creates", " ", "a", " ", "number", " ", "of", " ", 
          "particles", " ", "for", " ", "specified", " ", "domains"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"specie", "=", " ", 
         RowBox[{"Select", "[", 
          RowBox[{"specie", ",", 
           RowBox[{
            RowBox[{"#", "\[Element]", "\[ScriptCapitalR]"}], "&"}]}], 
          "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "select", " ", "those", " ", "particles", " ", "that", " ", "are", 
          " ", "present", " ", "within", " ", "the", " ", "cell"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"specie", " ", "=", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"First", "@", "#2"}], "\[Rule]", " ", "#1"}], "&"}], 
            ",", 
            RowBox[{"Thread", "[", 
             RowBox[{"{", 
              RowBox[{"name", ",", "specie"}], "}"}], "]"}]}], "]"}]}]}], ";",
         " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "lets", " ", "thread", " ", "the", " ", "particles", " ", "with", 
           " ", "a", " ", "rule", " ", "where", " ", "the", " ", "particles", 
           " ", "are", " ", "associated", " ", "with", " ", "an", " ", 
           "index"}], ",", " ", 
          RowBox[{
          "their", " ", "name", " ", "and", " ", "their", " ", 
           "coordinates"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"specieBoundaryIndex", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Element]", 
              "\[ScriptCapitalR]"}], ")"}], "&"}], "/@", 
           RowBox[{"Values", "[", "specie", "]"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"True", "\[Rule]", " ", "0"}], ",", 
            RowBox[{"False", "\[Rule]", "1"}]}], "}"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "a", " ", "mapping", " ", "over", " ", "particle", " ", "position", 
          " ", "to", " ", "check", " ", "whether", " ", "the", " ", 
          "particles", " ", "are", " ", "outside", " ", "the", " ", "defined",
           " ", "boundaries", " ", 
          RowBox[{"(", "cells", ")"}], " ", "or", " ", "within", " ", 
          RowBox[{"it", ".", " ", "a"}], " ", "particle", " ", "inside", " ", 
          "would", " ", "yield", " ", "True", " ", 
          RowBox[{"(", 
           RowBox[{"replace", " ", "True", " ", "with", " ", "0"}], ")"}], 
          " ", "and", " ", "external", " ", "to", " ", "the", " ", "region", 
          " ", "will", " ", "yield", " ", "False", " ", 
          RowBox[{"(", 
           RowBox[{"replace", " ", "with", " ", "1"}], ")"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"specieBoundaryIndex", " ", "=", " ", 
         RowBox[{"Association", "@", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "@", "specie"}], "]"}], "\[Rule]", " ", 
            "specieBoundaryIndex"}], "]"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "putting", " ", "an", " ", "index", " ", "to", " ", "the", " ", 
          "previous", " ", "result", " ", "for", " ", "unique", " ", 
          "identification", " ", "of", " ", "particle"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"speciePts", " ", "=", " ", 
         RowBox[{"Values", "@", 
          RowBox[{"specie", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "this", " ", "will", " ", "only", " ", "extract", " ", "the", " ", 
          "particle", " ", "positions"}], " ", "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "@", 
         RowBox[{"{", 
          RowBox[{"specie", ",", "specieBoundaryIndex", ",", "speciePts"}], 
          "}"}]}], ";"}]}], 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"now", " ", "i", " ", "can", " ", "return", " ", "three", " ", 
         RowBox[{"variables", ".", " ", "specie"}], " ", 
         RowBox[{"(", 
          RowBox[{"<|", " ", 
           RowBox[{
            RowBox[{"particle", " ", "number"}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", "\"\<Nodal || Lefty\>\"", "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], "}"}], " ", "..."}]}], " ", 
           "|>"}], " ", ")"}]}], ",", " ", 
        RowBox[{"specieBoundaryIndex", " ", 
         RowBox[{"(", 
          RowBox[{"<|", " ", 
           RowBox[{
            RowBox[{"particle", " ", "number"}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"1", " ", "||", " ", "0"}], " ", "..."}]}], " ", "|>"}], 
          ")"}], " ", "and", " ", "speciePts", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], "..."}], "."}], "}"}]}]}], " ", 
       "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "setting", " ", "up", " ", "configuration", " ", "of", " ", "membrane", 
     " ", "proteins"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"membraneReceptorConfig", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x_", "?", "NumberQ"}], ",", 
         RowBox[{"y_", "?", "NumberQ"}]}], "}"}], ",", 
       RowBox[{"radius_", "?", "NumberQ"}], ",", 
       RowBox[{"number_", "?", "IntegerQ"}]}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"membranePts", ",", "membraneIndex"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "this", " ", "creates", " ", "a", " ", "random", " ", "number", " ", 
          "of", " ", "particle", " ", "on", " ", "a", " ", "circle"}], ",", 
         " ", 
         RowBox[{
         "basically", " ", "representing", " ", "membrane", " ", 
          "proteins"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"membranePts", " ", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomPoint", "[", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", "radius"}], "]"}], "]"}],
             ",", "number"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"membraneIndex", " ", "=", " ", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Range", "[", "number", "]"}], "\[Rule]", " ", 
            RowBox[{"Thread", "[", 
             RowBox[{"{", 
              RowBox[{
              "membranePts", ",", "0", ",", "None", ",", "\"\<type\>\""}], 
              "}"}], "]"}]}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "putting", " ", "an", " ", "identification", " ", "number", " ", 
            "for", " ", "the", " ", "previous", " ", "result", " ", 
            RowBox[{"i", ".", "e", ".", " ", "receptor"}], " ", "number"}], 
           " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"coord", ",", " ", 
             RowBox[{"0", " ", "or", " ", "1"}], ",", " ", 
             RowBox[{"BoundTo", "/", "None"}], ",", " ", 
             RowBox[{"Type", "-", "Ligand"}]}], "}"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "@", 
          RowBox[{"{", 
           RowBox[{"membranePts", ",", "membraneIndex"}], "}"}]}], " ", ";"}], 
        RowBox[{"(*", " ", 
         RowBox[{"returns", " ", "membranePts", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], "..."}], "."}], ")"}], " ", 
          "and", " ", "membraneIndex", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"membrane", " ", "protein", " ", "number"}], " ", 
             "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}], ",", "0", ",", "None", ",", 
            "Type"}], ")"}]}], " ", "*)"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.690446778031761*^9, 3.690446780031542*^9}, {
  3.6904478937951794`*^9, 3.690447909706151*^9}, {3.690448047754268*^9, 
  3.690448053622303*^9}, {3.690448252445041*^9, 3.6904482524606667`*^9}, {
  3.6904483965993075`*^9, 3.6904484114038982`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["helper functions", "Subsection",
 CellChangeTimes->{{3.6889310830015306`*^9, 3.6889310868702145`*^9}, 
   3.689538246424158*^9, {3.6904500126366177`*^9, 3.6904500155517626`*^9}}],

Cell[CellGroupData[{

Cell["brownian walk (free ligands)", "Subsubsection",
 CellChangeTimes->{{3.6892694066087503`*^9, 3.689269410229437*^9}, {
  3.6895382989638543`*^9, 3.6895383134799366`*^9}, {3.6895386594588766`*^9, 
  3.6895386603428335`*^9}, {3.690277362820841*^9, 3.6902773633049965`*^9}, {
  3.6902774239726453`*^9, 3.6902774252254057`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BrownianWalk", "[", 
   RowBox[{"number_", ",", "elem_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"oldposition", "=", 
       RowBox[{"elem", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "newposition", ",", "step", 
      ",", 
      RowBox[{"tag", "=", 
       RowBox[{"elem", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"step", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.01"}], "]"}], "]"}], ",", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.01"}], "]"}], "]"}]}], "}"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "take", " ", "a", " ", "random", " ", "number", " ", "from", " ", "a", 
       " ", "Gaussian", " ", "where", " ", "the", " ", "width", " ", "can", 
       " ", "be", " ", "defined", " ", "as", " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", " ", 
         SubscriptBox["D", "coeff"], " ", "\[Delta]t"}], "]"}]}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"newposition", " ", "=", 
      RowBox[{"oldposition", " ", "+", "step"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "add", " ", "the", " ", "new", " ", "step", " ", "to", " ", "the", " ", 
       "original", " ", "particle", " ", "position"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"number", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"tag", ",", "newposition"}], "}"}]}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "thread", " ", "the", " ", "particle", " ", "with", " ", "its", " ", 
     "type", " ", "and", " ", "new", " ", "position"}], " ", "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6888493793880687`*^9, 3.6888494268290625`*^9}, {
   3.6888495769664483`*^9, 3.688849609275427*^9}, {3.688849668642341*^9, 
   3.6888496764578342`*^9}, 3.688849737044735*^9, {3.6888497726832185`*^9, 
   3.6888497764666524`*^9}, {3.6888498272198234`*^9, 
   3.6888498997499576`*^9}, {3.6888499421279993`*^9, 3.688850028019964*^9}, {
   3.688882951168867*^9, 3.6888829539899316`*^9}, {3.6888829968157296`*^9, 
   3.6888829975132675`*^9}, 3.689107320654008*^9, {3.6892606269724894`*^9, 
   3.6892606271193953`*^9}, {3.689261264696122*^9, 3.689261265111574*^9}, {
   3.6892660048232765`*^9, 3.689266005038768*^9}, {3.6892667279107404`*^9, 
   3.6892667420250945`*^9}, {3.6892668447518573`*^9, 
   3.6892668503034105`*^9}, {3.689266975554985*^9, 3.6892669801404157`*^9}, {
   3.6892670834952273`*^9, 3.6892670844573374`*^9}, {3.6892686280717506`*^9, 
   3.6892686295493345`*^9}, {3.689268674289915*^9, 3.6892686776670847`*^9}, {
   3.6892687188682647`*^9, 3.6892687206527395`*^9}, {3.689269768627331*^9, 
   3.6892698139057565`*^9}, 3.689269870448642*^9, 3.689270029675207*^9, {
   3.6892701606017513`*^9, 3.689270160848525*^9}, {3.6892702775536222`*^9, 
   3.689270278506968*^9}, {3.689270726010699*^9, 3.689270816702417*^9}, {
   3.6892708482814183`*^9, 3.6892708547294044`*^9}, {3.689270894294041*^9, 
   3.6892709235545893`*^9}, {3.689271250831746*^9, 3.68927125324652*^9}, {
   3.6892748965486746`*^9, 3.689274921268263*^9}, {3.6892750016849365`*^9, 
   3.68927500335418*^9}, {3.6892750433333225`*^9, 3.6892750468327436`*^9}, {
   3.6892760365309877`*^9, 3.6892760487594166`*^9}, {3.6892772957718334`*^9, 
   3.6892773010708895`*^9}, 3.689277333955267*^9, 3.6892788511551924`*^9, {
   3.689280378797192*^9, 3.6892803981828737`*^9}, {3.689281095376013*^9, 
   3.6892811697226243`*^9}, {3.689317954666248*^9, 3.6893179568500366`*^9}, {
   3.6893182408650618`*^9, 3.6893182426485357`*^9}, 3.6893389289283886`*^9, 
   3.6893554489192066`*^9, {3.6895342565895147`*^9, 3.68953428030309*^9}, 
   3.6895364270721064`*^9, 3.6895400975278735`*^9, 3.689541113306101*^9, 
   3.6895475873502007`*^9, 3.6895515053544207`*^9, {3.689601236296877*^9, 
   3.6896012364275637`*^9}, 3.6896013069074583`*^9, 3.689602618503835*^9, {
   3.6896029841670303`*^9, 3.6896029842669554`*^9}, {3.689608062550646*^9, 
   3.689608067033592*^9}, {3.6896084145183535`*^9, 3.689608414985072*^9}, {
   3.6896202815221987`*^9, 3.689620282868004*^9}, {3.689620408166379*^9, 
   3.6896204084167767`*^9}, 3.6896213958491488`*^9, 3.689673346549615*^9, {
   3.6897596864587364`*^9, 3.689759702522517*^9}, {3.689765843592908*^9, 
   3.6897658439434185`*^9}, {3.689766376018116*^9, 3.6897663766648397`*^9}, {
   3.6901102203650045`*^9, 3.690110222933852*^9}, 3.690110590378729*^9, {
   3.690110654837328*^9, 3.690110693643689*^9}, 3.6902187211623087`*^9, 
   3.690218933696247*^9, {3.690219016270183*^9, 3.690219019185206*^9}, 
   3.690376630261073*^9, 3.6903796512713113`*^9, 3.690379819426066*^9, {
   3.6903958805769477`*^9, 3.690395882039069*^9}, {3.690396266662815*^9, 
   3.69039626717859*^9}, 3.6904524242516484`*^9, {3.6911330248923626`*^9, 
   3.6911330274610877`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BrownianFunc", "[", "assoc_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "temp", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"temp", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"KeyValueMap", "[", 
       RowBox[{"BrownianWalk", ",", "assoc"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.6897655545196285`*^9, 3.689765561373067*^9}, {
   3.689765615939144*^9, 3.689765665967264*^9}, {3.6897657147072706`*^9, 
   3.6897657384877543`*^9}, {3.6897657794879293`*^9, 
   3.6897657822100725`*^9}, {3.6897658935300922`*^9, 3.68976589639933*^9}, {
   3.6897659863211627`*^9, 3.689765990574066*^9}, {3.689766717586104*^9, 
   3.6897667183549476`*^9}, {3.689767159123089*^9, 3.6897671600557175`*^9}, {
   3.690195592986811*^9, 3.690195596571021*^9}, {3.690195630673977*^9, 
   3.690195634204591*^9}, {3.690196380922307*^9, 3.6901963836063766`*^9}, {
   3.6901964138017387`*^9, 3.6901964214170876`*^9}, {3.6901964588738856`*^9, 
   3.6901964612354813`*^9}, 3.690376630280218*^9, 3.690379651277316*^9, 
   3.6903798194320927`*^9, 3.6904524242516484`*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["brownian walk (for receptors)", "Subsubsection",
 CellChangeTimes->{3.689954397896657*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"strategy", ":", " ", 
    RowBox[{"get", " ", "all", " ", "the", " ", "membrane", " ", 
     RowBox[{"pts", ".", " ", "rotate"}], " ", "them", " ", "using", " ", "a",
      " ", "random", " ", "number", " ", 
     RowBox[{"(", "angle", ")"}], " ", "generated", " ", "from", " ", "a", 
     " ", "Gaussain", " ", 
     RowBox[{"function", ".", " ", "export"}], " ", "updated", " ", 
     "membrane", " ", "pts", " ", "out", " ", "of", " ", "the", " ", 
     "module"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BrownianWalkMembrane", "[", 
    RowBox[{"receptorpos_", ",", "membraneind_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "membranepos", ",", "membrane", ",", "angle", ",", " ", "center"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"center", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"angle", " ", "=", 
        RowBox[{"\[Pi]", "/", "1800."}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "0.1", " ", "degree", " ", "rotation", " ", "about", " ", "center", 
         " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"membranepos", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"RandomVariate", "[", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"0", ",", "angle"}], "]"}], "]"}], ",", "center"}], 
            "]"}], "[", "#", "]"}], "&"}], "/@", "receptorpos"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "here", " ", "we", " ", "generate", " ", "the", " ", "new", " ", 
         "position"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"membrane", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"i", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"membranepos", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"membraneind", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2", ",", 
                 RowBox[{"2", ";;"}]}], "]"}], "]"}]}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "membraneind"}]}], "}"}]}], "]"}]}], ";", 
       " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "updating", " ", "the", " ", "position", " ", "in", " ", "the", " ", 
         "membraneindex"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"membranepos", ",", "membrane"}], "}"}]}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "exporting", " ", "the", " ", "membrane", " ", "position", " ", "and", 
       " ", "the", " ", "updated", " ", "membraneindex"}], " ", "*)"}], 
     "\[IndentingNewLine]", "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "@", "membraneind"}], ">", "0"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6899543584557877`*^9, 3.689954428727585*^9}, {
   3.689954518036431*^9, 3.6899545192820187`*^9}, {3.6899545615473404`*^9, 
   3.6899545692080975`*^9}, {3.6899546412737885`*^9, 
   3.6899546862867284`*^9}, {3.689954739940879*^9, 3.6899547603232822`*^9}, {
   3.6899551619994273`*^9, 3.689955198213752*^9}, {3.689955471382825*^9, 
   3.6899555221592236`*^9}, {3.6899557409064236`*^9, 3.689955750751481*^9}, {
   3.689955794776699*^9, 3.689955955205431*^9}, {3.6899562750076485`*^9, 
   3.689956283191067*^9}, {3.689956377845804*^9, 3.6899563785416217`*^9}, {
   3.689956552128584*^9, 3.689956629423951*^9}, {3.6899567291041193`*^9, 
   3.6899567556168633`*^9}, {3.6899568519636683`*^9, 
   3.6899568703403187`*^9}, {3.6899570531451116`*^9, 3.689957063440998*^9}, {
   3.6899570960476675`*^9, 3.6899572537173786`*^9}, {3.6899574747048435`*^9, 
   3.689957483586584*^9}, {3.6900468022042837`*^9, 3.690046902037632*^9}, {
   3.690195658003504*^9, 3.6901956679705844`*^9}, {3.6903623421393213`*^9, 
   3.690362346369918*^9}, {3.6903624070444937`*^9, 3.6903624310130663`*^9}, {
   3.6903633995708857`*^9, 3.690363400188826*^9}, 3.690376630283223*^9, 
   3.69037965128535*^9, 3.6903798194360743`*^9, 3.6904524242516484`*^9},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ballistic reflection", "Subsubsection",
 CellChangeTimes->{{3.6911480035101795`*^9, 3.6911480271202145`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ballisticReflect", "[", "inside_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "near", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"near", " ", "=", " ", 
      RowBox[{"RegionNearest", "[", 
       RowBox[{
        SubscriptBox["\[ScriptCapitalR]", 
         RowBox[{"2", "b"}]], ",", "inside"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inside", "+", 
      RowBox[{"2", "*", 
       RowBox[{"(", 
        RowBox[{"near", "-", "inside"}], ")"}]}]}]}]}], "\[IndentingNewLine]",
    "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "region", " ", "specification", " ", "should", " ", "be", " ", "a", " ", 
    "boundary"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{
  3.6911566542113357`*^9, {3.6911771465015097`*^9, 3.6911771741583047`*^9}, 
   3.6911782914207964`*^9, {3.6912268908417263`*^9, 3.6912268972939725`*^9}, {
   3.6912370898364897`*^9, 3.691237163437728*^9}, 3.6912385262542973`*^9, {
   3.6912398225406084`*^9, 3.691239840703435*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["periodic boundaries for diffusion", "Subsubsection",
 CellChangeTimes->{{3.6911772296381774`*^9, 3.691177233706566*^9}, {
  3.691178925489131*^9, 3.6911789312492647`*^9}, {3.691239813581869*^9, 
  3.6912398168275385`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"periodicBoundary", "[", "finalpt_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "=", "finalpt"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"x", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"x", "=", 
        RowBox[{"x", "-", "2"}]}], ",", 
       RowBox[{"x", "\[LessEqual]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"x", "=", 
        RowBox[{"2", "+", "x"}]}], ",", "True", ",", "x"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"y", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"y", "=", 
        RowBox[{"y", "-", "2"}]}], ",", 
       RowBox[{"y", "\[LessEqual]", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"y", "=", 
        RowBox[{"2", "+", "y"}]}], ",", "True", ",", "y"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"box", " ", "dimension", " ", "is", " ", "2"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3c4rnhrU8Nqx4ebWNBDt8/VhNoh2OBmbD6K3fPyx
AESnfbBaDKKXBJQuB9FKUXKrQfQ7ecvYaCAt2zgtEURH7bRsAdFLbHOmgOge
x6gZIPrK6vmzQLSp3sT1IFpp7QYwbfCDcweI5rrguBtEs6xKPgiiT13zOgqi
t7DvPgmiXW1VT4Fok8nx50C0VArjdRBdtdH9KYjuUot8BqIfWp76CaJldnj9
AdGH26eKxADpHXa3wPTda0scQbRs3ndnEC2e6rgCRIdNql0DomfM+HAIRLcs
jT4MonUkBJ2rgHSF4A0wDQAU5Jor
  "],
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ligand spatial check ", "Subsubsection",
 CellChangeTimes->{{3.6892694193076425`*^9, 3.689269434346352*^9}, {
   3.689538322627211*^9, 3.689538333661846*^9}, {3.6895386637209435`*^9, 
   3.6895386676887426`*^9}, 3.6895402022175455`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ligandCheck", "[", 
   RowBox[{"particles_", ",", "particleBoundaryIndex_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"specie", " ", "=", " ", "particles"}], ",", "speciekeys", ",", 
      "coordsspecie", ",", "\[IndentingNewLine]", "indexspecie", ",", 
      "threadList"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"speciekeys", " ", "=", " ", 
      RowBox[{"Keys", "@", "specie"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "the", " ", "indices", " ", "of", " ", "the", " ", "particles"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"coordsspecie", " ", "=", " ", 
      RowBox[{"Values", "@", 
       RowBox[{"specie", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "the", " ", "positions", " ", "of", " ", "the", " ", "particles"}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"indexspecie", " ", "=", " ", 
      RowBox[{"Values", "@", "particleBoundaryIndex"}]}], ";", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "whether", " ", "particles", " ", "are", " ", "present", " ", "inside", 
       " ", "0", " ", "or", " ", "outside", " ", "the", " ", "cells", " ", 
       "1"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"threadList", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"speciekeys", ",", "indexspecie", ",", "coordsspecie"}], 
        "}"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "lets", " ", "thread", " ", "the", " ", "above", " ", "three", " ", 
       "together"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "update", " ", "a", " ", "particle", " ", "that", " ", "was", " ", 
       "inside", " ", "but", " ", "takes", " ", "a", " ", "step", " ", 
       "outside"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"threadList", " ", "=", " ", 
      RowBox[{"threadList", "/.", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ind_", "?", "IntegerQ"}], ",", 
           RowBox[{"x_", "?", "IntegerQ"}], ",", "y_List"}], "}"}], "/;", 
         RowBox[{
          RowBox[{"x", "\[Equal]", "0"}], " ", "&&", 
          RowBox[{"!", 
           RowBox[{"y", "\[Element]", 
            SubscriptBox["\[ScriptCapitalR]", "2"]}]}]}]}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", 
         RowBox[{"ind", ",", "1", ",", "y"}], "}"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "prevent", " ", "particles", " ", "that", " ", "are", " ", "outside", 
       " ", "to", " ", "step", " ", "inside"}], " ", "*)"}], "  ", 
     "\[IndentingNewLine]", 
     RowBox[{"threadList", " ", "=", " ", 
      RowBox[{"threadList", "/.", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ind_", "?", "IntegerQ"}], ",", 
           RowBox[{"x_", "?", "IntegerQ"}], ",", "y_List"}], "}"}], "/;", 
         RowBox[{
          RowBox[{"x", "\[Equal]", "1"}], "&&", 
          RowBox[{"y", "\[Element]", 
           SubscriptBox["\[ScriptCapitalR]", "2"]}]}]}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", 
         RowBox[{"ind", ",", "1", ",", 
          RowBox[{"ballisticReflect", "[", "y", "]"}]}], "}"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "apply", " ", "periodic", " ", "boundary", " ", "condition", " ", "at", 
       " ", "the", " ", "edges"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"threadList", " ", "=", " ", 
      RowBox[{"threadList", "/.", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ind_", "?", "IntegerQ"}], ",", 
           RowBox[{"x_", "?", "IntegerQ"}], ",", "y_List"}], "}"}], "/;", 
         RowBox[{
          RowBox[{"x", "\[Equal]", "1"}], "&&", 
          RowBox[{"!", 
           RowBox[{"y", "\[Element]", 
            SubscriptBox["\[ScriptCapitalR]", "3"]}]}]}]}], "\[RuleDelayed]", 
        " ", 
        RowBox[{"{", 
         RowBox[{"ind", ",", "1", ",", 
          RowBox[{"periodicBoundary", "[", "y", "]"}]}], "}"}]}]}]}], ";", 
     " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "threadList"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "final", " ", "check", " ", "goes", " ", "outside", " ", "the", " ", 
     "module", " ", "without", " ", "using", " ", "Return"}], " ", "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6889248832056923`*^9, 3.688924901332654*^9}, {
   3.688925073723852*^9, 3.688925135132024*^9}, {3.6889253936187325`*^9, 
   3.688925519221876*^9}, {3.6889257452205915`*^9, 3.688926127983986*^9}, {
   3.688926175411513*^9, 3.6889261845400543`*^9}, {3.688926220122675*^9, 
   3.6889262845120635`*^9}, {3.688926399691194*^9, 3.6889264392541385`*^9}, {
   3.6889265337799673`*^9, 3.688926551143615*^9}, {3.6889265868053536`*^9, 
   3.688926602731498*^9}, {3.688998986998911*^9, 3.688998999208606*^9}, {
   3.688999178950822*^9, 3.688999198185614*^9}, {3.688999307629692*^9, 
   3.6889993087448635`*^9}, {3.6889994818776116`*^9, 
   3.6889994916428757`*^9}, {3.6889996855168576`*^9, 
   3.6889996962606106`*^9}, {3.688999838477486*^9, 3.6889998450906787`*^9}, {
   3.6890001664270067`*^9, 3.689000174871176*^9}, {3.689000475126377*^9, 
   3.689000475457611*^9}, {3.6890097432101574`*^9, 3.689009743925389*^9}, {
   3.6890099917294836`*^9, 3.6890099919658957`*^9}, {3.689027883053751*^9, 
   3.689027883922697*^9}, {3.689107297476371*^9, 3.689107314218686*^9}, {
   3.68911231249363*^9, 3.6891124138947563`*^9}, 3.689280640404944*^9, 
   3.6895229392809644`*^9, {3.6895389750335045`*^9, 3.6895390120773797`*^9}, 
   3.6895584165851436`*^9, {3.689759713416875*^9, 3.689759978089579*^9}, 
   3.690376630283223*^9, 3.690379651291341*^9, 3.690379819442089*^9, 
   3.690452424267274*^9, {3.6911464702648945`*^9, 3.6911464981043687`*^9}, {
   3.691148122680217*^9, 3.6911481551684494`*^9}, {3.691148210833618*^9, 
   3.6911482109178534`*^9}, {3.691148466586608*^9, 3.6911484729699783`*^9}, {
   3.6911774814506197`*^9, 3.691177489134497*^9}, {3.691177862857607*^9, 
   3.691177883226801*^9}, {3.691178487083472*^9, 3.6911785027780476`*^9}, {
   3.691227364091275*^9, 3.6912273768353934`*^9}, {3.691237233007323*^9, 
   3.691237267300252*^9}, {3.692555348211551*^9, 3.6925553492265596`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ligand-receptor interaction", "Subsubsection",
 CellChangeTimes->{{3.689269442932041*^9, 3.6892694733389587`*^9}, {
   3.689538348263671*^9, 3.68953836044105*^9}, {3.689538393603615*^9, 
   3.689538400587778*^9}, {3.6895392870983825`*^9, 3.689539290149719*^9}, {
   3.6895396288463964`*^9, 3.689539629099626*^9}, 3.6895398713030577`*^9, {
   3.6896101067986884`*^9, 3.6896101082452583`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nearestFunction", "[", 
   RowBox[{"ligandList_", ",", " ", "membraneIndex_", ",", "membranepts_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"bindrad", " ", "=", " ", "0.01"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "freeReceptors", ",", "receptormap", ",", "interactions", ",", 
         "ligandlist"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ligandlist", " ", "=", " ", 
         RowBox[{"Cases", "[", 
          RowBox[{"ligandList", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ind_", ",", "1", ",", "pos_"}], "}"}], "\[RuleDelayed]",
             " ", 
            RowBox[{"{", 
             RowBox[{"ind", ",", "pos"}], "}"}]}]}], "]"}]}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{
         "lets", " ", "find", " ", "particle", " ", "index", " ", "and", " ", 
          "positons", " ", "for", " ", "ligands", " ", "outside", " ", "the", 
          " ", "cell"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"freeReceptors", " ", "=", " ", 
         RowBox[{"Cases", "[", 
          RowBox[{"membraneIndex", ",", 
           RowBox[{
            RowBox[{"PatternSequence", "[", 
             RowBox[{"x_", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"y_List", ",", "0", ",", "None", ",", "\"\<type\>\""}],
                "}"}]}], "]"}], "\[RuleDelayed]", " ", 
            RowBox[{"y", "\[Rule]", " ", "x"}]}]}], "]"}]}], " ", ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "determine", " ", "free", " ", "receptors", " ", "and", " ", 
          "invert", " ", "the", " ", "index", " ", "and", " ", "positions", 
          " ", "for", " ", "making", " ", "nearest", " ", "function"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"receptormap", " ", "=", " ", 
         RowBox[{"Nearest", "[", "freeReceptors", "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "creates", " ", "a", " ", "nearest", " ", "function", " ", "from", 
          " ", "the", " ", "freereceptors"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"interactions", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Reap", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", "particle", "}"}], ",", 
                 RowBox[{"Sow", "[", 
                  RowBox[{
                   RowBox[{"particle", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"receptormap", "[", 
                    RowBox[{
                    RowBox[{"particle", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "bindrad"}], "}"}]}], "]"}]}], "]"}]}], 
                "]"}], ",", "ligandlist"}], "]"}], ",", "_", ",", "List"}], 
            "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "//", 
          RowBox[{
           RowBox[{"DeleteDuplicatesBy", "[", 
            RowBox[{
             RowBox[{"Replace", "[", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x_Integer", ",", 
                  RowBox[{"{", 
                   RowBox[{"y_Integer", ",", "z___Integer"}], "}"}]}], "}"}], 
                "\[RuleDelayed]", " ", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}]}], ",", "2"}], "]"}], ",", 
             "Last"}], "]"}], "&"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "this", " ", "finds", " ", "the", " ", "nearest", " ", "receptor", 
           " ", "to", " ", "a", " ", "ligand", " ", "within", " ", "a", " ", 
           "defined", " ", 
           RowBox[{"radius", ".", " ", "since"}], " ", "many", " ", "ligands",
            " ", "maybe", " ", "close", " ", "to", " ", "a", " ", "receptor", 
           " ", "we", " ", "can", " ", "use", " ", "replace", " ", "to", " ", 
           "limit", " ", "to", " ", "the", " ", "interaction", " ", "to", " ",
            "a", " ", "single", " ", "receptor"}], "-", 
          RowBox[{
          "ligand", " ", "pair", " ", "for", " ", "all", " ", "possible", " ",
            "receptors"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Reverse", "[", 
         RowBox[{"interactions", ",", "2"}], "]"}]}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{"reversing", " ", "the", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"receptor", ",", " ", "ligand"}], "}"}], ".."}], "}"}], 
        " ", "pairs", " ", "and", " ", "exporting", " ", "from", " ", 
        "module"}], " ", "*)"}], " ", "\[IndentingNewLine]", "]"}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"membraneIndex", ",", "0", ",", "3"}], "]"}], ">", "0"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Length", "@", "ligandList"}], ">", "0", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "run", " ", "module", " ", "only", " ", "if", " ", "free", " ", 
       "receptors", " ", "are", " ", "present", " ", "as", " ", "well", " ", 
       "as", " ", "free", " ", "ligands"}], " ", "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.689344882942483*^9, 3.6893449080561943`*^9}, {
   3.6893450043116775`*^9, 3.6893450692703805`*^9}, {3.6893451284959006`*^9, 
   3.689345135262572*^9}, {3.689345186324257*^9, 3.689345201092557*^9}, {
   3.689345362796802*^9, 3.6893455588660393`*^9}, {3.6893456290835023`*^9, 
   3.689345634060437*^9}, {3.6893457313036404`*^9, 3.689345772989277*^9}, 
   3.6893458495829735`*^9, {3.6893460822204823`*^9, 3.6893461252762003`*^9}, {
   3.689346178744486*^9, 3.689346195125022*^9}, {3.689346232354287*^9, 
   3.6893463297365475`*^9}, {3.689346456891288*^9, 3.6893464855567393`*^9}, {
   3.6893465576026707`*^9, 3.689346712393695*^9}, {3.6893467574459467`*^9, 
   3.689346853827838*^9}, {3.689351642191574*^9, 3.6893516584581566`*^9}, {
   3.689352020951062*^9, 3.6893520258664656`*^9}, {3.6893521097033024`*^9, 
   3.6893521105659323`*^9}, 3.6893550427220306`*^9, {3.689355929295782*^9, 
   3.689355930264182*^9}, {3.6893560236822233`*^9, 3.68935603283324*^9}, 
   3.6893569398156652`*^9, {3.689357771106101*^9, 3.689357778136252*^9}, {
   3.6893642672851677`*^9, 3.6893642752833996`*^9}, {3.689364359606596*^9, 
   3.689364367056551*^9}, {3.689372848312371*^9, 3.6893728540484724`*^9}, {
   3.689372918699046*^9, 3.68937293429764*^9}, {3.6893736668213186`*^9, 
   3.6893736922818813`*^9}, {3.6893739362967825`*^9, 
   3.6893739779800806`*^9}, {3.6893743941479454`*^9, 3.6893744116514473`*^9}, 
   3.68953068620325*^9, {3.689537025546959*^9, 3.689537031147015*^9}, {
   3.689537557458613*^9, 3.689537584784204*^9}, {3.68953773781399*^9, 
   3.68953781606469*^9}, {3.6895379650726476`*^9, 3.68953796665768*^9}, {
   3.689538115893709*^9, 3.689538119077537*^9}, {3.6895385584000907`*^9, 
   3.6895385726670523`*^9}, {3.689538781585313*^9, 3.689538783652788*^9}, {
   3.689539075905966*^9, 3.6895390966801653`*^9}, 3.689539133038432*^9, 
   3.6895392522649975`*^9, 3.689539283503351*^9, 3.6895394106722975`*^9, {
   3.689539486965908*^9, 3.68953951601508*^9}, {3.689539580560742*^9, 
   3.6895396136349216`*^9}, {3.6895396494293537`*^9, 
   3.6895396869086795`*^9}, {3.689540019745126*^9, 3.6895400240974464`*^9}, 
   3.6895402127001286`*^9, 3.6895402465498085`*^9, {3.689540329645097*^9, 
   3.6895403478952475`*^9}, {3.6895408680716553`*^9, 3.689540871202877*^9}, {
   3.6895472911014705`*^9, 3.6895473005507927`*^9}, {3.6895475362377224`*^9, 
   3.689547539901808*^9}, {3.6895507029633617`*^9, 3.6895507227085195`*^9}, {
   3.689552246989952*^9, 3.689552279501792*^9}, {3.689552539738593*^9, 
   3.689552568036579*^9}, {3.68955320455257*^9, 3.6895532373166356`*^9}, {
   3.6895534482455587`*^9, 3.6895534526912427`*^9}, {3.689553483340869*^9, 
   3.689553515190055*^9}, {3.689553626461445*^9, 3.689553650970954*^9}, {
   3.6895541221916027`*^9, 3.6895541449889984`*^9}, {3.6895542569774623`*^9, 
   3.689554293257882*^9}, {3.6895544567023487`*^9, 3.689554456917975*^9}, {
   3.68955773377762*^9, 3.6895577532809887`*^9}, {3.6896013535370636`*^9, 
   3.6896013563215446`*^9}, {3.6896026447678556`*^9, 
   3.6896026764805813`*^9}, {3.6896064986692505`*^9, 3.689606503091652*^9}, {
   3.6896077950646873`*^9, 3.689607795633177*^9}, {3.689608697638708*^9, 
   3.689608724169401*^9}, 3.689619312000948*^9, {3.6896200387971926`*^9, 
   3.6896200440283375`*^9}, {3.6896201874924088`*^9, 3.6896201918459215`*^9}, 
   3.6896202763851633`*^9, {3.689620387312313*^9, 3.689620413117197*^9}, {
   3.6897600018801036`*^9, 3.6897602061636453`*^9}, {3.6897604047244835`*^9, 
   3.689760499541767*^9}, {3.689760548391*^9, 3.689760765807161*^9}, {
   3.6901445594654984`*^9, 3.690144567561894*^9}, {3.6901957781038847`*^9, 
   3.6901957805555353`*^9}, {3.6902754665357533`*^9, 3.690275490511092*^9}, {
   3.6902756944827385`*^9, 3.690275716090679*^9}, 3.690376630298869*^9, 
   3.6903796512978706`*^9, 3.690379819448594*^9, 3.690452424267274*^9, {
   3.6921020790853276`*^9, 3.6921020827861032`*^9}, {3.692102313410654*^9, 
   3.6921023550450883`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"biasSharedReceptors", "[", 
   RowBox[{"nod_", ",", "left_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nodal", "=", "nod"}], ",", 
       RowBox[{"lefty", "=", "left"}], ",", "union", ",", "probability"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"union", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"nodal", ",", "lefty"}], "]"}], ",", "Last"}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", "x_"}], "}"}], ".."}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "part", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"probability", " ", "=", " ", 
            RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"probability", ">", "0.5"}], ",", "\[IndentingNewLine]", 
             RowBox[{"lefty", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Delete", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Position", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{"part", ",", "#"}], "]"}]}]}], "]"}]}]}], "]"}], 
                "&"}], "@", "lefty"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"nodal", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Delete", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Position", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"Intersection", "[", 
                    RowBox[{"part", ",", "#"}], "]"}]}]}], "]"}]}]}], "]"}], 
                "&"}], "@", "nodal"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], ",", "union"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "@", 
       RowBox[{"{", 
        RowBox[{"nodal", ",", "lefty"}], "}"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"nod", "=!=", 
      RowBox[{"{", "}"}]}], " ", "&&", " ", 
     RowBox[{"left", " ", "=!=", 
      RowBox[{"{", "}"}]}]}], ")"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "If", " ", "a", " ", "receptor", " ", "is", " ", "interacting", " ", 
      "with", " ", "both", " ", "nodal", " ", "and", " ", "lefty", " ", "at", 
      " ", "the", " ", "same", " ", "time"}], ",", " ", 
     RowBox[{
     "bias", " ", "the", " ", "system", " ", "to", " ", "choose", " ", 
      "one"}]}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6896157032852263`*^9, 3.6896158086926003`*^9}, {
   3.689615862349615*^9, 3.6896159532236247`*^9}, {3.6896160150323553`*^9, 
   3.689616015863804*^9}, 3.689616126539146*^9, {3.6896162331114597`*^9, 
   3.6896163575465927`*^9}, {3.689616391697073*^9, 3.6896164329306035`*^9}, {
   3.689616467006533*^9, 3.6896164877750463`*^9}, {3.6896166822152667`*^9, 
   3.6896167490782876`*^9}, {3.689618692430719*^9, 3.689618695061784*^9}, {
   3.689619827490219*^9, 3.6896198291897535`*^9}, {3.689619937956193*^9, 
   3.689619940887429*^9}, {3.689620697036478*^9, 3.689620699167419*^9}, {
   3.689669047787281*^9, 3.689669064199698*^9}, {3.6896695941365747`*^9, 
   3.6896696170926175`*^9}, {3.689670533579712*^9, 3.689670535464665*^9}, {
   3.6896705931645107`*^9, 3.68967059426478*^9}, {3.689670627435962*^9, 
   3.6896707480860205`*^9}, {3.6896708227711334`*^9, 3.689670825507393*^9}, 
   3.6896713361902404`*^9, 3.689673253210061*^9, {3.6896755323579063`*^9, 
   3.6896755387731223`*^9}, 3.689676036376688*^9, 3.6896763319831033`*^9, 
   3.6896763628905525`*^9, {3.68967645080727*^9, 3.689676494356386*^9}, 
   3.689677058019413*^9, 3.689677147052798*^9, {3.6896771798656454`*^9, 
   3.6896772100640526`*^9}, {3.6897161652822986`*^9, 
   3.6897161702966013`*^9}, {3.689716829856303*^9, 3.6897168342408943`*^9}, {
   3.689716870281556*^9, 3.6897168758501415`*^9}, {3.6897198901298122`*^9, 
   3.689719891030511*^9}, {3.689764791024482*^9, 3.6897648407557993`*^9}, {
   3.689764873072341*^9, 3.689764877755481*^9}, {3.6901918766734223`*^9, 
   3.690191879427644*^9}, {3.6901920928735185`*^9, 3.690192099773696*^9}, {
   3.690276157236298*^9, 3.690276225370245*^9}, {3.690276285258876*^9, 
   3.6902763075187907`*^9}, {3.690276752292917*^9, 3.6902768084972105`*^9}, {
   3.690276849034808*^9, 3.6902768744974265`*^9}, 3.690376630298869*^9, 
   3.6903796513038654`*^9, 3.6903798194515963`*^9, 3.690452424267274*^9, 
   3.6921970081709747`*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bindingEvent", "[", 
   RowBox[{"membraneIndex_", ",", 
    RowBox[{"{", 
     RowBox[{"ligandpos_", ",", "receptorpos_"}], "}"}], ",", "ligandnom_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "coord", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coord", " ", "=", " ", 
      RowBox[{
       RowBox[{"membraneIndex", "[", 
        RowBox[{"[", "receptorpos", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{"membraneIndex", ",", 
       RowBox[{"receptorpos", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{"receptorpos", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"coord", ",", "1", ",", "ligandpos", ",", "ligandnom"}], 
           "}"}]}], ")"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "for", " ", "successful", " ", "interactions", " ", "make", " ", "the", 
      " ", "receptor", " ", "unavailable", " ", "for", " ", "further", " ", 
      "binding"}], ";", " ", 
     RowBox[{
     "associate", " ", "the", " ", "unavailability", " ", "index", " ", "of", 
      " ", "1"}]}], ",", " ", 
    RowBox[{"ligand", "-", 
     RowBox[{"type", " ", "and", " ", "ligand", " ", "index"}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.688982500306243*^9, 3.6889825522230463`*^9}, {
   3.688982938461665*^9, 3.6889829413448305`*^9}, 3.6889833036539693`*^9, {
   3.6889833760542283`*^9, 3.688983376969783*^9}, 3.6889959194140744`*^9, 
   3.689010697545928*^9, {3.6890131025484705`*^9, 3.6890131029013505`*^9}, 
   3.6890272845080767`*^9, {3.6890279741076574`*^9, 3.689028006223028*^9}, {
   3.6891072591936407`*^9, 3.6891072619391594`*^9}, 3.6891882038517675`*^9, {
   3.689550495254798*^9, 3.6895504993705893`*^9}, {3.6895514796594524`*^9, 
   3.6895514804279375`*^9}, {3.689555123270275*^9, 3.6895551268187313`*^9}, {
   3.6895552533957186`*^9, 3.6895552681247025`*^9}, {3.6895553049080296`*^9, 
   3.6895553730546436`*^9}, {3.6897608127489753`*^9, 3.689760934164822*^9}, {
   3.6901958455709543`*^9, 3.690195883559662*^9}, {3.6901965697110724`*^9, 
   3.6901965820834675`*^9}, 3.690376630314475*^9, 3.6903796513088827`*^9, 
   3.6903798194535985`*^9, 3.690452424267274*^9},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"interAct", "[", 
   RowBox[{"specie_", ",", "specieind_", ",", "membraneind_", ",", 
    RowBox[{"interactingspecies", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_", ",", "_"}], "}"}], ".."}], "}"}]}], ",", "ligandname_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"membraneIndUpdate", ",", "successligand", ",", 
       RowBox[{"specielist", " ", "=", " ", "specie"}], ",", 
       RowBox[{"index", "=", "specieind"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"membraneIndUpdate", " ", "=", " ", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"bindingEvent", "[", 
           RowBox[{"#1", ",", "#2", ",", "ligandname"}], "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"membraneind", ",", 
           RowBox[{
            RowBox[{"##", "&"}], "@@", "interactingspecies"}]}], "}"}]}], 
        "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "run", " ", "bindingEvent", " ", "module", " ", "for", " ", 
        "successful", " ", "interactions"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"successligand", " ", "=", " ", 
       RowBox[{
        RowBox[{"#", "&"}], "@@@", "interactingspecies"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "all", " ", "the", " ", "ligands", " ", "that", " ", "have", " ", 
        "successfully", " ", "interacted"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"specielist", " ", "=", " ", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"list", ",", "index"}], "}"}], ",", 
           RowBox[{"list", "/.", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"y_", ",", "_", ",", 
                RowBox[{"{", 
                 RowBox[{"_", ",", "_"}], "}"}]}], "}"}], "/;", 
              RowBox[{"y", "\[Equal]", "index"}]}], "\[RuleDelayed]", " ", 
             RowBox[{"Sequence", "[", "]"}]}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"specielist", ",", 
           RowBox[{
            RowBox[{"##", "&"}], "@@", "successligand"}]}], "}"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "deleting", " ", "successful", " ", "ligands", " ", "from", " ", "the",
         " ", "ligandlist"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"KeyDropFrom", "[", 
       RowBox[{"index", ",", "successligand"}], "]"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "deleting", " ", "ligands", " ", "from", " ", "the", " ", "ligand", 
        " ", "index"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"specielist", ",", "index", ",", "membraneIndUpdate"}], 
       "}"}]}]}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "sending", " ", "the", " ", "list", " ", "of", " ", "updated", " ", 
       "ligandlist"}], ",", " ", 
      RowBox[{
      "ligandindex", " ", "and", " ", "membraneindex", " ", "out", " ", "of", 
       " ", "module"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}], "/;", 
   RowBox[{
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{"membraneind", ",", "0", ",", "3"}], "]"}], ">", "0"}], " ", "&&",
     " ", 
    RowBox[{
     RowBox[{"Length", "@", "specieind"}], ">", "0", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "execute", " ", "the", " ", "module", " ", "only", " ", "if", " ", "a", 
       " ", "free", " ", "receptor", " ", "is", " ", "present"}], " ", 
      "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6893680403356857`*^9, 3.689368046935377*^9}, {
   3.689368109400529*^9, 3.6893681529534817`*^9}, {3.6893687382871256`*^9, 
   3.6893687387877502`*^9}, {3.6893694754673123`*^9, 3.689369483451578*^9}, {
   3.689371735542927*^9, 3.689371743774892*^9}, {3.689373344060763*^9, 
   3.689373354295063*^9}, {3.689374438447076*^9, 3.6893744388310223`*^9}, {
   3.689375359269808*^9, 3.689375374787761*^9}, {3.6893756478080945`*^9, 
   3.6893756481918707`*^9}, 3.6895403394624844`*^9, {3.689541719323121*^9, 
   3.6895417254379015`*^9}, {3.689542030898687*^9, 3.689542034299779*^9}, {
   3.689549004579732*^9, 3.6895490380379453`*^9}, {3.6895493339333897`*^9, 
   3.689549338435819*^9}, {3.6895539041926517`*^9, 3.6895539083225155`*^9}, {
   3.6896027711090813`*^9, 3.689602858747505*^9}, {3.689607772222756*^9, 
   3.6896077825739417`*^9}, {3.6896078541804357`*^9, 
   3.6896079041381392`*^9}, {3.6897143133250895`*^9, 3.689714361402668*^9}, {
   3.689714487425497*^9, 3.6897145089695497`*^9}, 3.689719333518363*^9, {
   3.68975632353786*^9, 3.6897563309515734`*^9}, {3.6897609496665993`*^9, 
   3.6897610245246425`*^9}, {3.6897610751002474`*^9, 
   3.6897614067435913`*^9}, {3.689761501796858*^9, 3.689761562108337*^9}, {
   3.6897616539291515`*^9, 3.6897616802850695`*^9}, {3.6897617830624466`*^9, 
   3.6897617837622814`*^9}, {3.690275541995509*^9, 3.690275542448197*^9}, {
   3.6902755770876837`*^9, 3.6902755846068783`*^9}, 3.690376630314475*^9, 
   3.690379651315888*^9, 3.6903798194566126`*^9, 3.690452424282899*^9, {
   3.6921795393181696`*^9, 3.6921795688908234`*^9}, {3.692179746862023*^9, 
   3.6921797470458255`*^9}, {3.6921798232502203`*^9, 
   3.6921798397284064`*^9}, {3.6921798700805883`*^9, 
   3.6921799164652567`*^9}, {3.6921799959606533`*^9, 3.692180114605595*^9}, {
   3.6921801863903522`*^9, 3.6921801902058983`*^9}, {3.6926115558894253`*^9, 
   3.6926115799515457`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
unbinding mechanics (execute when there is atleast one ligand that is bound)\
\>", "Subsubsection",
 CellChangeTimes->{{3.6892695015512886`*^9, 3.6892695098358088`*^9}, {
  3.689538480367772*^9, 3.689538502002045*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"unbindingDist", "[", 
   RowBox[{"centre_", ",", "radius_", ",", "cellrad_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pt", "=", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Norm", "[", "pt", "]"}], "\[LessEqual]", "cellrad"}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"pt", " ", "=", " ", 
        RowBox[{"RandomPoint", "[", 
         RowBox[{"Circle", "[", 
          RowBox[{"centre", ",", "radius"}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "pt"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.692181698049545*^9, 3.692181701365405*^9}, {
  3.692181822467249*^9, 3.6921818234354734`*^9}, {3.692182091752821*^9, 
  3.692182105751573*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"unbindingMechanics", "[", 
   RowBox[{"membraneind_", ",", "ligandlist_", ",", "ligandind_", ",", 
    RowBox[{"ligandname_", "?", "StringQ"}]}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"unbindrad", " ", "=", " ", "0.0001"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"membraneInd", "=", "membraneind"}], ",", 
         RowBox[{"ligandList", "=", "ligandlist"}], ",", 
         RowBox[{"ligandInd", " ", "=", "ligandind"}], ",", 
         "\[IndentingNewLine]", "boundSpecies", ",", " ", "probability", ",", 
         "position", ",", "dissocligand", ",", 
         RowBox[{"cellrad", " ", "=", " ", "0.75"}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"boundSpecies", " ", "=", " ", 
         RowBox[{"Cases", "[", 
          RowBox[{"membraneInd", ",", 
           RowBox[{
            RowBox[{"PatternSequence", "[", 
             RowBox[{"_Integer", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"p1_", ",", "p2_"}], "}"}], ",", "1", ",", "y_", ",",
                 "ligandname"}], "}"}]}], "]"}], "\[RuleDelayed]", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"{", 
               RowBox[{"p1", ",", "p2"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
        " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "finding", " ", "all", " ", "the", " ", "bound", " ", "ligands", " ",
           "from", " ", "membraneindex", " ", "and", " ", "placing", " ", 
          "the", " ", "their", " ", "index", " ", "together", " ", "with", 
          " ", "receptor", " ", "position"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"probability", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], ",", 
           RowBox[{"Length", "@", "boundSpecies"}]}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "lets", " ", "generate", " ", "probabilities", " ", "equal", " ", 
          "to", " ", "the", " ", "number", " ", "of", " ", "bound", " ", 
          "species"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"position", " ", "=", " ", 
         RowBox[{"Position", "[", 
          RowBox[{"probability", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", ">", "0.95"}], "&"}], ")"}]}]}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "find", " ", "positions", " ", "of", " ", "successful", " ", 
          "dissociations"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"dissocligand", " ", "=", " ", 
         RowBox[{
          RowBox[{"boundSpecies", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"Flatten", "@", "position"}], "]"}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "find", " ", "all", " ", "the", " ", "ligands", " ", "that", " ", 
          "have", " ", "been", " ", "dissociated"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"membraneInd", " ", "=", " ", 
         RowBox[{"Replace", "[", 
          RowBox[{"membraneInd", ",", 
           RowBox[{
            RowBox[{"PatternSequence", "[", 
             RowBox[{"x_Integer", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"p1_", ",", "p2_"}], "}"}], ",", "1", ",", 
                RowBox[{"Alternatives", "@@", "dissocligand"}], ",", 
                "ligandname"}], "}"}]}], "]"}], "\[RuleDelayed]", " ", 
            RowBox[{"(", 
             RowBox[{"x", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"p1", ",", "p2"}], "}"}], ",", "0", ",", "None", 
                ",", "\"\<type\>\""}], "}"}]}], ")"}]}], ",", "1"}], "]"}]}], 
        ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "freeing", " ", "up", " ", "the", " ", "membrane", " ", "receptors", 
          " ", "available", " ", "for", " ", "successful", " ", 
          "dissociations"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"ligandInd", " ", "=", " ", 
         RowBox[{"KeySort", "@", 
          RowBox[{"Append", "[", 
           RowBox[{"ligandInd", ",", 
            RowBox[{"Thread", "[", 
             RowBox[{"dissocligand", "\[Rule]", " ", "1"}], "]"}]}], 
           "]"}]}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "add", " ", "the", " ", "dissociated", " ", "ligands", " ", "back", 
          " ", "to", " ", "the", " ", "ligand", " ", "index", " ", "and", " ",
           "then", " ", "put", " ", "them", " ", "in", " ", "ascending", " ", 
          "order"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
        RowBox[{"ligandList", "=", 
         RowBox[{"SortBy", "[", 
          RowBox[{
           RowBox[{"Fold", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Insert", "[", 
               RowBox[{"#1", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "0", ",", 
                  RowBox[{"unbindingDist", "[", 
                   RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "unbindrad", ",", 
                    "cellrad"}], "]"}]}], "}"}], ",", 
                RowBox[{"-", "1"}]}], "]"}], "&"}], ",", "ligandList", ",", 
             RowBox[{"boundSpecies", "[", 
              RowBox[{"[", 
               RowBox[{"Flatten", "@", "position"}], "]"}], "]"}]}], "]"}], 
           " ", ",", "First"}], "]"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "adding", " ", "the", " ", "ligand", " ", "back", " ", "to", " ", 
          "the", " ", "ligand", " ", "list", " ", "together", " ", "with", 
          " ", "its", " ", "position"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"membraneInd", ",", "ligandList", ",", "ligandInd"}], 
         "}"}]}]}], "  ", 
      RowBox[{"(*", " ", 
       RowBox[{"sending", " ", "the", " ", "updated", " ", 
        RowBox[{"{", 
         RowBox[{
         "membraneindex", ",", " ", "ligandlist", ",", "ligandindex"}], "}"}],
         " ", "out", " ", "of", " ", "module"}], " ", "*)"}], 
      "\[IndentingNewLine]", "]"}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{"membraneind", ",", "ligandname", ",", "3"}], "]"}], ">", "0", 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "run", " ", "only", " ", "if", " ", "the", " ", "particular", " ", 
      "ligand", " ", "bound"}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6890830883834543`*^9, 3.6890831001258383`*^9}, {
   3.6890831706657286`*^9, 3.6890831833609395`*^9}, {3.689083221744999*^9, 
   3.6890832295241947`*^9}, {3.6890832598370175`*^9, 
   3.6890832698017197`*^9}, {3.6890833012590075`*^9, 3.689083323788252*^9}, {
   3.689084263735565*^9, 3.689084280145955*^9}, {3.6890843135472455`*^9, 
   3.689084353675317*^9}, {3.689085041735279*^9, 3.689085296869334*^9}, {
   3.689085334046743*^9, 3.689085529068557*^9}, {3.689085590444647*^9, 
   3.6890856589065037`*^9}, {3.689085712558285*^9, 3.6890857489007025`*^9}, {
   3.6890859593516293`*^9, 3.689086007900046*^9}, {3.689086071289113*^9, 
   3.6890860732043705`*^9}, {3.68910647229241*^9, 3.6891064804452186`*^9}, {
   3.6891065219700513`*^9, 3.689106526406112*^9}, {3.689106675885251*^9, 
   3.6891067924882827`*^9}, {3.6891068398619323`*^9, 3.6891068439583006`*^9}, 
   3.6891069003403883`*^9, {3.6891070205771694`*^9, 3.6891070332311926`*^9}, {
   3.6891072671550283`*^9, 3.689107274423048*^9}, {3.689108155773509*^9, 
   3.689108155873389*^9}, {3.689110871763006*^9, 3.6891108739318347`*^9}, 
   3.689110904075761*^9, {3.6891110388358746`*^9, 3.689111039534438*^9}, {
   3.6891115704124002`*^9, 3.6891115944524803`*^9}, {3.689111711411474*^9, 
   3.6891117344221096`*^9}, 3.6891122596695023`*^9, {3.6891659584656277`*^9, 
   3.6891659677991996`*^9}, {3.6891667643983765`*^9, 3.6891668179212065`*^9}, 
   3.689166889727294*^9, {3.6891692473443937`*^9, 3.6891692556676292`*^9}, 
   3.689169946528355*^9, {3.689264957756592*^9, 3.6892649579035716`*^9}, {
   3.6892654906759377`*^9, 3.6892654919444504`*^9}, 3.689374713783906*^9, {
   3.689375028495329*^9, 3.6893750295874863`*^9}, {3.6893751348974*^9, 
   3.6893751353185616`*^9}, {3.6893753307354407`*^9, 3.689375340704048*^9}, {
   3.689375414271017*^9, 3.689375414370969*^9}, {3.6893756328965096`*^9, 
   3.6893756419398003`*^9}, 3.6895113878635263`*^9, {3.6895131154063387`*^9, 
   3.6895131216715446`*^9}, {3.689513684043231*^9, 3.68951370567029*^9}, {
   3.689513769021243*^9, 3.6895137714501243`*^9}, 3.6895139873434205`*^9, 
   3.689515841975286*^9, {3.6895158789517193`*^9, 3.6895158888342886`*^9}, {
   3.6895168544718795`*^9, 3.6895169003781624`*^9}, {3.689519518615824*^9, 
   3.689519519599579*^9}, {3.689520942898498*^9, 3.6895209440136604`*^9}, {
   3.6895316409722867`*^9, 3.689531643155753*^9}, {3.6895414833629184`*^9, 
   3.6895414842630234`*^9}, {3.6895417346518493`*^9, 
   3.6895417396976795`*^9}, {3.689542012119665*^9, 3.689542016118353*^9}, {
   3.6895421267650194`*^9, 3.689542129427148*^9}, {3.6895539138379655`*^9, 
   3.689553915853386*^9}, {3.689554465053569*^9, 3.689554484012016*^9}, {
   3.68955722677054*^9, 3.689557227023576*^9}, {3.6895580605307856`*^9, 
   3.6895580897273393`*^9}, {3.6895581500083947`*^9, 3.689558151776163*^9}, {
   3.6896101689151077`*^9, 3.6896101795946455`*^9}, {3.6896102138194375`*^9, 
   3.68961021587121*^9}, {3.6896107980335283`*^9, 3.6896108599111614`*^9}, {
   3.68970874520971*^9, 3.6897087465063457`*^9}, {3.689709840924893*^9, 
   3.689709864426357*^9}, {3.689710387375425*^9, 3.689710390307808*^9}, {
   3.6897127388475204`*^9, 3.6897127509861155`*^9}, {3.6897128661032777`*^9, 
   3.689712878542594*^9}, {3.689713376513117*^9, 3.689713383543293*^9}, {
   3.6897134225593367`*^9, 3.6897134255278053`*^9}, {3.6897135653166428`*^9, 
   3.6897135993431635`*^9}, 3.689713727109234*^9, {3.689719094914816*^9, 
   3.6897191012813954`*^9}, 3.689719337817085*^9, 3.6897212130802336`*^9, {
   3.689721451440507*^9, 3.6897214550562124`*^9}, {3.6897215431300197`*^9, 
   3.689721556042739*^9}, {3.689753610511204*^9, 3.689753615225629*^9}, {
   3.6897562965171022`*^9, 3.689756314512783*^9}, {3.689761711566434*^9, 
   3.68976182176138*^9}, {3.689762219403458*^9, 3.6897624617484474`*^9}, {
   3.689762588967354*^9, 3.689762608846407*^9}, 3.690109635614379*^9, {
   3.6901960777619605`*^9, 3.690196091289353*^9}, {3.6902142554747276`*^9, 
   3.6902142565752144`*^9}, 3.690376630314475*^9, 3.6903796513228884`*^9, 
   3.690379819459612*^9, 3.690452424282899*^9, {3.6921816588911304`*^9, 
   3.692181660075794*^9}, {3.6921818304944153`*^9, 3.6921818419435697`*^9}, {
   3.6921818771156797`*^9, 3.692181942727373*^9}, {3.6921820605471954`*^9, 
   3.6921820873922434`*^9}, {3.6921824064141984`*^9, 3.692182407882794*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ligand production ", "Subsubsection",
 CellChangeTimes->{{3.690050164927306*^9, 3.690050173058386*^9}, 
   3.690277378354281*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"productionEvent", "[", 
   RowBox[{
    RowBox[{"diff_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", ">", "0"}], "&"}], ")"}]}], ",", "list_", ",", "ind_", 
    ",", "count_"}], "]"}], ":=", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"particlelist", " ", "=", " ", "list"}], ",", 
      RowBox[{"particleind", " ", "=", " ", "ind"}], ",", " ", "newpoints", 
      ",", " ", "newindices", ",", "\[IndentingNewLine]", "countupdate"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newpoints", "  ", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomPoint", "[", "\[ScriptCapitalR]", "]"}], ",", "diff"}],
        "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"generate", " ", "new", " ", "points"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"newindices", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"#", ",", 
           RowBox[{"#", "+", "diff"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;"}], "]"}], "]"}], "&"}], "@", "count"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "generating", " ", "the", " ", "indices", " ", "of", " ", "the", " ", 
       "newly", " ", "added", " ", "points"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"countupdate", " ", "=", " ", 
      RowBox[{"count", "+", "diff"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "increase", " ", "the", " ", "counter", " ", "so", " ", "that", " ", 
       "new", " ", "particles", " ", "produced", " ", "do", " ", "not", " ", 
       "interfere", " ", "with", " ", "existing", " ", "ones"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"particlelist", ",", 
          RowBox[{"{", 
           RowBox[{"#1", ",", "0", ",", "#2"}], "}"}]}], "]"}], "&"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"newindices", ",", "newpoints"}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "add", " ", "the", " ", "new", " ", "points", " ", "to", " ", "the", 
       " ", "existing", " ", "particle", " ", "list"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"particleind", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"newindices", "\[Rule]", " ", "0"}], "]"}]}], "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "add", " ", "the", " ", "new", " ", "particle", " ", "indices", " ", 
       "to", " ", "the", " ", "index", " ", "list"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"particlelist", ",", "particleind", ",", "countupdate"}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.690094930416482*^9, 3.6900949363808784`*^9}, {
   3.6900949728758*^9, 3.690094996167984*^9}, {3.6900950393479795`*^9, 
   3.6900951421265864`*^9}, {3.690095264967538*^9, 3.6900953439564714`*^9}, {
   3.690095456341631*^9, 3.6900954579421735`*^9}, {3.690095618556245*^9, 
   3.6900956336523285`*^9}, {3.6900958951052923`*^9, 3.690095966621867*^9}, {
   3.690096007511916*^9, 3.6900960810568123`*^9}, {3.6900961183164616`*^9, 
   3.6900961948049426`*^9}, {3.690096230394556*^9, 3.6900962758666415`*^9}, {
   3.690096806132777*^9, 3.6900968127776384`*^9}, {3.6900975639109387`*^9, 
   3.690097570746942*^9}, {3.6901030543033547`*^9, 3.690103061301773*^9}, {
   3.690103615968731*^9, 3.6901036165997143`*^9}, {3.690104415397357*^9, 
   3.6901044191646805`*^9}, {3.6901057450424166`*^9, 3.690105751573838*^9}, 
   3.6901060170082436`*^9, {3.690108257609262*^9, 3.690108316090394*^9}, 
   3.690108493015215*^9, 3.6901122893090296`*^9, {3.6901151500005097`*^9, 
   3.690115153483758*^9}, {3.6901418003185463`*^9, 3.6901418023869777`*^9}, 
   3.690219922795714*^9, {3.690221275853134*^9, 3.6902212985370216`*^9}, {
   3.6902930410198174`*^9, 3.6902930702635202`*^9}, {3.690293143493945*^9, 
   3.6902931770690985`*^9}, 3.6903766303301177`*^9, 3.6903796513288927`*^9, 
   3.690379819461603*^9, {3.690396255423563*^9, 3.6903962784634666`*^9}, 
   3.690452424282899*^9, {3.6904659897842903`*^9, 3.69046601291322*^9}, {
   3.690466051461128*^9, 3.6904660876764383`*^9}, {3.6904662032030687`*^9, 
   3.6904662581686773`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"produceParticles", "[", 
   RowBox[{
   "nodallis_", ",", "leftylis_", ",", "nodalin_", ",", "leftyin_", ",", 
    "membraneind_", ",", "countnod_", ",", "countleft_", ",", "listprod_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nodalthread", " ", "=", " ", "nodallis"}], ",", 
      RowBox[{"leftythread", " ", "=", " ", "leftylis"}], ",", 
      RowBox[{"nodalBindex", " ", "=", " ", "nodalin"}], ",", 
      RowBox[{"leftyBindex", " ", "=", " ", "leftyin"}], ",", "boundnodal", 
      ",", "boundlefty", ",", "\[IndentingNewLine]", "diff", ",", 
      RowBox[{"countnodal", " ", "=", " ", "countnod"}], ",", 
      RowBox[{"countlefty", "=", "countleft"}], ",", 
      RowBox[{"listp", " ", "=", " ", "listprod"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"boundnodal", " ", "=", " ", 
      RowBox[{"Count", "[", 
       RowBox[{"membraneind", ",", "\"\<nodal\>\"", ",", "3"}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "count", " ", "the", " ", "number", " ", "of", " ", "bound", " ", 
       "nodal", " ", "particles"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listp", ",", "boundnodal"}], "]"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "add", " ", "to", " ", "the", " ", "list", " ", "that", " ", "accounts",
        " ", "for", " ", "the", " ", "production", " ", "delay"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "listp"}], "==", "10"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"diff", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#2", "-", "#1"}], ")"}], "&"}], "@@", 
           RowBox[{"Take", "[", 
            RowBox[{"listp", ",", "2"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"boundlefty", " ", "=", " ", 
          RowBox[{"Count", "[", 
           RowBox[{"membraneind", ",", "\"\<lefty\>\"", ",", "3"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"nodalthread", ",", "nodalBindex", ",", "countnodal"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"leftythread", ",", "leftyBindex", ",", "countlefty"}], 
             "}"}]}], "}"}], "=", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"productionEvent", "[", "##", "]"}], ")"}], "/.", 
              RowBox[{
               RowBox[{"productionEvent", "[", 
                RowBox[{"x_", ",", "y__"}], "]"}], "\[RuleDelayed]", " ", 
               RowBox[{"{", "y", "}"}]}]}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"diff", ",", "diff"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"nodalthread", ",", "leftythread"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"nodalBindex", ",", "leftyBindex"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"countnodal", ",", "countlefty"}], "}"}]}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"listp", " ", "=", " ", 
          RowBox[{"Delete", "[", 
           RowBox[{"listp", ",", "1"}], "]"}]}], ";"}], ")"}]}], "]"}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "when", " ", "the", " ", "size", " ", "of", " ", "the", " ", "list", 
        " ", "is", " ", "equal", " ", "to", " ", "some", " ", "integer", " ", 
        "number", " ", "execute", " ", "the", " ", "code"}], ",", " ", 
       RowBox[{
       "which", " ", "in", " ", "essence", " ", "means", " ", "a", " ", 
        "delay", " ", "before", " ", "the", " ", "first", " ", "production", 
        " ", "event"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "nodalthread", ",", "nodalBindex", ",", "leftythread", ",", 
       "leftyBindex", ",", "countnodal", ",", "countlefty", ",", "listp"}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.690093543913889*^9, 3.6900935743389874`*^9}, {
   3.6900936516171227`*^9, 3.6900936756301956`*^9}, {3.690093715704155*^9, 
   3.6900937601431756`*^9}, {3.6900937952058477`*^9, 
   3.6900938018902483`*^9}, {3.6900940473508005`*^9, 3.690094097339385*^9}, {
   3.690094139177047*^9, 3.690094153844398*^9}, {3.69009436772394*^9, 
   3.69009439445253*^9}, {3.690094425345738*^9, 3.690094444791791*^9}, {
   3.6900944854824758`*^9, 3.690094519176199*^9}, {3.6900963954439373`*^9, 
   3.690096425730215*^9}, {3.6900964655561333`*^9, 3.6900964660028024`*^9}, {
   3.690096601350859*^9, 3.6900966356819706`*^9}, {3.6900967679366927`*^9, 
   3.69009684822643*^9}, {3.690096900722103*^9, 3.690096933907445*^9}, {
   3.690096985627864*^9, 3.690096998360712*^9}, {3.6900970640437126`*^9, 
   3.690097093649246*^9}, {3.690097128829703*^9, 3.690097188027073*^9}, {
   3.6900972539243174`*^9, 3.690097319929702*^9}, {3.6900973543607097`*^9, 
   3.6900975306398983`*^9}, {3.6900975790626497`*^9, 
   3.6900977034979258`*^9}, {3.6900977643492775`*^9, 
   3.6900978999034643`*^9}, {3.6901031985112467`*^9, 3.690103220054453*^9}, {
   3.690103313150947*^9, 3.69010331385071*^9}, {3.690103538010497*^9, 
   3.6901035695977*^9}, {3.690103894008129*^9, 3.6901038948551807`*^9}, {
   3.6901041585361156`*^9, 3.6901041681503425`*^9}, 3.690104275050495*^9, 
   3.6901044137173347`*^9, {3.6901049010785275`*^9, 3.6901049633632126`*^9}, {
   3.690105280924305*^9, 3.6901052947524214`*^9}, {3.6901057996460953`*^9, 
   3.6901058045966263`*^9}, {3.690106359888359*^9, 3.6901063854626107`*^9}, {
   3.6901065614620934`*^9, 3.6901065617149887`*^9}, {3.6901082466214256`*^9, 
   3.690108249469488*^9}, {3.6901084972779636`*^9, 3.69010849866226*^9}, 
   3.6901092468086305`*^9, {3.6901122966424894`*^9, 3.6901123180377893`*^9}, {
   3.69011241312984*^9, 3.6901125086801653`*^9}, {3.6901126322204742`*^9, 
   3.6901126891798944`*^9}, {3.690114271854701*^9, 3.690114311859515*^9}, {
   3.690115239241167*^9, 3.690115245370191*^9}, {3.690115285191497*^9, 
   3.6901153002553077`*^9}, {3.690115499653105*^9, 3.6901155020370216`*^9}, {
   3.6901155499684334`*^9, 3.6901155734669914`*^9}, {3.6901158204311333`*^9, 
   3.690115822829733*^9}, {3.6901391420844655`*^9, 3.6901391471296444`*^9}, {
   3.6901417749053073`*^9, 3.690141797402643*^9}, {3.6902295320999465`*^9, 
   3.690229567194776*^9}, {3.690292673056202*^9, 3.690292674371603*^9}, {
   3.6902927826626496`*^9, 3.6902927830311694`*^9}, {3.6902928610199056`*^9, 
   3.690292899265313*^9}, {3.6902929598127937`*^9, 3.690292974339944*^9}, {
   3.690293197653469*^9, 3.690293199900116*^9}, 3.6902932562216234`*^9, {
   3.690293293822583*^9, 3.690293306824442*^9}, {3.690293433773181*^9, 
   3.690293434808448*^9}, 3.6903766303301177`*^9, 3.6903796513348885`*^9, {
   3.690379819464627*^9, 3.6903798720458097`*^9}, {3.6903956690452766`*^9, 
   3.690395687624586*^9}, {3.690396375050191*^9, 3.690396408745453*^9}, {
   3.6904522642063704`*^9, 3.690452279567745*^9}, {3.69045233427613*^9, 
   3.690452354217494*^9}, {3.6904523842616253`*^9, 3.690452457171006*^9}, {
   3.6904581124267836`*^9, 3.690458116051732*^9}, {3.6904657764044094`*^9, 
   3.6904659428111305`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["degradation module (execute for free ligands)", "Subsubsection",
 CellChangeTimes->{{3.690047671435588*^9, 3.6900476924849215`*^9}, {
  3.690047738763581*^9, 3.690047740794758*^9}, {3.690047826581298*^9, 
  3.690047843611105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"degradationParticles", "[", 
   RowBox[{"particleind_", ",", "particlelist_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"randProb", ",", "successpos", ",", 
       RowBox[{"ind", " ", "=", " ", "particleind"}], ",", 
       RowBox[{"list", "=", "particlelist"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"randProb", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], ",", 
         RowBox[{"Length", "@", "particlelist"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "we", " ", "generate", " ", "random", " ", "probabilities", " ", 
        "equal", " ", "to", " ", "the", " ", "number", " ", "of", " ", "free",
         " ", "ligands"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"successpos", "=", " ", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Position", "[", 
         RowBox[{"randProb", ",", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", ">", "0.99999"}], "&"}], ")"}]}]}], "]"}]}]}], ";", 
      " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "find", " ", "positions", " ", "of", " ", "successful", " ", "kills"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"successpos", "=", 
       RowBox[{"successpos", "/.", 
        RowBox[{
         RowBox[{"patt", ":", 
          RowBox[{"{", "__Integer", "}"}]}], "\[RuleDelayed]", " ", 
         RowBox[{"Partition", "[", 
          RowBox[{"patt", ",", "1"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ind", ",", "list"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Delete", "[", 
          RowBox[{"#", ",", "successpos"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"ind", ",", "list"}], "}"}]}]}], ";", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "delete", " ", "ligands", " ", "from", " ", "the", " ", "list", " ", 
        "and", " ", "index"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ind", ",", "list"}], "}"}]}]}], "\[IndentingNewLine]", "]"}], 
   "/;", 
   RowBox[{
    RowBox[{"Length", "@", "particleind"}], ">", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.6900449470888233`*^9, 3.6900449571548567`*^9}, {
   3.6900450249753456`*^9, 3.690045052818858*^9}, {3.6900451030530024`*^9, 
   3.690045155433071*^9}, {3.690045204457407*^9, 3.690045297520785*^9}, {
   3.6900456035224466`*^9, 3.690045649587077*^9}, {3.6900457329444246`*^9, 
   3.6900457437597857`*^9}, {3.6900457997003636`*^9, 
   3.6900458631114035`*^9}, {3.6900459703849297`*^9, 3.69004597156876*^9}, {
   3.690046035126689*^9, 3.690046116151082*^9}, {3.690046530243601*^9, 
   3.690046542825119*^9}, {3.6900466798042245`*^9, 3.690046684549568*^9}, {
   3.6900475218752413`*^9, 3.690047534187628*^9}, {3.690048081462304*^9, 
   3.690048092158291*^9}, {3.6900483231852946`*^9, 3.6900483540073605`*^9}, {
   3.690048502796938*^9, 3.6900485511990037`*^9}, {3.6900485812987747`*^9, 
   3.6900485816301575`*^9}, {3.69004861810083*^9, 3.690048667460722*^9}, {
   3.690049536931614*^9, 3.6900495551868773`*^9}, {3.6900497675575933`*^9, 
   3.6900498035312386`*^9}, {3.6900499382126584`*^9, 
   3.6900499493933992`*^9}, {3.690050007713338*^9, 3.6900500079288836`*^9}, 
   3.690050059039672*^9, {3.690050360748063*^9, 3.69005036383171*^9}, {
   3.6901460295151806`*^9, 3.6901460338758965`*^9}, {3.690149240349391*^9, 
   3.6901492525820847`*^9}, {3.6901496171638546`*^9, 
   3.6901496226482983`*^9}, {3.6901953114862986`*^9, 3.690195316469065*^9}, {
   3.6901962816673226`*^9, 3.6901962998762813`*^9}, {3.6902149106987824`*^9, 
   3.690214923096978*^9}, {3.6902151277795177`*^9, 3.690215178000559*^9}, {
   3.6902152700800424`*^9, 3.690215312762439*^9}, {3.6902153568992243`*^9, 
   3.69021536798075*^9}, {3.690215449768976*^9, 3.690215488238327*^9}, 
   3.690215710464635*^9, {3.6902159292027454`*^9, 3.690215948040647*^9}, {
   3.690216223143366*^9, 3.690216228942661*^9}, {3.69021642296323*^9, 
   3.6902164278496733`*^9}, {3.690216468118657*^9, 3.6902164919457874`*^9}, {
   3.690216532936282*^9, 3.69021653423567*^9}, {3.6902165782648835`*^9, 
   3.6902165979618664`*^9}, {3.690216705794669*^9, 3.690216717196557*^9}, {
   3.6902169443704753`*^9, 3.6902170198779016`*^9}, {3.690217159952568*^9, 
   3.690217214592918*^9}, {3.6902176822689304`*^9, 3.690217686188224*^9}, {
   3.69021812585135*^9, 3.69021812656686*^9}, 3.6902227262066574`*^9, {
   3.6902231168088613`*^9, 3.690223167710063*^9}, {3.6902237118798676`*^9, 
   3.690223712226098*^9}, {3.690223756070421*^9, 3.6902237587543154`*^9}, {
   3.6902240129301195`*^9, 3.6902240146984515`*^9}, {3.6902250908705215`*^9, 
   3.6902251071867037`*^9}, {3.6902251446874075`*^9, 3.690225146686695*^9}, {
   3.6902251886888237`*^9, 3.6902252193376365`*^9}, {3.690225554050153*^9, 
   3.6902255668336287`*^9}, {3.690225861448597*^9, 3.690225862532654*^9}, 
   3.690226902779228*^9, {3.6902277526894956`*^9, 3.690227764259327*^9}, {
   3.6902278057222433`*^9, 3.69022780855177*^9}, {3.6902282112830935`*^9, 
   3.690228212783222*^9}, {3.690228251664837*^9, 3.6902282623324604`*^9}, {
   3.690228876685186*^9, 3.690228877984799*^9}, {3.690229389584261*^9, 
   3.6902294564472103`*^9}, {3.690271340527274*^9, 3.6902713426959*^9}, {
   3.690271537812624*^9, 3.690271538128024*^9}, {3.69027291436675*^9, 
   3.6902729271484604`*^9}, {3.6902735419497223`*^9, 3.690273542396567*^9}, {
   3.6902735968471336`*^9, 3.6902735969253807`*^9}, {3.6902737070984135`*^9, 
   3.690273709197424*^9}, {3.6902739120640697`*^9, 3.6902739199238787`*^9}, {
   3.6902746014334106`*^9, 3.690274605747894*^9}, {3.69027493108146*^9, 
   3.690274931550193*^9}, {3.690274997496996*^9, 3.6902750164061885`*^9}, {
   3.6902757282731705`*^9, 3.6902757285886602`*^9}, {3.6902764848251534`*^9, 
   3.690276485325059*^9}, {3.690294261595149*^9, 3.6902942633793516`*^9}, 
   3.690296000339526*^9, 3.6902994517282968`*^9, 3.6903013472308207`*^9, {
   3.690307284552578*^9, 3.6903072871516066`*^9}, {3.6903135036165724`*^9, 
   3.690313504953499*^9}, 3.6903766303457413`*^9, {3.690376903442259*^9, 
   3.6903769041758556`*^9}, 3.690379651340892*^9, 3.690379819467617*^9, {
   3.6903968598552227`*^9, 3.6903968650944424`*^9}, 3.69045242423602*^9, {
   3.690460975422191*^9, 3.6904609983193197`*^9}, 3.6904783046385365`*^9, {
   3.6904794601863804`*^9, 3.6904794630162373`*^9}, {3.6904796599020233`*^9, 
   3.690479664203534*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["main function", "Subsection",
 CellChangeTimes->{{3.690450083837986*^9, 3.6904501016968875`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BrownianSimulation", "[", 
    RowBox[{
    "nodalp_", ",", "nodalBoundaryIndex_", ",", "leftyp_", ",", 
     "leftyBoundaryIndex_", ",", "membraneind_", ",", "membranep_", ",", 
     "countn_", ",", "countl_", ",", "listnp_"}], "]"}], ":=", "  ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nodal", ",", "lefty", ",", "nodalthreadlist", ",", "leftythreadlist", 
       ",", "interactingNodalReceptor", ",", "interactingLeftyReceptor", ",", 
       "\[IndentingNewLine]", " ", "leftyind", ",", "nodalind", ",", 
       "membraneIndex", ",", "membranepoints", ",", "boundnodal", ",", 
       "boundlefty", "\[IndentingNewLine]", ",", 
       RowBox[{"countnod", "=", "countn"}], ",", 
       RowBox[{"countleft", "=", "countl"}], ",", 
       RowBox[{"listprod", "=", "listnp"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nodalind", " ", "=", " ", "nodalBoundaryIndex"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "initial", " ", "boundary", " ", "configuration", " ", "of", " ", 
        "nodal", " ", "in", " ", "the", " ", "system"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"leftyind", " ", "=", " ", "leftyBoundaryIndex"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "initial", " ", "configuration", " ", "of", " ", "lefty", " ", "in", 
        " ", "the", " ", "system"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nodal", "=", " ", "nodalp"}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "save", " ", "initial", " ", "configuration", " ", "of", " ", 
        "nodal"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"lefty", " ", "=", " ", "leftyp"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "brownian"}]}]}], " ", 
        RowBox[{
         RowBox[{
          RowBox[{"step", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nodal", ",", "lefty"}], "}"}], " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "#"}], "\[NotEqual]", " ", "0"}], ",", 
            RowBox[{"BrownianFunc", "[", "#", "]"}], ",", "#"}], "]"}], "&"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"nodal", ",", "lefty"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"brownian", " ", "step", " ", "for", " ", "receptors"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"membranepoints", ",", "membraneIndex"}], "}"}], " ", "=", 
       " ", 
       RowBox[{"BrownianWalkMembrane", "[", 
        RowBox[{"membranep", ",", "membraneind"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "ligand"}]}]}], " ", "spatial", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"checks", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nodalthreadlist", ",", "leftythreadlist"}], "}"}], "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{"ligandCheck", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"nodal", ",", "lefty"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"nodalind", ",", "leftyind"}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nodalind", "=", 
       RowBox[{"Association", "@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
          "nodalthreadlist"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"leftyind", " ", "=", " ", 
       RowBox[{"Association", "@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
          "leftythreadlist"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", " ", "check"}]}]}], " ", "for", " ", "possible", " ",
          "ligand"}], "-", 
        RowBox[{"receptor", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"interactions", " ", "--"}], "--"}], "--"}]}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"interactingNodalReceptor", ",", "interactingLeftyReceptor"}],
         "}"}], "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nearestFunction", "[", 
             RowBox[{"#", ",", "membraneIndex", ",", "membranepoints"}], 
             "]"}], "/.", 
            RowBox[{
             RowBox[{"nearestFunction", "[", "__", "]"}], "\[RuleDelayed]", 
             RowBox[{"{", "}"}]}]}], ")"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"nodalthreadlist", ",", "leftythreadlist"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "biasing", " ", "a", " ", "common", " ", "receptor", " ", 
        "interacting", " ", "with", " ", "nodal", " ", "and", " ", "lefty", 
        " ", "at", " ", "the", " ", "same", " ", "time"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"interactingNodalReceptor", ",", "interactingLeftyReceptor"}],
         "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"biasSharedReceptors", "[", 
          RowBox[{
          "interactingNodalReceptor", ",", "interactingLeftyReceptor"}], 
          "]"}], ")"}], "/.", 
        RowBox[{
         RowBox[{"biasSharedReceptors", "[", "pattern__", "]"}], 
         "\[RuleDelayed]", " ", 
         RowBox[{"{", "pattern", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "binding"}]}]}], " ", 
        RowBox[{
         RowBox[{
          RowBox[{"mechanics", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nodalthreadlist", ",", "nodalind", ",", "membraneIndex"}], 
        "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"interAct", "[", "##", "]"}], "&"}], "@@", 
          RowBox[{"{", 
           RowBox[{
           "nodalthreadlist", ",", "nodalind", ",", "membraneIndex", ",", 
            "interactingNodalReceptor", ",", "\"\<nodal\>\""}], "}"}]}], 
         ")"}], "/.", 
        RowBox[{
         RowBox[{"interAct", "[", 
          RowBox[{"patt__", ",", "y_", ",", "z_"}], "]"}], "\[RuleDelayed]", 
         " ", 
         RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"leftythreadlist", ",", "leftyind", ",", "membraneIndex"}], 
        "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"interAct", "[", "##", "]"}], "&"}], "@@", 
          RowBox[{"{", 
           RowBox[{
           "leftythreadlist", ",", "leftyind", ",", "membraneIndex", ",", 
            "interactingLeftyReceptor", ",", "\"\<lefty\>\""}], "}"}]}], 
         ")"}], "/.", 
        RowBox[{
         RowBox[{"interAct", "[", 
          RowBox[{"patt__", ",", "y_", ",", "z_"}], "]"}], "\[RuleDelayed]", 
         " ", 
         RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"degradation", " ", "--"}], "--"}], "--"}]}]}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nodalind", ",", "nodalthreadlist"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"degradationParticles", "[", 
          RowBox[{"nodalind", ",", "nodalthreadlist"}], "]"}], ")"}], "/.", 
        RowBox[{
         RowBox[{"degradationParticles", "[", "x__", "]"}], "\[RuleDelayed]", 
         " ", 
         RowBox[{"{", "x", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"leftyind", ",", "leftythreadlist"}], "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"degradationParticles", "[", 
          RowBox[{"leftyind", ",", "leftythreadlist"}], "]"}], ")"}], "/.", 
        RowBox[{
         RowBox[{"degradationParticles", "[", "x__", "]"}], "\[RuleDelayed]", 
         " ", 
         RowBox[{"{", "x", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "production"}]}]}], " ", "of", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"particles", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "nodalthreadlist", ",", "nodalind", ",", "leftythreadlist", ",", 
         "leftyind", ",", "countnod", ",", "countleft", ",", "listprod"}], 
        "}"}], " ", "=", " ", 
       RowBox[{"produceParticles", "[", 
        RowBox[{
        "nodalthreadlist", ",", "leftythreadlist", ",", "nodalind", ",", 
         "leftyind", ",", "membraneIndex", ",", "countnod", ",", "countleft", 
         ",", "listprod"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", " ", "unbinding"}]}]}], " ", 
        RowBox[{
         RowBox[{
          RowBox[{"mechanics", " ", "--"}], "--"}], "--"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"membraneIndex", ",", "nodalthreadlist", ",", "nodalind"}], 
        "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"unbindingMechanics", "[", 
          RowBox[{
          "membraneIndex", ",", "nodalthreadlist", ",", "nodalind", ",", 
           "\"\<nodal\>\""}], "]"}], ")"}], "/.", 
        RowBox[{
         RowBox[{"unbindingMechanics", "[", 
          RowBox[{"patt__", ",", "y_"}], "]"}], "\[RuleDelayed]", " ", 
         RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"membraneIndex", ",", "leftythreadlist", ",", "leftyind"}], 
        "}"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"unbindingMechanics", "[", 
          RowBox[{
          "membraneIndex", ",", "leftythreadlist", ",", "leftyind", ",", 
           "\"\<lefty\>\""}], "]"}], ")"}], "/.", 
        RowBox[{
         RowBox[{"unbindingMechanics", "[", 
          RowBox[{"patt__", ",", "y_"}], "]"}], "\[RuleDelayed]", " ", 
         RowBox[{"{", "patt", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"export", " ", "the", " ", "results", " ", "out"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "nodalthreadlist", ",", "nodalind", ",", "leftythreadlist", ",", 
        "leftyind", ",", "membraneIndex", ",", "membranepoints", ",", 
        "countnod", ",", "countleft", ",", "listprod"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.689189553322317*^9, 3.6891896030422726`*^9}, {
   3.6891896905593023`*^9, 3.689189733756233*^9}, {3.689189861344781*^9, 
   3.6891898625221167`*^9}, {3.68919005930365*^9, 3.6891901996927366`*^9}, 
   3.6891902639436316`*^9, {3.6891902947693467`*^9, 3.689190368898324*^9}, {
   3.6891904305526075`*^9, 3.6891904504179306`*^9}, {3.689190537729231*^9, 
   3.689190578206319*^9}, {3.6891906150895777`*^9, 3.689190735409792*^9}, {
   3.6891907656759653`*^9, 3.6891907693574123`*^9}, {3.6891912070047755`*^9, 
   3.6891912251554146`*^9}, {3.6891915522502127`*^9, 
   3.6891915618508186`*^9}, {3.6891917004301634`*^9, 
   3.6891917346655464`*^9}, {3.68919232547517*^9, 3.6891923306272583`*^9}, {
   3.689192378624958*^9, 3.6891924154597435`*^9}, {3.6891924995233355`*^9, 
   3.6891926162319818`*^9}, {3.6891927585710993`*^9, 
   3.6891927736832995`*^9}, {3.689192839781262*^9, 3.6891928796115155`*^9}, {
   3.6891929726493626`*^9, 3.6891929731180162`*^9}, {3.689193066263524*^9, 
   3.6891930986849346`*^9}, {3.6891932282914743`*^9, 
   3.6891932431045356`*^9}, {3.689193902575698*^9, 3.6891939223318872`*^9}, {
   3.6891941697523007`*^9, 3.689194172267893*^9}, {3.6891942150747423`*^9, 
   3.68919422697628*^9}, {3.6891943507438517`*^9, 3.6891944502896633`*^9}, {
   3.6891945822815986`*^9, 3.6891946500537987`*^9}, {3.6891947612493615`*^9, 
   3.689194768596459*^9}, {3.6891947991887527`*^9, 3.6891948162133102`*^9}, {
   3.6891949684569073`*^9, 3.6891949775530376`*^9}, 3.689195044440108*^9, {
   3.6891951404147367`*^9, 3.6891951448465185`*^9}, {3.689195257986725*^9, 
   3.6891952793804626`*^9}, {3.6891954792636423`*^9, 
   3.6891954832148123`*^9}, {3.6891955371109495`*^9, 
   3.6891955803221445`*^9}, {3.68919573546064*^9, 3.6891957406987047`*^9}, {
   3.689195791944438*^9, 3.6891957980141325`*^9}, {3.68919585681453*^9, 
   3.6891959716339307`*^9}, {3.689196018197197*^9, 3.689196018215408*^9}, {
   3.6891960772766523`*^9, 3.6891960825925636`*^9}, {3.6891962375972986`*^9, 
   3.6891962876104*^9}, {3.6891963353765364`*^9, 3.689196447653885*^9}, {
   3.689196623888487*^9, 3.689196641991235*^9}, {3.68919669007388*^9, 
   3.6891967243497887`*^9}, {3.6891968297584085`*^9, 3.689196952682778*^9}, {
   3.689197677556773*^9, 3.6891978477692537`*^9}, {3.6892431493593645`*^9, 
   3.689243159086622*^9}, {3.6892442566466603`*^9, 3.6892442860275345`*^9}, {
   3.689244382780513*^9, 3.6892443850660143`*^9}, {3.6892444191991067`*^9, 
   3.6892444292090063`*^9}, {3.6892444690149007`*^9, 3.689244496651653*^9}, {
   3.6892451958889923`*^9, 3.689245197293831*^9}, {3.6892453725411463`*^9, 
   3.689245382639005*^9}, {3.689245423449123*^9, 3.6892454248407726`*^9}, 
   3.6892454691707516`*^9, {3.6892493426239443`*^9, 3.68924935963069*^9}, {
   3.6892494953469744`*^9, 3.6892494976797748`*^9}, {3.6892496833257217`*^9, 
   3.6892496857612953`*^9}, {3.6892523681266665`*^9, 
   3.6892523709098697`*^9}, {3.6892529574600344`*^9, 
   3.6892529577224693`*^9}, {3.689253239884354*^9, 3.689253247997458*^9}, {
   3.689253491492898*^9, 3.6892535598765965`*^9}, {3.6892536226973324`*^9, 
   3.689253631634237*^9}, {3.689253669442298*^9, 3.689253786332945*^9}, {
   3.6892538190403786`*^9, 3.689253876848185*^9}, {3.6892540622206917`*^9, 
   3.689254062436185*^9}, {3.689254134861133*^9, 3.689254163298971*^9}, 
   3.689254247972012*^9, 3.6892550188889675`*^9, {3.689255370183431*^9, 
   3.689255390685669*^9}, {3.689255797655501*^9, 3.689255798955039*^9}, {
   3.689256056704524*^9, 3.689256099297729*^9}, {3.6892565376328554`*^9, 
   3.6892565475695596`*^9}, 3.6892566219528203`*^9, {3.6892566594062214`*^9, 
   3.689256694217953*^9}, {3.6892567768666067`*^9, 3.689256783234148*^9}, 
   3.689257047055941*^9, 3.689257199845006*^9, {3.6892583723343697`*^9, 
   3.689258399281249*^9}, {3.6892584950385895`*^9, 3.689258495222681*^9}, {
   3.6892615956045985`*^9, 3.689261604354641*^9}, {3.6892617006516466`*^9, 
   3.689261714785232*^9}, {3.689264763596506*^9, 3.6892647722468147`*^9}, {
   3.6892662295795994`*^9, 3.6892662374119*^9}, {3.6892664146895847`*^9, 
   3.689266468799721*^9}, {3.689266524007624*^9, 3.689266533570314*^9}, 
   3.6892674312189713`*^9, {3.6892680777066016`*^9, 3.6892680962226753`*^9}, {
   3.689268157402384*^9, 3.6892681649665804`*^9}, {3.6892727225678105`*^9, 
   3.6892727281307144`*^9}, {3.6892740054100585`*^9, 
   3.6892740062780495`*^9}, {3.6892751721399937`*^9, 3.689275185757419*^9}, 
   3.6892754428683977`*^9, {3.6892755417829523`*^9, 3.6892755426672783`*^9}, {
   3.6892756808481646`*^9, 3.689275689208373*^9}, {3.6892757739875603`*^9, 
   3.689275793966175*^9}, 3.689276963926191*^9, {3.6892779379993906`*^9, 
   3.6892779396454563`*^9}, {3.6892796477745504`*^9, 3.689279662774971*^9}, {
   3.6892799016892786`*^9, 3.6892799260075226`*^9}, {3.6892800046461077`*^9, 
   3.6892800115490437`*^9}, {3.689320045126953*^9, 3.689320051425362*^9}, {
   3.6893223485835342`*^9, 3.689322361149472*^9}, {3.6893388115031233`*^9, 
   3.689338812424404*^9}, {3.6893388995858727`*^9, 3.689338902617998*^9}, {
   3.6893517379480867`*^9, 3.689351769763858*^9}, {3.689355034534602*^9, 
   3.689355034981649*^9}, {3.689355298385794*^9, 3.689355300201506*^9}, {
   3.6893555438869114`*^9, 3.689355583250563*^9}, {3.689355648713492*^9, 
   3.6893556511662474`*^9}, {3.689355735248116*^9, 3.689355759131769*^9}, {
   3.6893560457432566`*^9, 3.6893560504423475`*^9}, {3.6893561020201607`*^9, 
   3.6893561153339233`*^9}, 3.6893564760696516`*^9, {3.6893565756499977`*^9, 
   3.6893566004333086`*^9}, {3.689356647483261*^9, 3.68935665029947*^9}, 
   3.6893579813739443`*^9, {3.6893634910461264`*^9, 3.6893634983671656`*^9}, {
   3.6893642547836423`*^9, 3.689364257620534*^9}, {3.6893658433704057`*^9, 
   3.6893658673385544`*^9}, {3.689366278212979*^9, 3.6893662971834373`*^9}, {
   3.6893671566303177`*^9, 3.6893671961119595`*^9}, {3.689367257568421*^9, 
   3.6893672842217746`*^9}, {3.689369666826254*^9, 3.6893696677790303`*^9}, {
   3.6893706443971853`*^9, 3.6893706855737906`*^9}, {3.689370815358343*^9, 
   3.6893708156428366`*^9}, {3.6893709572221055`*^9, 
   3.6893709597049074`*^9}, {3.6893710324669576`*^9, 
   3.6893710653882704`*^9}, {3.689371138010537*^9, 3.68937114107773*^9}, {
   3.689371610228939*^9, 3.6893716131591454`*^9}, {3.6893722178634996`*^9, 
   3.6893722234301453`*^9}, {3.689372322431078*^9, 3.6893723521625395`*^9}, {
   3.6893723929323387`*^9, 3.6893724081657953`*^9}, {3.689372566213525*^9, 
   3.689372570450452*^9}, {3.689372655972623*^9, 3.689372681468121*^9}, {
   3.689373151032115*^9, 3.689373161516608*^9}, {3.6893732436650915`*^9, 
   3.6893732679119153`*^9}, {3.689374526786018*^9, 3.689374537199462*^9}, {
   3.689375044341628*^9, 3.6893750559913864`*^9}, {3.6893752046461496`*^9, 
   3.6893752068926783`*^9}, {3.6893754797350836`*^9, 3.689375484249059*^9}, {
   3.689375597675579*^9, 3.689375607072712*^9}, {3.689375661719243*^9, 
   3.689375667356208*^9}, {3.68937581241276*^9, 3.689375814648347*^9}, {
   3.689375845549802*^9, 3.6893758499799423`*^9}, {3.6893759335681343`*^9, 
   3.6893759575201936`*^9}, {3.689375987669422*^9, 3.6893759886539*^9}, {
   3.689376211468449*^9, 3.6893763420906706`*^9}, {3.689376535597937*^9, 
   3.6893765419269247`*^9}, {3.6893767968271546`*^9, 3.689376807390728*^9}, 
   3.6893768615542297`*^9, {3.68937689571032*^9, 3.689376897425918*^9}, {
   3.6893771398611984`*^9, 3.6893771856960917`*^9}, {3.689377436608963*^9, 
   3.689377467171713*^9}, 3.689507827868944*^9, 3.6895078669288654`*^9, {
   3.6895080631471586`*^9, 3.6895080673232093`*^9}, {3.6895082941122723`*^9, 
   3.689508309364927*^9}, {3.689508397367299*^9, 3.6895084016888266`*^9}, {
   3.689508738967713*^9, 3.689508750200607*^9}, {3.6895088365296965`*^9, 
   3.6895088603152914`*^9}, {3.6895089348879642`*^9, 3.689508981481711*^9}, {
   3.689509908881833*^9, 3.689509920631178*^9}, {3.689510178999445*^9, 
   3.6895102000753746`*^9}, {3.6895103636626062`*^9, 3.689510370149437*^9}, {
   3.68951042803164*^9, 3.6895104888345084`*^9}, {3.6895105195345507`*^9, 
   3.6895105413433475`*^9}, {3.689510869647962*^9, 3.689510872282462*^9}, {
   3.6895109352294006`*^9, 3.689510948787093*^9}, {3.689510988406291*^9, 
   3.6895110178351827`*^9}, {3.6895171390050097`*^9, 3.689517160502969*^9}, {
   3.689517273830968*^9, 3.6895172795054927`*^9}, {3.6895177822945375`*^9, 
   3.689517789160743*^9}, {3.6895185953601465`*^9, 3.689518603492388*^9}, {
   3.689519202358618*^9, 3.6895192031074896`*^9}, {3.689519250088673*^9, 
   3.6895192804701753`*^9}, {3.689522253372363*^9, 3.689522255787503*^9}, {
   3.689523346872078*^9, 3.689523358468524*^9}, {3.6895288879622498`*^9, 
   3.6895288969425135`*^9}, {3.6895328179115953`*^9, 
   3.6895328349749694`*^9}, {3.689534464316097*^9, 3.6895344757822328`*^9}, {
   3.689535078959297*^9, 3.68953510604031*^9}, {3.6895354533278093`*^9, 
   3.6895354586233516`*^9}, {3.6895362357631645`*^9, 3.689536264040989*^9}, {
   3.689536295663991*^9, 3.689536306397307*^9}, {3.689536362761096*^9, 
   3.6895363659770856`*^9}, {3.6895369600936794`*^9, 
   3.6895369792624564`*^9}, {3.6895388243584337`*^9, 3.689538897481263*^9}, {
   3.689539141052029*^9, 3.6895391881657104`*^9}, {3.689539537784683*^9, 
   3.689539538484313*^9}, {3.689539907113896*^9, 3.689539919413768*^9}, 
   3.6895401494081445`*^9, {3.6895405864326763`*^9, 3.689540590469798*^9}, {
   3.689540902770419*^9, 3.689540908002267*^9}, {3.6895417634779425`*^9, 
   3.689541765994425*^9}, {3.6895432342270274`*^9, 3.689543242791399*^9}, {
   3.6895438114547815`*^9, 3.689543814253885*^9}, 3.6895455098169813`*^9, {
   3.6895522580879526`*^9, 3.6895522635648746`*^9}, {3.6895537309344063`*^9, 
   3.689553737486908*^9}, {3.689553798064795*^9, 3.689553800079394*^9}, {
   3.6895538649440804`*^9, 3.689553873874306*^9}, {3.689553974866712*^9, 
   3.689553994899995*^9}, 3.689554497424334*^9, {3.689554672015087*^9, 
   3.68955467570345*^9}, {3.689557494607996*^9, 3.6895575356100907`*^9}, {
   3.6895577810310173`*^9, 3.6895577979789376`*^9}, {3.689557885300838*^9, 
   3.689557920118945*^9}, {3.6895580060314426`*^9, 3.689558048909977*^9}, 
   3.6895585387150593`*^9, {3.6896010883480806`*^9, 3.689601101020183*^9}, {
   3.689601209470745*^9, 3.6896012180749626`*^9}, {3.689603054246175*^9, 
   3.689603054900036*^9}, {3.689603105185291*^9, 3.6896031103165073`*^9}, {
   3.6896044301329575`*^9, 3.689604443099267*^9}, {3.689609069062239*^9, 
   3.6896090909623365`*^9}, {3.6896092135120726`*^9, 
   3.6896092680003867`*^9}, {3.6896095490827856`*^9, 3.689609551865641*^9}, 
   3.6896103390757613`*^9, {3.6896103791431284`*^9, 3.689610421904995*^9}, {
   3.68961060659813*^9, 3.689610639558853*^9}, {3.6896113713265266`*^9, 
   3.6896113802382717`*^9}, {3.689611429184224*^9, 3.6896114332837243`*^9}, {
   3.689611644201344*^9, 3.689611704033939*^9}, {3.68961235843209*^9, 
   3.6896123668632855`*^9}, {3.689612397944093*^9, 3.689612436257517*^9}, 
   3.68961258379723*^9, {3.689616778336525*^9, 3.6896168133190517`*^9}, {
   3.689616894065091*^9, 3.689616904082125*^9}, {3.6896169354767685`*^9, 
   3.689616959224801*^9}, {3.6896196304861803`*^9, 3.689619637584601*^9}, {
   3.689619862400505*^9, 3.6896198695361347`*^9}, {3.6896202501054*^9, 
   3.6896202608239374`*^9}, {3.6896205647664747`*^9, 
   3.6896205700115213`*^9}, {3.6896714709872093`*^9, 3.6896714755551*^9}, 
   3.6896726130034657`*^9, {3.6896826528421855`*^9, 3.689682731356278*^9}, {
   3.689682784866883*^9, 3.6896827859660463`*^9}, {3.6896829154925203`*^9, 
   3.689683027188758*^9}, {3.689683092973098*^9, 3.6896831226581106`*^9}, {
   3.6896831580917234`*^9, 3.6896831602391653`*^9}, {3.689683195221408*^9, 
   3.689683270502206*^9}, {3.6896833072902308`*^9, 3.6896833588311234`*^9}, 
   3.6896833927236004`*^9, {3.689683482988458*^9, 3.689683503524429*^9}, {
   3.6896843903245697`*^9, 3.6896843927256613`*^9}, {3.689684549410878*^9, 
   3.6896846129445887`*^9}, {3.6896855446074176`*^9, 
   3.6896855834254756`*^9}, {3.6897039379087553`*^9, 3.689703939908305*^9}, {
   3.689704075408428*^9, 3.689704099006432*^9}, {3.6897043867661486`*^9, 
   3.6897043949648037`*^9}, 3.6897045650896378`*^9, {3.6897047152501435`*^9, 
   3.689704729814645*^9}, {3.689705096204931*^9, 3.6897051153200808`*^9}, {
   3.689706308625616*^9, 3.689706348079814*^9}, {3.689706384225196*^9, 
   3.6897064993539257`*^9}, {3.689716193774048*^9, 3.689716201649063*^9}, {
   3.689716806703416*^9, 3.6897168184165382`*^9}, {3.6897176157887707`*^9, 
   3.6897176192552433`*^9}, {3.6897203008853245`*^9, 3.689720308122609*^9}, {
   3.6897204693845663`*^9, 3.6897204738361797`*^9}, {3.6897206618080263`*^9, 
   3.6897206631918316`*^9}, 3.6897207638623114`*^9, 3.689720845140772*^9, {
   3.6897217692818437`*^9, 3.689721775545183*^9}, {3.689761628227559*^9, 
   3.689761628895889*^9}, {3.6897626632212257`*^9, 3.6897626653373966`*^9}, {
   3.6897634930435667`*^9, 3.689763499308631*^9}, {3.6897649977776585`*^9, 
   3.6897649983806086`*^9}, {3.6897655432723293`*^9, 3.689765550172758*^9}, {
   3.6897660109670744`*^9, 3.6897661284460573`*^9}, {3.6897662056619606`*^9, 
   3.6897662228771334`*^9}, {3.6897664773145943`*^9, 3.68976648237775*^9}, {
   3.6897667995058856`*^9, 3.689766804551757*^9}, {3.6897668659288006`*^9, 
   3.6897668669813843`*^9}, 3.689766923964041*^9, {3.689767243698321*^9, 
   3.689767291612296*^9}, {3.6897673726423225`*^9, 3.689767410119973*^9}, 
   3.689767529704856*^9, {3.6897675827870274`*^9, 3.689767600489238*^9}, {
   3.6897676653707137`*^9, 3.689767806976432*^9}, {3.689767848960512*^9, 
   3.689767880521279*^9}, {3.6897679249782934`*^9, 3.689767947376836*^9}, 
   3.6897680426221848`*^9, {3.68976813934906*^9, 3.6897681680303016`*^9}, {
   3.6897682156098967`*^9, 3.6897682167943916`*^9}, {3.689954855819199*^9, 
   3.689954963555648*^9}, {3.689955020044911*^9, 3.6899550391403866`*^9}, 
   3.6899551079456253`*^9, {3.689957269516762*^9, 3.6899574196433144`*^9}, {
   3.689957520316411*^9, 3.6899575221525664`*^9}, {3.6900472594100275`*^9, 
   3.690047276419717*^9}, {3.6900481155592823`*^9, 3.6900481242906203`*^9}, {
   3.6900486020167933`*^9, 3.6900486066023645`*^9}, {3.690048683793007*^9, 
   3.690048836004511*^9}, {3.6900488749922237`*^9, 3.690048891435506*^9}, {
   3.6900943080604334`*^9, 3.690094323202094*^9}, {3.690097937688939*^9, 
   3.6900979641718826`*^9}, {3.69009804537319*^9, 3.6900980722370014`*^9}, {
   3.6901036742060833`*^9, 3.690103700783184*^9}, {3.6901037437829847`*^9, 
   3.690103780343644*^9}, {3.6901054680151224`*^9, 3.6901055038216276`*^9}, 
   3.690108771157725*^9, {3.690108823684347*^9, 3.6901088279151993`*^9}, {
   3.690109646973525*^9, 3.690109650340693*^9}, {3.6901105470297136`*^9, 
   3.690110552559378*^9}, {3.6901107559893365`*^9, 3.6901107600035334`*^9}, {
   3.6901109058971643`*^9, 3.690110908813447*^9}, 3.690110947284831*^9, {
   3.6901114507677484`*^9, 3.6901114635630565`*^9}, {3.6901132828165646`*^9, 
   3.690113287745487*^9}, {3.690116550681119*^9, 3.6901165519335437`*^9}, {
   3.690145197616461*^9, 3.6901452111490192`*^9}, {3.6901459723469343`*^9, 
   3.690145983104843*^9}, {3.6901464499359694`*^9, 3.6901464560670414`*^9}, {
   3.6901467475129023`*^9, 3.6901467530422072`*^9}, {3.69014745783397*^9, 
   3.6901474615634565`*^9}, 3.690147741664509*^9, {3.6901478409022694`*^9, 
   3.690147846270894*^9}, {3.6901482879396467`*^9, 3.690148290624079*^9}, {
   3.6901487544472866`*^9, 3.6901487623817687`*^9}, {3.6901964740006704`*^9, 
   3.690196474454548*^9}, {3.690196619805116*^9, 3.6901966251872582`*^9}, {
   3.6901966998194385`*^9, 3.6901967043559384`*^9}, {3.690196753730586*^9, 
   3.6901967571305127`*^9}, {3.690196855565689*^9, 3.6901968576128635`*^9}, 
   3.690196928058716*^9, {3.690196972023137*^9, 3.6901969776677275`*^9}, {
   3.6901970182885356`*^9, 3.69019703085459*^9}, {3.6901971843445835`*^9, 
   3.6901971876438837`*^9}, 3.690197306274518*^9, {3.690212454757462*^9, 
   3.690212462009409*^9}, {3.6902129265306306`*^9, 3.690212929761304*^9}, {
   3.690213386484538*^9, 3.690213390900625*^9}, {3.6902137709653683`*^9, 
   3.69021377386497*^9}, {3.6902138509183645`*^9, 3.690213855586316*^9}, {
   3.690214974149271*^9, 3.6902149766643114`*^9}, {3.6902172462880216`*^9, 
   3.6902173009728594`*^9}, {3.6902195337462626`*^9, 
   3.6902195548546467`*^9}, {3.6902201922858334`*^9, 
   3.6902201967998753`*^9}, {3.690222797198725*^9, 3.6902228024296026`*^9}, {
   3.6902235867450757`*^9, 3.690223596482725*^9}, {3.690223626545953*^9, 
   3.690223639438594*^9}, {3.6902245667327957`*^9, 3.690224574100998*^9}, {
   3.6902249351204233`*^9, 3.690225013692706*^9}, {3.690225268944994*^9, 
   3.6902252739743347`*^9}, {3.6902255956946387`*^9, 
   3.6902256621453943`*^9}, {3.6902264660532427`*^9, 3.690226475666935*^9}, {
   3.6902269508651505`*^9, 3.6902269666100836`*^9}, {3.690227841448991*^9, 
   3.6902278507275376`*^9}, {3.690228317940234*^9, 3.6902283293718348`*^9}, {
   3.690271326266965*^9, 3.6902713306819596`*^9}, {3.690273283941369*^9, 
   3.690273287486109*^9}, {3.690273403830646*^9, 3.6902734070978236`*^9}, {
   3.6902760961282663`*^9, 3.6902760987794123`*^9}, {3.690278631986804*^9, 
   3.6902786444631805`*^9}, {3.690278716804553*^9, 3.690278720219883*^9}, {
   3.6902933478123584`*^9, 3.690293368707837*^9}, {3.6902941202723093`*^9, 
   3.6902941278220253`*^9}, {3.6903072301543612`*^9, 3.690307235736765*^9}, {
   3.690309492990323*^9, 3.690309497788104*^9}, {3.690310643571344*^9, 
   3.690310646771102*^9}, {3.690310725963786*^9, 3.690310728747356*^9}, {
   3.690310810915866*^9, 3.69031086519934*^9}, {3.690311749544197*^9, 
   3.6903117664096384`*^9}, {3.690312007898584*^9, 3.690312014214517*^9}, {
   3.6903575865075355`*^9, 3.6903575987194595`*^9}, {3.690357672475432*^9, 
   3.690357682244855*^9}, {3.690357727524751*^9, 3.690357731554451*^9}, {
   3.6903578445935755`*^9, 3.690357864758543*^9}, {3.690357905049069*^9, 
   3.6903579101470666`*^9}, 3.6903766303457413`*^9, {3.6903771002317934`*^9, 
   3.6903771057599106`*^9}, 3.6903796513559012`*^9, 3.690379819395053*^9, 
   3.69044956311262*^9, {3.690449880892825*^9, 3.690449882061988*^9}, {
   3.6904501167526183`*^9, 3.6904501248376155`*^9}, {3.6904501626376233`*^9, 
   3.690450339567567*^9}, {3.6904506663502865`*^9, 3.690450667183776*^9}, {
   3.690452475916954*^9, 3.690452478679448*^9}, {3.6904525159267807`*^9, 
   3.6904526688678083`*^9}, {3.690452705606676*^9, 3.6904527335330324`*^9}, 
   3.6904529528082743`*^9, {3.69045307953776*^9, 3.690453118074665*^9}, {
   3.6904532912564287`*^9, 3.6904533320746803`*^9}, {3.690453442654402*^9, 
   3.6904534931277275`*^9}, {3.6904535381129704`*^9, 
   3.6904535697213244`*^9}, {3.6904537178859005`*^9, 3.690453729647787*^9}, {
   3.6904538291862154`*^9, 3.690453849217207*^9}, {3.6904539574617677`*^9, 
   3.6904540367791023`*^9}, {3.6904541713323355`*^9, 
   3.6904541752148085`*^9}, {3.690454263754758*^9, 3.69045427327551*^9}, {
   3.6904544207943907`*^9, 3.6904544601230927`*^9}, {3.6904546124768624`*^9, 
   3.690454646028017*^9}, {3.6904568333871145`*^9, 3.6904570424240656`*^9}, 
   3.6904572436366715`*^9, {3.690457294313258*^9, 3.6904572967671013`*^9}, {
   3.6904582666023808`*^9, 3.6904583244353876`*^9}, {3.690458430448061*^9, 
   3.690458480072321*^9}, {3.6904585123180256`*^9, 3.6904585258799133`*^9}, {
   3.6904586977940645`*^9, 3.690458703193592*^9}, {3.6904608848437614`*^9, 
   3.6904609463207493`*^9}, {3.690461152319771*^9, 3.6904611892045403`*^9}, {
   3.690461404356003*^9, 3.6904614120605054`*^9}, {3.6904641726923027`*^9, 
   3.6904641736816874`*^9}, {3.6904777333189588`*^9, 
   3.6904777394015665`*^9}, {3.690478290055303*^9, 3.6904782957701206`*^9}, {
   3.692186897453182*^9, 3.6921869041202307`*^9}, {3.692187965566072*^9, 
   3.6921879708959045`*^9}, {3.69219194443633*^9, 3.692191949319392*^9}, {
   3.692555368248906*^9, 3.692555418940319*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"graphState", "[", 
    RowBox[{
    "membraneind_", ",", "nodalthread_", ",", "leftythread_", ",", 
     "boundnod_", ",", "boundlef_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Gray", ",", "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "0.75"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
         RowBox[{"Darker", "@", "Purple"}], ",", 
         RowBox[{"Point", "@", 
          RowBox[{"membraneind", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "@", "Blue"}], ",", 
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
         RowBox[{"Point", "@", 
          RowBox[{"nodalthread", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
         RowBox[{"Point", "@", 
          RowBox[{"leftythread", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "@", "Green"}], ",", 
         RowBox[{"PointSize", "[", "Large", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
         RowBox[{"Point", "@", "boundnod"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "@", "Red"}], ",", 
         RowBox[{"PointSize", "[", "Large", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
         RowBox[{"Point", "@", "boundlef"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"draws", " ", "the", " ", "system", " ", "state"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.690459432350329*^9, 3.6904594361951942`*^9}, {
   3.6904594774317856`*^9, 3.6904595433354173`*^9}, {3.690459575211753*^9, 
   3.6904596730153465`*^9}, {3.690459708422943*^9, 3.690459735021349*^9}, {
   3.6904615819401283`*^9, 3.6904616392725067`*^9}, 3.690464177413658*^9, {
   3.690465961528474*^9, 3.6904659715775957`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["execute simulation", "Subsection",
 CellChangeTimes->{{3.690450395745336*^9, 3.690450404394805*^9}, {
  3.6904663194219227`*^9, 3.690466322398404*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "sim", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6904663326266403`*^9, 3.6904663360871425`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sim", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"bounds", " ", "=", " ", "0.25"}], ",", 
       RowBox[{"numnodalparticles", "=", " ", "40"}], ",", " ", 
       RowBox[{"numleftyparticles", "=", "30"}], ",", 
       RowBox[{"center", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"cellradius", "  ", "=", "0.75"}], ",", " ", 
       RowBox[{"numreceptors", " ", "=", " ", "100"}], ",", 
       RowBox[{"nSteps", " ", "=", " ", "3000"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "nodallist", ",", " ", "nodalBoundaryindex", ",", " ", "nodalpts", 
         ",", "leftylist", ",", "leftyBoundaryindex", ",", "leftypts", ",", 
         " ", "membranepts", ",", "membraneindex", ",", "countnod", ",", 
         "countleft", ",", 
         RowBox[{"listprod", "=", 
          RowBox[{"{", "}"}]}], ",", "temp", ",", "g", ",", "boundn", ",", 
         "boundp"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "we", " ", "generate", " ", "the", " ", "initial", " ", 
         "configuration", " ", "here"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nodallist", ",", "nodalBoundaryindex", ",", "nodalpts"}], 
          "}"}], " ", "=", " ", "\[IndentingNewLine]", 
         RowBox[{"initialParticleConfig", "[", 
          RowBox[{"\"\<nodal\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "bounds"}], ",", "bounds"}], "}"}], ",", 
           "numnodalparticles"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"countnod", " ", "=", " ", 
         RowBox[{"Length", "@", "nodalBoundaryindex"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"leftylist", ",", "leftyBoundaryindex", ",", "leftypts"}], 
          "}"}], "=", 
         RowBox[{"initialParticleConfig", "[", 
          RowBox[{"\"\<lefty\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "bounds"}], ",", "bounds"}], "}"}], ",", 
           "numleftyparticles"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"countleft", " ", "=", " ", 
         RowBox[{"Length", "@", "leftyBoundaryindex"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"membranepts", ",", "membraneindex"}], "}"}], "=", 
         RowBox[{"membraneReceptorConfig", "[", 
          RowBox[{"center", ",", "cellradius", ",", "numreceptors"}], "]"}]}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "printing", " ", "the", " ", "intial", " ", "configuration"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Print", "@", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Gray", ",", "Dashed", ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Black", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}], ",", 
               RowBox[{"Circle", "[", 
                RowBox[{"center", ",", "cellradius"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
               RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
               RowBox[{"Darker", "@", "Purple"}], ",", 
               RowBox[{"Point", "@", "membranepts"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Darker", "@", "Blue"}], ",", 
               RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
               RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
               RowBox[{"Point", "@", "nodalpts"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
               RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
               RowBox[{"Point", "@", "leftypts"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Monitor", "[", 
          RowBox[{
           RowBox[{"Reap", "[", 
            RowBox[{"Nest", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"temp", "=", 
                  RowBox[{"BrownianSimulation", "@@", "#"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"boundn", " ", "=", " ", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"patt", ":", 
                    RowBox[{"PatternSequence", "[", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", "_", ",", "_", ",", 
                    "\"\<nodal\>\""}], "}"}]}], "]"}]}], "\[RuleDelayed]", 
                    " ", 
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", "2"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"boundp", " ", "=", " ", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"patt", ":", 
                    RowBox[{"PatternSequence", "[", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_"}], "}"}], ",", "_", ",", "_", ",", 
                    "\"\<lefty\>\""}], "}"}]}], "]"}]}], "\[RuleDelayed]", 
                    " ", 
                    RowBox[{"patt", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", "2"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"Sow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "boundn"}], "+", 
                    RowBox[{"Length", "@", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "boundp"}], "+", 
                    RowBox[{"Length", "@", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}]}], "}"}], "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"g", " ", "=", " ", 
                  RowBox[{"graphState", "[", 
                   RowBox[{
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], ",", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "boundn", ",", 
                    "boundp"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"Association", "@", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<nodal\>\"", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", 
                  RowBox[{"Association", "@", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<lefty\>\"", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "&"}], ",", 
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", "temp"}], ")"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "nodallist", ",", "nodalBoundaryindex", ",", "leftylist", ",", 
                "leftyBoundaryindex", ",", "membraneindex", ",", 
                "membranepts", ",", "countnod", ",", "countleft", ",", 
                "listprod"}], "}"}], ",", "nSteps"}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", "g"}], "]"}], "//", "Quiet"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6904469914807224`*^9, 3.690447069163951*^9}, {
   3.6904472802676864`*^9, 3.690447435997625*^9}, {3.690447477632489*^9, 
   3.690447569761425*^9}, {3.690447614969178*^9, 3.690447670121508*^9}, {
   3.690447708764806*^9, 3.690447818140444*^9}, {3.690447851378296*^9, 
   3.6904478812920833`*^9}, {3.6904479407890882`*^9, 
   3.6904479417579756`*^9}, {3.6904479895530767`*^9, 
   3.6904480194300737`*^9}, {3.6904480704257417`*^9, 
   3.6904480933439455`*^9}, {3.690448133631394*^9, 3.690448224060196*^9}, {
   3.690448278287838*^9, 3.6904482877216325`*^9}, {3.690448320115273*^9, 
   3.6904483636719*^9}, {3.690448435161508*^9, 3.690448576669751*^9}, {
   3.6904486669924593`*^9, 3.690448667207981*^9}, {3.6904493457290688`*^9, 
   3.690449407079687*^9}, {3.6904495669654517`*^9, 3.6904495673965282`*^9}, 
   3.6904497140370617`*^9, {3.690449812186278*^9, 3.6904498245679307`*^9}, {
   3.690450439372733*^9, 3.69045053881914*^9}, {3.6904505843398314`*^9, 
   3.69045059232139*^9}, 3.6904506593304386`*^9, 3.6904507190726814`*^9, {
   3.690450852766365*^9, 3.69045085591259*^9}, {3.690450902788558*^9, 
   3.690450919122534*^9}, {3.6904514565096197`*^9, 3.690451462223236*^9}, {
   3.69045229297394*^9, 3.6904523110000577`*^9}, {3.690452849969643*^9, 
   3.690452863750635*^9}, 3.6904529419416294`*^9, {3.6904531892719398`*^9, 
   3.6904532146474075`*^9}, 3.690453399446372*^9, {3.690453547628756*^9, 
   3.6904535477443247`*^9}, {3.69045391511689*^9, 3.690453938429129*^9}, {
   3.690453973310991*^9, 3.690453973410987*^9}, {3.690454050523678*^9, 
   3.690454084098651*^9}, {3.690454234445261*^9, 3.690454236897995*^9}, 
   3.690454637254772*^9, {3.69045473016674*^9, 3.690454736083583*^9}, {
   3.6904570185412445`*^9, 3.6904570186600637`*^9}, {3.6904570937620425`*^9, 
   3.690457113853207*^9}, {3.690457148250682*^9, 3.690457192854615*^9}, {
   3.6904575702813654`*^9, 3.690457570539809*^9}, {3.690457701719046*^9, 
   3.6904577052586517`*^9}, {3.690458134786507*^9, 3.69045813961683*^9}, 
   3.690458255437655*^9, {3.6904585443174334`*^9, 3.6904585477349305`*^9}, {
   3.6904585853780107`*^9, 3.6904585899620085`*^9}, {3.6904587104940166`*^9, 
   3.6904587152141137`*^9}, {3.690459224622531*^9, 3.6904593558602886`*^9}, {
   3.690459425249346*^9, 3.6904594264288926`*^9}, {3.6904597580454574`*^9, 
   3.690459768479945*^9}, {3.690459835492966*^9, 3.690459863282769*^9}, {
   3.690460031989209*^9, 3.690460078616644*^9}, {3.6904602132112355`*^9, 
   3.6904603563870945`*^9}, {3.690460391322644*^9, 3.69046041219827*^9}, {
   3.6904605115311403`*^9, 3.6904605116000614`*^9}, {3.6904613548628025`*^9, 
   3.690461355512269*^9}, {3.690461485709165*^9, 3.690461558316087*^9}, 
   3.690461662307683*^9, {3.6904617017381372`*^9, 3.6904617198249483`*^9}, {
   3.6904617673895473`*^9, 3.6904618786409736`*^9}, {3.6904619220716457`*^9, 
   3.6904620573913593`*^9}, {3.6904625894658904`*^9, 
   3.6904626173896184`*^9}, {3.6904627509157333`*^9, 3.690462786838644*^9}, {
   3.690462837149786*^9, 3.690462847914173*^9}, {3.690462878305585*^9, 
   3.6904629730685806`*^9}, 3.6904633802731915`*^9, {3.6904636631944356`*^9, 
   3.69046366334783*^9}, 3.6904731550913987`*^9, {3.6921873269181547`*^9, 
   3.692187331854455*^9}, {3.6921879813783855`*^9, 3.692187984332142*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.5], Dashing[{Small, Small}], 
    LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]}, 
   {GrayLevel[0], Opacity[0.2], CircleBox[{0, 0}, 0.75]}, 
   {RGBColor[0.33333333333333337`, 0, 0.33333333333333337`], PointSize[
    Medium], Opacity[0.6], PointBox[CompressedData["
1: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
x0kIWPazbYkNBKNzVMyrtZ7+BlSGZJM=
     "]]}, 
   {RGBColor[0, 0, 
     NCache[
      Rational[2, 3], 0.6666666666666666]], PointSize[Medium], Opacity[0.6], 
    PointBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAkMItw108xr+IFp3hIeO+P0AOU7DS
y4c/MPor0PkGoz/4ZSlxh2fOP4AzP5PPTKo/8K/0CMc1rL8cEy/en2TEv6jG
AEAGIrc/wDmtTRULxr+QLUtl37SoP2B08keMY7c/AKdBbfszxT/QZYeDsjW+
PzD1mZ9Rmaw/3EeWPt8Nzj+gxd5e5V7GP3g2vy9pr8E/cLv+5M7MvT+wkA5a
M0Orv+Bak8G6IM0/INK96Hi0s78Abh/HvOuoP6hX8Dirib0/wBItRlC2rD+8
npawjCHOP4jdC+1CzcQ/YD20X/ftlb+QbZGbwK6pP2ykzfDWE8C/4Ffz4PGc
sz/I03l6gs+5v1jpeTA92bO/kOvhf2fnpD9YroGsSyO1P3gRE7OCjbI/wNkD
AE+Nyz/Y56QB4EO2P4ChdkIzGnq/ECsxXZOvpD9o79rSx6bFP2gq95RfBbW/
fPPuWoSUxL9MT7Gl0VnIP1QIJpzUdsA/RMoK7uJfxT/sK95HEJfKv2xNfiL9
vMC/CD7iDixJwr8UUFxQHFPFP2Bqb0ms3JC/AG+0VtXvpD9IqigiRinJPzie
dclKybQ/eGJHZbabvj+ojJtZZHrFv7hPqrU7tbM/0J+uX39Ou7+w8KLdhU+9
P6RV55g9LcK/8HvRHyhwrT+Ynf2398/Nv9YVBYM=
     "]]}, 
   {RGBColor[1, 0, 0], PointSize[Medium], Opacity[0.6], 
    PointBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAoKyfy086ub/I1BLWLhO6vwDRYsX+
0LM/fBSLd9gWzb/gfQ4u4U+yP0jUOR5WA76/tBJsmdP+wj9AqHgJwryNv1hj
7cN36cY/8GH4WB6puT+URFw7SVPDv+j/rhw+LrK/cCyf/N1+ob9ABo9AcVms
vzj8dTKtAcC/IAGybRGMvb9YgYbu2gK6PxhgApOkb7U/9ABrO6tDw79gNTFN
SOKzvwBCQB2ZUq8/VJ5Wg7QVyb9Am6SujEGcP9jVMyO1v7K/wNI4k8Gis78A
wqh0hmjNv7Bn7w5VtME/wPTFr9Z0uz9QBx0XLQyvvyhzmjK2UrA/0Ko5MQBs
sj94MImGlybLv7j+fiZQh7g/zB3mth8qwb9gHTbekimzv0CkGIqYhsq/nO8w
fZIrz79QCNgZwlKmv/ATuOG926k/cDKbQlX3sj8A2FQ1VVxZvwziBSvSuMQ/
AN4q8k8Ehj/cILBcuwfKP5R9AEW/ksu/EPB5d7QMsz/QFzEm3eixP8CE0ScM
tcw/ZAm0c7REwj/YBzTiD7q+P8D3HOiiNp4/EP16kCfwrr9L7tG3
     "]]}},
  ImageSize->Large]], "Print",
 CellChangeTimes->{
  3.6904603699702826`*^9, 3.6904604197490573`*^9, 3.6904605136531*^9, {
   3.690461356425239*^9, 3.6904614133741655`*^9}, 3.690461673158199*^9, 
   3.690461721710598*^9, {3.6904618040742435`*^9, 3.690461879710677*^9}, {
   3.6904619244959016`*^9, 3.690461948185747*^9}, {3.690461980496625*^9, 
   3.6904620591222997`*^9}, {3.6904626009986005`*^9, 3.6904626189225883`*^9}, 
   3.690462788440592*^9, {3.6904628896285124`*^9, 3.690462925251403*^9}, {
   3.690462958059681*^9, 3.6904629744314947`*^9}, 3.690463381961764*^9, 
   3.6904636663445206`*^9, 3.690464183998548*^9, 3.690465018226932*^9, 
   3.6904651525571747`*^9, 3.6904663445007477`*^9, 3.690477753227127*^9, 
   3.690478310776365*^9, 3.6904796891001196`*^9, 3.690481220000557*^9, 
   3.6904815114509373`*^9, 3.690547550837582*^9, 3.6911775820968432`*^9, 
   3.6911778983714323`*^9, 3.6911783104526696`*^9, 3.691226959956464*^9, 
   3.6912274146501265`*^9, 3.691237173069527*^9, 3.691237274001895*^9, 
   3.691238596552845*^9, 3.6920988216233435`*^9, 3.692182239497137*^9, 
   3.692182414191371*^9, 3.6921869145395336`*^9, 3.6921873353726463`*^9, 
   3.6921879993750334`*^9, 3.6921888258369446`*^9, 3.692189353923969*^9, 
   3.692189849859301*^9, 3.6921904223755336`*^9, 3.692190912590472*^9, 
   3.6921919651338234`*^9, 3.6921931858441706`*^9, 3.6921941148632517`*^9, 
   3.692194518786538*^9, 3.6949468299256525`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["basic stats", "Section",
 CellChangeTimes->{{3.690295431244478*^9, 3.690295433606867*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tracknodal", ",", "tracklefty"}], "}"}], "=", 
   RowBox[{"Thread", "@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"sim", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.690470832935104*^9, 3.6904708631048093`*^9}, {
  3.6921851920079403`*^9, 3.6921851935458345`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"membraneindex", "=", 
   RowBox[{"sim", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "5"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.690463474136156*^9, 3.6904635139953527`*^9}, {
  3.6904717164495535`*^9, 3.690471722119789*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"leftylist", "=", 
   RowBox[{"sim", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6904635484146357`*^9, 3.690463569974585*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nodallist", " ", "=", " ", 
   RowBox[{"sim", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6904635969275293`*^9, 3.6904636073685093`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xnodal", " ", "=", " ", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"Differences", "@", "tracknodal"}], ",", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "<", "0"}], "&"}], ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.690300088482366*^9, 3.690300090464577*^9}, 
   3.6903017069492655`*^9, {3.690463194822032*^9, 3.6904631966024914`*^9}, {
   3.6904699412266893`*^9, 3.6904699650321803`*^9}, {3.690470116248065*^9, 
   3.6904701267445154`*^9}, 3.690470653987769*^9, 3.690470720655344*^9, 
   3.692192834660675*^9, {3.6921950382176037`*^9, 3.6921950401023912`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ynodal", " ", "=", " ", 
   RowBox[{"tracknodal", "[", 
    RowBox[{"[", 
     RowBox[{"Flatten", "@", "xnodal"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6902999846100836`*^9, 3.69030010095057*^9}, 
   3.69030171043515*^9, {3.690463198369424*^9, 3.6904632013067303`*^9}, 
   3.690470656108984*^9, 3.692192830912507*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"noddeathevents", " ", "=", " ", 
  RowBox[{"Thread", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Flatten", "@", "xnodal"}], ",", "ynodal"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6903001087256985`*^9, 3.6903001375169983`*^9}, 
   3.6903017132187204`*^9, {3.6904632085070066`*^9, 3.690463210575926*^9}, {
   3.6904640261132364`*^9, 3.690464027943878*^9}, 3.690470724751137*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"2960", ",", "259"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6904707250045705`*^9, 3.6904708918253956`*^9, 
  3.6904780142113533`*^9, 3.690478579985754*^9, 3.690479960787262*^9, 
  3.690481475279687*^9, 3.6904817715527363`*^9, 3.6905478105957108`*^9, 
  3.691178153089797*^9, 3.6912272096831408`*^9, 3.691227671332179*^9, 
  3.6912389465344915`*^9, 3.6920993401179614`*^9, 3.6921828269741755`*^9, 
  3.692187226212834*^9, 3.6921878027479534`*^9, 3.6921884026591253`*^9, 
  3.6921892160674887`*^9, 3.692189734862472*^9, 3.6921902578408575`*^9, 
  3.692190782946612*^9, 3.6921913842815714`*^9, 3.6921923728880405`*^9, 
  3.6921935980821204`*^9, 3.692194442139063*^9, 3.6921949442863674`*^9, 
  3.6921949876726923`*^9, 3.6949472355928907`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"xlefty", " ", "=", " ", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"Differences", "@", "tracklefty"}], ",", 
     RowBox[{"_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", "<", "0"}], "&"}], ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.690300146597608*^9, 3.690300154252393*^9}, 
   3.6903017158019524`*^9, {3.690469007836914*^9, 3.6904690103473535`*^9}, 
   3.6904701194091263`*^9, 3.692192827462537*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ylefty", " ", "=", " ", 
   RowBox[{"tracklefty", "[", 
    RowBox[{"[", 
     RowBox[{"Flatten", "@", "xlefty"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6903001719881005`*^9, 3.6903001777043*^9}, {
   3.690300375247563*^9, 3.690300379273205*^9}, 3.690301718416283*^9, {
   3.690469013582451*^9, 3.690469015463626*^9}, 3.690470660810726*^9, 
   3.6921928250954723`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"leftydeathevents", " ", "=", " ", 
  RowBox[{"Thread", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Flatten", "@", "xlefty"}], ",", "ylefty"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6903001851780376`*^9, 3.690300231905529*^9}, 
   3.690301721131219*^9, {3.690469017700469*^9, 3.6904690195173206`*^9}, 
   3.6904707309283094`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2410", ",", "163"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2577", ",", "180"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.690470731190934*^9, 3.6904709015822496`*^9, 
  3.690478014244878*^9, 3.6904785800169945`*^9, 3.690479960818514*^9, 
  3.690481475301837*^9, 3.690481771585249*^9, 3.690547810614725*^9, 
  3.691178153105423*^9, 3.6912272097143917`*^9, 3.691227671347802*^9, 
  3.6912389465605073`*^9, 3.6920993401543975`*^9, 3.692182827002207*^9, 
  3.6921872262440877`*^9, 3.692187802782959*^9, 3.6921884026966515`*^9, 
  3.69218921610089*^9, 3.692189734896495*^9, 3.692190257875882*^9, 
  3.692190782977862*^9, 3.6921913843165956`*^9, 3.6921923729205637`*^9, 
  3.692193598100633*^9, 3.692194442157076*^9, 3.69219494429037*^9, 
  3.6949472356079016`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tracklefty", ",", "tracknodal", ",", 
     RowBox[{"leftydeathevents", "/.", 
      RowBox[{
       RowBox[{"{", "}"}], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", "None"}], "}"}]}]}], ",", 
     RowBox[{"noddeathevents", "/.", 
      RowBox[{
       RowBox[{"{", "}"}], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"None", ",", "None"}], "}"}]}]}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "@", "Red"}], ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.4", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "@", "Blue"}], ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.4", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902938540465755`*^9, 3.6902939045986247`*^9}, {
   3.6903002695445843`*^9, 3.6903003389806876`*^9}, {3.690300517134451*^9, 
   3.6903005654356623`*^9}, {3.690300601057293*^9, 3.6903006568653345`*^9}, {
   3.690301205036827*^9, 3.6903012393753366`*^9}, {3.6903017300829043`*^9, 
   3.690301873443448*^9}, {3.6903019248336153`*^9, 3.6903019525333443`*^9}, {
   3.6903019883593025`*^9, 3.690301992405916*^9}, {3.69039730302645*^9, 
   3.690397362660502*^9}, {3.6904632185691357`*^9, 3.690463246244645*^9}, {
   3.690463636846199*^9, 3.6904636431260834`*^9}, {3.6904640025925055`*^9, 
   3.690464031113433*^9}, 3.690464087076053*^9, {3.6904687499304037`*^9, 
   3.6904689208049297`*^9}, {3.690468972216202*^9, 3.6904689788472157`*^9}, {
   3.6904735807699814`*^9, 3.690473585485448*^9}, {3.690478024629223*^9, 
   3.690478024897694*^9}, {3.6904811500652623`*^9, 3.6904811701590624`*^9}, {
   3.69122731156544*^9, 3.6912273117651606`*^9}, {3.691227709450598*^9, 
   3.691227716079857*^9}, {3.6912389585550833`*^9, 3.6912389587235537`*^9}, {
   3.6920993576771975`*^9, 3.6920993856656027`*^9}, {3.6921872361937437`*^9, 
   3.6921872364778595`*^9}, {3.692192796359192*^9, 3.69219281893503*^9}, {
   3.6921936779610834`*^9, 3.6921936956125593`*^9}, {3.6921938060168962`*^9, 
   3.6921938166998367`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[1, 0, 0], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
zf/v/wuA5gII
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[0.002777777777777778], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1: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
Dn4RN/+//w+ILE2k
      "]]}, 
    {RGBColor[
      NCache[
       Rational[2, 3], 0.6666666666666666], 0, 0], PointSize[0.03], 
     AbsoluteThickness[1.6], Opacity[0.4], 
     PointBox[{{2410., 163.}, {2577., 180.}}]}, 
    {RGBColor[0, 0, 
      NCache[
       Rational[2, 3], 0.6666666666666666]], PointSize[0.03], 
     AbsoluteThickness[1.6], Opacity[0.4], 
     PointBox[{{2960., 259.}, {2960., 259.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3000.}, {0, 266.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6904785801016707`*^9, 3.6904799609031715`*^9, {3.69048115654792*^9, 
   3.6904811706091595`*^9}, 3.690481475401631*^9, 3.6904817716968303`*^9, 
   3.6905478108660154`*^9, 3.6911781538920774`*^9, 3.6912272104848595`*^9, 
   3.6912273124839177`*^9, 3.691227671432455*^9, 3.691227716393716*^9, {
   3.6912389473366632`*^9, 3.6912389590708704`*^9}, {3.6920993405023456`*^9, 
   3.6920993859504633`*^9}, 3.6921828272767925`*^9, {3.6921872269144974`*^9, 
   3.69218723683147*^9}, 3.6921878028690205`*^9, 3.692188402800225*^9, 
   3.6921892161824255`*^9, 3.6921897349855804`*^9, 3.6921902579684477`*^9, 
   3.692190783099902*^9, 3.69219138440716*^9, 3.69219237300764*^9, {
   3.6921928064175835`*^9, 3.692192819250922*^9}, 3.6921935986638975`*^9, {
   3.6921936850805235`*^9, 3.6921936980434294`*^9}, {3.692193809816901*^9, 
   3.692193817134698*^9}, 3.6921944422230186`*^9, 3.6921949443906317`*^9, 
   3.694947235867057*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(indices of dead particles)", "Section",
 CellChangeTimes->{{3.6921929014881496`*^9, 3.692192908622989*^9}, {
  3.692193018494123*^9, 3.692193024007913*^9}, {3.6921938522775035`*^9, 
  3.6921938601583967`*^9}, {3.692193906001422*^9, 3.6921939420018682`*^9}, {
  3.6921944816019955`*^9, 3.692194500900445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complement", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"sim", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "7"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"nodallist", "//", "Keys"}], ",", 
     RowBox[{"Cases", "[", 
      RowBox[{"membraneindex", ",", 
       RowBox[{
        RowBox[{"PatternSequence", "[", 
         RowBox[{"_", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"_", ",", "_", ",", "y_", ",", "\"\<nodal\>\""}], "}"}]}], 
         "]"}], "\[RuleDelayed]", " ", "y"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.692192923865906*^9, 3.6921929430619535`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", "148", "}"}]], "Output",
 CellChangeTimes->{{3.692192921566684*^9, 3.6921929432462826`*^9}, 
   3.6921935987798347`*^9, 3.692194442355809*^9, 3.6921949445065217`*^9, 
   3.694947235867057*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complement", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"sim", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "8"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"leftylist", "//", "Keys"}], ",", 
     RowBox[{"Cases", "[", 
      RowBox[{"membraneindex", ",", 
       RowBox[{
        RowBox[{"PatternSequence", "[", 
         RowBox[{"_", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"_", ",", "_", ",", "y_", ",", "\"\<lefty\>\""}], "}"}]}], 
         "]"}], "\[RuleDelayed]", " ", "y"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6921929842504344`*^9, 3.6921929970499687`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "19", ",", "157"}], "}"}]], "Output",
 CellChangeTimes->{{3.692192990666665*^9, 3.6921929973036222`*^9}, 
   3.6921935987954597`*^9, 3.692194442360813*^9, 3.6921949445221467`*^9, 
   3.6949472358826823`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ndead", " ", "=", " ", 
  RowBox[{
   RowBox[{"sim", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "7"}], "]"}], "]"}], "-", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sort", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"nodallist", "//", "Keys"}], ",", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{"membraneindex", ",", 
           RowBox[{"PatternSequence", "[", 
            RowBox[{"_", "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{"_", ",", "_", ",", "_", ",", "\"\<nodal\>\""}], 
              "}"}]}], "]"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2", ",", "3"}], "]"}], "]"}]}], "]"}]}], "//", 
     "Length"}], ")"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"dead", " ", "nodal"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6904810532777667`*^9, 3.6904810732358093`*^9}, {
  3.690481202048856*^9, 3.690481213877593*^9}, {3.6921858136250105`*^9, 
  3.692185844723971*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.690481063058645*^9, 3.690481073517874*^9}, 
   3.690481475401631*^9, 3.6904817717088375`*^9, 3.6905478108660154`*^9, 
   3.6911781541540413`*^9, 3.6912272107822294`*^9, 3.691227671432455*^9, 
   3.6912389476045265`*^9, 3.692099340517971*^9, 3.6921828272767925`*^9, 
   3.6921858596647234`*^9, 3.6921872269301567`*^9, 3.69218780288253*^9, 
   3.692188402813734*^9, 3.692189216198032*^9, 3.6921897349940834`*^9, 
   3.6921902579829583`*^9, 3.6921907831155453`*^9, 3.6921913844211836`*^9, 
   3.6921923730166483`*^9, 3.6921935986795397`*^9, 3.6921944422386403`*^9, 
   3.6921949443906317`*^9, 3.6949472358826823`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ldead", " ", "=", " ", 
  RowBox[{
   RowBox[{"sim", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "8"}], "]"}], "]"}], "-", 
   RowBox[{"(", 
    RowBox[{"Length", "@", 
     RowBox[{"Sort", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"leftylist", "//", "Keys"}], ",", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{"membraneindex", ",", 
           RowBox[{"PatternSequence", "[", 
            RowBox[{"_", "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{"_", ",", "_", ",", "_", ",", "\"\<lefty\>\""}], 
              "}"}]}], "]"}]}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2", ",", "3"}], "]"}], "]"}]}], "]"}]}]}], 
    ")"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"dead", " ", "lefty"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.690478841918127*^9, 3.6904788665807123`*^9}, {
  3.6904810870346603`*^9, 3.6904810974623547`*^9}, {3.6904811924054155`*^9, 
  3.690481196549673*^9}, {3.69218303993449*^9, 3.69218304374859*^9}, {
  3.6921839601139154`*^9, 3.6921839641965475`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.6904788484647713`*^9, 3.6904788669120245`*^9}, 
   3.6904799609344335`*^9, 3.690481097746602*^9, 3.6904814754176216`*^9, 
   3.6904817717193446`*^9, 3.6905478108816566`*^9, 3.6911781541615467`*^9, 
   3.6912272107837315`*^9, 3.69122767144808*^9, 3.6912389476115313`*^9, 
   3.6920993408763094`*^9, 3.6921828272924175`*^9, 3.6921829837493334`*^9, {
   3.6921830407342305`*^9, 3.692183044002289*^9}, 3.692183964796362*^9, 
   3.6921872269301567`*^9, 3.6921878028940516`*^9, 3.6921884028257427`*^9, 
   3.692189216198032*^9, 3.6921897350098095`*^9, 3.692190257993466*^9, 
   3.692190783131153*^9, 3.6921913844316874`*^9, 3.6921923730166483`*^9, 
   3.6921935986951513`*^9, 3.6921944422552967`*^9, 3.6921949444062595`*^9, 
   3.694947235898308*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["others", "Section",
 CellChangeTimes->{{3.692195517463103*^9, 3.692195525243846*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Differences", "@", "tracknodal"}], "//", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{"#", ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", "Positive", ")"}]}]}], "]"}], "&"}]}], "//", "Total", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "a", " ", "particle", " ", "is", " ", "produced", " ", "and", 
     " ", "destroyed", " ", "in", " ", "the", " ", "same", " ", "iteration"}],
     ",", " ", 
    RowBox[{
     RowBox[{
     "then", " ", "neither", " ", "the", " ", "production", " ", "nor", " ", 
      "the", " ", "death", " ", "event", " ", "gets", " ", 
      RowBox[{"recorded", ".", " ", "For"}], " ", "instance", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", " ", "existing", " ", "particles"}], " ", "+", 
            RowBox[{"1", " ", "produced"}], " ", "-", 
            RowBox[{"1", " ", "destroyed"}]}], ")"}], " ", "\[Rule]", " ", 
          "a"}]}], "}"}], ".", " ", "The"}], " ", "simulation", " ", "is", 
      " ", "correct"}], ";", " ", 
     RowBox[{
     "only", " ", "that", " ", "there", " ", "is", " ", "currently", " ", 
      "no", " ", "means", " ", "to", " ", "record", " ", "death", " ", 
      "event", " ", 
      RowBox[{"explicitly", ".", " ", "Always"}], " ", "look", " ", "at", " ",
       "indices", " ", "to", " ", "determine", " ", "how", " ", "many", " ", 
      "particles", " ", "died"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6904803860465755`*^9, 3.690480386915635*^9}, {
  3.690480528715151*^9, 3.6904805720359535`*^9}, {3.690482056359003*^9, 
  3.690482068338826*^9}, {3.6921956067283773`*^9, 3.692195696478916*^9}, {
  3.6921957458292236`*^9, 3.692196001204347*^9}}],

Cell[BoxData["236"], "Output",
 CellChangeTimes->{
  3.69048038941381*^9, {3.6904805290147676`*^9, 3.6904805723356843`*^9}, 
   3.6904814754176216`*^9, 3.690481771730352*^9, 3.690482029776411*^9, 
   3.6904820744900503`*^9, 3.6905478108816566`*^9, 3.691178154170553*^9, 
   3.6912272107837315`*^9, 3.69122767144808*^9, 3.6912389476115313`*^9, 
   3.69209934088629*^9, 3.692182827309548*^9, 3.6921872269457507`*^9, 
   3.6921878029065647`*^9, 3.6921884028377523`*^9, 3.6921892162201457`*^9, 
   3.6921897350098095`*^9, 3.692190258005992*^9, 3.692190783131153*^9, 
   3.692191384444687*^9, 3.692192373032611*^9, 3.6921935986951513`*^9, 
   3.6921944422602997`*^9, 3.6921949444062595`*^9, 3.694947235898308*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Total", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{"#", ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", "Positive", ")"}]}]}], "]"}]}], "&"}], "@", 
  RowBox[{"Differences", "@", "tracklefty"}]}]], "Input",
 CellChangeTimes->{{3.6904792843722954`*^9, 3.6904793171642017`*^9}, {
   3.690479355502315*^9, 3.690479356349211*^9}, 3.690480592502286*^9, {
   3.690481984965585*^9, 3.6904820206760607`*^9}}],

Cell[BoxData["235"], "Output",
 CellChangeTimes->{{3.6904792892554073`*^9, 3.6904793176793404`*^9}, 
   3.6904793567826138`*^9, 3.690479961003431*^9, 3.6904805946499257`*^9, 
   3.6904814754332657`*^9, 3.6904817717428617`*^9, {3.690481994393397*^9, 
   3.6904820210760555`*^9}, 3.6904820760361223`*^9, 3.6905478108972645`*^9, 
   3.691178154178559*^9, 3.6912272107996764`*^9, 3.6912276714637003`*^9, 
   3.691238947627159*^9, 3.692099340896798*^9, 3.692182827314557*^9, 
   3.6921829941736097`*^9, 3.692187226961395*^9, 3.6921878029165645`*^9, 
   3.6921884028477592`*^9, 3.6921892162201457`*^9, 3.692189735025442*^9, 
   3.692190258018985*^9, 3.692190783146778*^9, 3.6921913844572105`*^9, 
   3.69219237304823*^9, 3.692193598710777*^9, 3.6921944422602997`*^9, 
   3.692194944421886*^9, 3.694947235898308*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Differences", "@", "tracknodal"}], "//", "Counts"}]], "Input",
 CellChangeTimes->{{3.692186028203766*^9, 3.6921861096628275`*^9}, {
  3.692192709698702*^9, 3.6921927139989977`*^9}, {3.6921961091024976`*^9, 
  3.6921961448832016`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", "2774"}], ",", 
   RowBox[{"1", "\[Rule]", "212"}], ",", 
   RowBox[{"2", "\[Rule]", "12"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "\[Rule]", "1"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.6921860209189386`*^9, {3.6921860564977922`*^9, 3.6921861098848977`*^9}, 
   3.6921872269926257`*^9, 3.6921878029515896`*^9, 3.6921884028716917`*^9, 
   3.692189216267026*^9, 3.6921897350566926`*^9, 3.692190258040638*^9, 
   3.692190783178032*^9, 3.6921913844793587`*^9, 3.6921923730794854`*^9, {
   3.692192711098503*^9, 3.692192714283847*^9}, 3.692193598726421*^9, 
   3.6921944422918177`*^9, 3.6921949444531355`*^9, {3.69219611075187*^9, 
   3.6921961451065063`*^9}, 3.694947235913947*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Differences", "@", "tracklefty"}], "//", "Counts"}]], "Input",
 CellChangeTimes->{{3.6921860894489794`*^9, 3.692186101147825*^9}, {
  3.692192705883854*^9, 3.69219271692879*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", "2774"}], ",", 
   RowBox[{"1", "\[Rule]", "211"}], ",", 
   RowBox[{"2", "\[Rule]", "12"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "\[Rule]", "2"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.6921860907017403`*^9, 3.692186101485633*^9}, 
   3.6921872270092688`*^9, 3.6921878029635973`*^9, 3.6921884028873377`*^9, 
   3.692189216267026*^9, 3.6921897350723267`*^9, 3.6921902580562735`*^9, 
   3.692190783199689*^9, 3.692191384494979*^9, 3.692192373095111*^9, {
   3.692192707415106*^9, 3.692192717244336*^9}, 3.6921935987420435`*^9, 
   3.6921944422918177`*^9, 3.6921949444531355`*^9, 3.694947235913947*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"sim", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "7"}], "]"}], "]"}], "-", 
    RowBox[{"tracknodal", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ")"}], " ", "===", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"sim", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "8"}], "]"}], "]"}], "-", 
    RowBox[{"tracklefty", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "same", " ", "production", " ", "for", " ", "nodal", " ", "and", " ", 
    "lefty"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690480204921608*^9, 3.690480221004689*^9}, {
  3.690480266295929*^9, 3.690480297984902*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6904802859589806`*^9, 3.6904802982376947`*^9}, 
   3.6904814754488735`*^9, 3.690481771764376*^9, 3.690547810912903*^9, 
   3.6911781541865644`*^9, 3.691227210815301*^9, 3.6912276714637003`*^9, 
   3.691238947642784*^9, 3.6920993409164124`*^9, 3.6921828273302107`*^9, 
   3.692187226961395*^9, 3.6921878029285727`*^9, 3.6921884028557644`*^9, 
   3.692189216235773*^9, 3.692189735041049*^9, 3.692190258024999*^9, 
   3.692190783162421*^9, 3.6921913844637146`*^9, 3.69219237304823*^9, 
   3.692193598710777*^9, 3.6921944422761917`*^9, 3.6921949444375105`*^9, 
   3.6949472359295764`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tracknodal", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "-", 
   RowBox[{"tracklefty", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "===", " ", 
  RowBox[{
   RowBox[{"sim", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "7"}], "]"}], "]"}], "-", 
   RowBox[{"sim", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "8"}], "]"}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"constant", " ", "index", " ", "difference", " ", 
     RowBox[{"b", "/", "w"}], " ", "nodal", " ", "and", " ", 
     RowBox[{"lefty", ".", " ", "same"}], " ", "as", " ", "above"}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.69048041020999*^9, 3.690480424307161*^9}, {
  3.690480457962567*^9, 3.690480484077834*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6904804166537986`*^9, 3.690480424522617*^9}, 
   3.690480459483472*^9, 3.690481475480134*^9, 3.6904817717918987`*^9, 
   3.6905478109300456`*^9, 3.691178154202207*^9, 3.6912272108309517`*^9, 
   3.6912276714793158`*^9, 3.691238947658409*^9, 3.692099340935436*^9, 
   3.692182827345823*^9, 3.6921872269770203`*^9, 3.6921878029410815`*^9, 
   3.6921884028557644`*^9, 3.692189216251412*^9, 3.6921897350566926`*^9, 
   3.692190258040638*^9, 3.692190783162421*^9, 3.6921913844793587`*^9, 
   3.6921923730638556`*^9, 3.692193598726421*^9, 3.6921944422761917`*^9, 
   3.6921949444375105`*^9, 3.6949472359295764`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"tracknodal", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", 
  RowBox[{"tracklefty", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.6921887998689847`*^9, 3.692189216282651*^9, 
  3.69218973509196*^9, 3.6921902580718884`*^9, 3.692190783215582*^9, 
  3.692191384510604*^9, 3.692192373095111*^9, 3.6921935987420435`*^9, 
  3.6921944423074427`*^9, 3.692194944468761*^9, 3.694947235945196*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sim", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "7"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6921887467096033`*^9, 3.69218875015495*^9}}],

Cell[BoxData["267"], "Output",
 CellChangeTimes->{3.69218875203833*^9, 3.692189216298276*^9, 
  3.692189735094463*^9, 3.6921902580875177`*^9, 3.692190783215582*^9, 
  3.692191384526229*^9, 3.6921923731167617`*^9, 3.692193598761193*^9, 
  3.6921944423074427`*^9, 3.692194944468761*^9, 3.694947235945196*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sim", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "8"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.69218726463748*^9, 3.692187267121313*^9}, {
  3.6921884836049953`*^9, 3.6921884957696486`*^9}, {3.6921887163740387`*^9, 
  3.6921887167899632`*^9}}],

Cell[BoxData["262"], "Output",
 CellChangeTimes->{3.6921884960694895`*^9, 3.692188717158506*^9, 
  3.692189216317425*^9, 3.6921897351101017`*^9, 3.6921902581031384`*^9, 
  3.692190783231207*^9, 3.692191384541854*^9, 3.6921923731167617`*^9, 
  3.692193598764196*^9, 3.6921944423230543`*^9, 3.6921949444893923`*^9, 
  3.694947235945196*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"nodallist", "//", "Keys"}], ",", 
    RowBox[{"Cases", "[", 
     RowBox[{"membraneindex", ",", 
      RowBox[{
       RowBox[{"PatternSequence", "[", 
        RowBox[{"_", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_", ",", "y_", ",", "\"\<nodal\>\""}], "}"}]}], 
        "]"}], "\[RuleDelayed]", " ", "y"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.69218850731073*^9, 3.6921885663156986`*^9}, {
  3.6921886467379913`*^9, 3.692188681684983*^9}, {3.692188737688657*^9, 
  3.692188738726574*^9}}],

Cell[BoxData["267"], "Output",
 CellChangeTimes->{{3.692188674056362*^9, 3.6921886822218623`*^9}, 
   3.6921892163199253`*^9, 3.6921897351257315`*^9, 3.6921902581031384`*^9, 
   3.692190783246814*^9, 3.692191384541854*^9, 3.692192373132646*^9, 
   3.692193598764196*^9, 3.6921944423230543`*^9, 3.6921949444908934`*^9, 
   3.694947235964327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"leftylist", "//", "Keys"}], ",", 
    RowBox[{"Cases", "[", 
     RowBox[{"membraneindex", ",", 
      RowBox[{
       RowBox[{"PatternSequence", "[", 
        RowBox[{"_", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_", ",", "y_", ",", "\"\<lefty\>\""}], "}"}]}], 
        "]"}], "\[RuleDelayed]", " ", "y"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.692188756838103*^9, 3.6921887614551964`*^9}}],

Cell[BoxData["262"], "Output",
 CellChangeTimes->{3.6921887618064475`*^9, 3.6921892163356276`*^9, 
  3.6921897351257315`*^9, 3.6921902581252866`*^9, 3.692190783262453*^9, 
  3.692191384563983*^9, 3.69219237314827*^9, 3.6921935987798347`*^9, 
  3.6921944423386793`*^9, 3.6921949444908934`*^9, 3.6949472359673357`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1584, 817},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2454, 48, 218, "Input"],
Cell[CellGroupData[{
Cell[3037, 72, 134, 1, 59, "Subsection"],
Cell[3174, 75, 670, 16, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3881, 96, 122, 1, 59, "Subsection"],
Cell[4006, 99, 821, 21, 56, "Input"],
Cell[4830, 122, 2208, 65, 149, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7075, 192, 137, 1, 59, "Subsection"],
Cell[7215, 195, 10111, 241, 701, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17363, 441, 184, 2, 59, "Subsection"],
Cell[CellGroupData[{
Cell[17572, 447, 328, 4, 49, "Subsubsection"],
Cell[17903, 453, 5127, 92, 172, "Input"],
Cell[23033, 547, 1208, 22, 103, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24278, 574, 96, 1, 49, "Subsubsection"],
Cell[24377, 577, 4490, 96, 287, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28904, 678, 115, 1, 49, "Subsubsection"],
Cell[29022, 681, 1090, 27, 126, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30149, 713, 228, 3, 49, "Subsubsection"],
Cell[30380, 718, 1698, 45, 172, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32115, 768, 242, 3, 49, "Subsubsection"],
Cell[32360, 773, 6622, 142, 425, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39019, 920, 397, 5, 49, "Subsubsection"],
Cell[39419, 927, 9498, 182, 333, "Input"],
Cell[48920, 1111, 5082, 106, 287, "Input"],
Cell[54005, 1219, 2449, 52, 172, "Input"],
Cell[56457, 1273, 5666, 124, 287, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62160, 1402, 228, 4, 49, "Subsubsection"],
Cell[62391, 1408, 995, 25, 172, "Input"],
Cell[63389, 1435, 11421, 220, 425, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74847, 1660, 135, 2, 49, "Subsubsection"],
Cell[74985, 1664, 4514, 97, 264, "Input"],
Cell[79502, 1763, 7670, 148, 448, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87209, 1916, 236, 3, 49, "Subsubsection"],
Cell[87448, 1921, 6637, 119, 195, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94134, 2046, 103, 1, 59, "Subsection"],
Cell[94240, 2049, 32231, 586, 1322, "Input"],
Cell[126474, 2637, 3513, 89, 218, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130024, 2731, 157, 2, 59, "Subsection"],
Cell[130184, 2735, 148, 3, 36, "Input"],
Cell[CellGroupData[{
Cell[130357, 2742, 14002, 283, 862, "Input"],
Cell[144362, 3027, 5501, 94, 729, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149912, 3127, 96, 1, 86, "Section"],
Cell[150011, 3130, 408, 11, 36, "Input"],
Cell[150422, 3143, 280, 7, 36, "Input"],
Cell[150705, 3152, 225, 6, 36, "Input"],
Cell[150933, 3160, 237, 6, 36, "Input"],
Cell[151173, 3168, 661, 14, 36, "Input"],
Cell[151837, 3184, 370, 8, 36, "Input"],
Cell[CellGroupData[{
Cell[152232, 3196, 420, 9, 36, "Input"],
Cell[152655, 3207, 803, 13, 36, "Output"]
}, Open  ]],
Cell[153473, 3223, 485, 12, 36, "Input"],
Cell[153961, 3237, 420, 9, 36, "Input"],
Cell[CellGroupData[{
Cell[154406, 3250, 372, 9, 36, "Input"],
Cell[154781, 3261, 840, 16, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155658, 3282, 2418, 47, 83, "Input"],
Cell[158079, 3331, 18408, 319, 468, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176536, 3656, 315, 4, 86, "Section"],
Cell[CellGroupData[{
Cell[176876, 3664, 728, 20, 56, "Input"],
Cell[177607, 3686, 220, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177864, 3695, 730, 20, 56, "Input"],
Cell[178597, 3717, 256, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178890, 3727, 1053, 28, 80, "Input"],
Cell[179946, 3757, 665, 9, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180648, 3771, 1145, 29, 80, "Input"],
Cell[181796, 3802, 795, 11, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182640, 3819, 91, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[182756, 3824, 1818, 41, 106, "Input"],
Cell[184577, 3867, 708, 10, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185322, 3882, 453, 11, 36, "Input"],
Cell[185778, 3895, 809, 11, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186624, 3911, 269, 5, 36, "Input"],
Cell[186896, 3918, 790, 15, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187723, 3938, 213, 4, 36, "Input"],
Cell[187939, 3944, 710, 13, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188686, 3962, 745, 22, 56, "Input"],
Cell[189434, 3986, 638, 9, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190109, 4000, 785, 21, 56, "Input"],
Cell[190897, 4023, 663, 9, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191597, 4037, 171, 5, 36, "Input"],
Cell[191771, 4044, 306, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192114, 4053, 170, 4, 36, "Input"],
Cell[192287, 4059, 306, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192630, 4068, 274, 6, 36, "Input"],
Cell[192907, 4076, 338, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193282, 4086, 622, 15, 36, "Input"],
Cell[193907, 4103, 344, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194288, 4113, 523, 13, 36, "Input"],
Cell[194814, 4128, 316, 4, 36, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

